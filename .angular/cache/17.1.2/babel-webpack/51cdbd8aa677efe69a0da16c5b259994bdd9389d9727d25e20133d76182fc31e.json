{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-dropzone\";\nfunction DefaultFileUploadComponent_For_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-dropzone-preview\", 5);\n    i0.ɵɵlistener(\"removed\", function DefaultFileUploadComponent_For_16_Template_ngx_dropzone_preview_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const f_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onRemove(f_r1));\n    });\n    i0.ɵɵelementStart(1, \"ngx-dropzone-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const f_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", f_r1.name, \" (\", f_r1.type, \")\");\n  }\n}\nexport class DefaultFileUploadComponent {\n  constructor() {\n    this.files = [];\n  }\n  onSelect(event) {\n    this.files.push(...event.addedFiles);\n  }\n  onRemove(event) {\n    this.files.splice(this.files.indexOf(event), 1);\n  }\n  static #_ = this.ɵfac = function DefaultFileUploadComponent_Factory(t) {\n    return new (t || DefaultFileUploadComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DefaultFileUploadComponent,\n    selectors: [[\"app-default-file-upload\"]],\n    decls: 17,\n    vars: 0,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"f-m-light\", \"mt-1\"], [1, \"card-body\"], [3, \"change\"], [3, \"removable\", \"removed\"], [3, \"removable\"]],\n    template: function DefaultFileUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\");\n        i0.ɵɵtext(3, \"Default File Upload\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5, \"We use the create method to turn a\");\n        i0.ɵɵelementStart(6, \"code\");\n        i0.ɵɵtext(7, \" <input type=\\\"file\\\">\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \" into a FilePond drop area.\");\n        i0.ɵɵelementStart(9, \"code\");\n        i0.ɵɵtext(10, \"[https://pqina.nl/filepond/]\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"ngx-dropzone\", 4);\n        i0.ɵɵlistener(\"change\", function DefaultFileUploadComponent_Template_ngx_dropzone_change_12_listener($event) {\n          return ctx.onSelect($event);\n        });\n        i0.ɵɵelementStart(13, \"ngx-dropzone-label\");\n        i0.ɵɵtext(14, \"Drag & Drop your files or Browse\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵrepeaterCreate(15, DefaultFileUploadComponent_For_16_Template, 3, 3, \"ngx-dropzone-preview\", 6, i0.ɵɵrepeaterTrackByIdentity);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵrepeater(ctx.files);\n      }\n    },\n    dependencies: [i1.NgxDropzoneComponent, i1.NgxDropzoneLabelDirective, i1.NgxDropzonePreviewComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","DefaultFileUploadComponent_For_16_Template_ngx_dropzone_preview_removed_0_listener","restoredCtx","ɵɵrestoreView","_r7","f_r1","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","onRemove","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate2","name","type","DefaultFileUploadComponent","constructor","files","onSelect","event","push","addedFiles","splice","indexOf","_","_2","selectors","decls","vars","consts","template","DefaultFileUploadComponent_Template","rf","ctx","DefaultFileUploadComponent_Template_ngx_dropzone_change_12_listener","$event","ɵɵrepeaterCreate","DefaultFileUploadComponent_For_16_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater"],"sources":["C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\bonus-ui\\dropzone\\default-file-upload\\default-file-upload.component.ts","C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\bonus-ui\\dropzone\\default-file-upload\\default-file-upload.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgxDropzoneChangeEvent } from 'ngx-dropzone';\n\n@Component({\n  selector: 'app-default-file-upload',\n  templateUrl: './default-file-upload.component.html',\n  styleUrls: ['./default-file-upload.component.scss']\n})\n\nexport class DefaultFileUploadComponent {\n\n  public files: File[] = [];\n\n  onSelect(event: NgxDropzoneChangeEvent) {\n    this.files.push(...event.addedFiles);\n  }\n\n  onRemove(event: File) {\n\t\tthis.files.splice(this.files.indexOf(event), 1);\n\t}\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h4>Default File Upload</h4>\n        <p class=\"f-m-light mt-1\">We use the create method to turn a<code> &lt;input type=\"file\"&gt;</code> into a\n            FilePond drop area.<code>[https://pqina.nl/filepond/]</code></p>\n    </div>\n    <div class=\"card-body\">\n        <ngx-dropzone (change)=\"onSelect($event)\">\n            <ngx-dropzone-label>Drag & Drop your files or Browse</ngx-dropzone-label>\n            @for (f of files; track f) {\n            <ngx-dropzone-preview [removable]=\"true\" (removed)=\"onRemove(f)\">\n                <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\n            </ngx-dropzone-preview>\n            }\n        </ngx-dropzone>\n    </div>\n</div>"],"mappings":";;;;;ICUYA,EAAA,CAAAC,cAAA,8BAAiE;IAAxBD,EAAA,CAAAE,UAAA,qBAAAC,mFAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,IAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAWV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,QAAA,CAAAL,IAAA,CAAW;IAAA,EAAC;IAC5DP,EAAA,CAAAC,cAAA,yBAAoB;IAAAD,EAAA,CAAAa,MAAA,GAA2B;IAAAb,EAAA,CAAAc,YAAA,EAAqB;;;;IADlDd,EAAA,CAAAe,UAAA,mBAAkB;IAChBf,EAAA,CAAAgB,SAAA,GAA2B;IAA3BhB,EAAA,CAAAiB,kBAAA,KAAAV,IAAA,CAAAW,IAAA,QAAAX,IAAA,CAAAY,IAAA,MAA2B;;;ADF/D,OAAM,MAAOC,0BAA0B;EANvCC,YAAA;IAQS,KAAAC,KAAK,GAAW,EAAE;;EAEzBC,QAAQA,CAACC,KAA6B;IACpC,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,GAAGD,KAAK,CAACE,UAAU,CAAC;EACtC;EAEAd,QAAQA,CAACY,KAAW;IACpB,IAAI,CAACF,KAAK,CAACK,MAAM,CAAC,IAAI,CAACL,KAAK,CAACM,OAAO,CAACJ,KAAK,CAAC,EAAE,CAAC,CAAC;EAChD;EAAC,QAAAK,CAAA,G;qBAVWT,0BAA0B;EAAA;EAAA,QAAAU,EAAA,G;UAA1BV,0BAA0B;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTvCrC,EAAA,CAAAC,cAAA,aAAkB;QAEND,EAAA,CAAAa,MAAA,0BAAmB;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAC5Bd,EAAA,CAAAC,cAAA,WAA0B;QAAAD,EAAA,CAAAa,MAAA,yCAAkC;QAAAb,EAAA,CAAAC,cAAA,WAAM;QAACD,EAAA,CAAAa,MAAA,6BAAyB;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAACd,EAAA,CAAAa,MAAA,kCAC7E;QAAAb,EAAA,CAAAC,cAAA,WAAM;QAAAD,EAAA,CAAAa,MAAA,oCAA4B;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAEpEd,EAAA,CAAAC,cAAA,cAAuB;QACLD,EAAA,CAAAE,UAAA,oBAAAqC,oEAAAC,MAAA;UAAA,OAAUF,GAAA,CAAAf,QAAA,CAAAiB,MAAA,CAAgB;QAAA,EAAC;QACrCxC,EAAA,CAAAC,cAAA,0BAAoB;QAAAD,EAAA,CAAAa,MAAA,wCAAgC;QAAAb,EAAA,CAAAc,YAAA,EAAqB;QACzEd,EAAA,CAAAyC,gBAAA,KAAAC,0CAAA,mCAAA1C,EAAA,CAAA2C,yBAAA,CAIC;QACL3C,EAAA,CAAAc,YAAA,EAAe;;;QALXd,EAAA,CAAAgB,SAAA,IAIC;QAJDhB,EAAA,CAAA4C,UAAA,CAAAN,GAAA,CAAAhB,KAAA,CAIC"},"metadata":{},"sourceType":"module","externalDependencies":[]}