{"ast":null,"code":"import { radio } from '../../../../shared/data/data/ui-kits/list';\nimport * as i0 from \"@angular/core\";\nfunction RadiosComponent_For_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 5);\n    i0.ɵɵelement(1, \"input\", 6);\n    i0.ɵɵelementStart(2, \"label\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵclassMapInterpolate1(\"form-check-input me-1 checkbox-\", item_r1.color, \"\");\n    i0.ɵɵpropertyInterpolate(\"id\", item_r1.id);\n    i0.ɵɵproperty(\"checked\", item_r1.active);\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"for\", item_r1.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(item_r1.name);\n  }\n}\nexport class RadiosComponent {\n  constructor() {\n    this.radio = radio;\n  }\n  static #_ = this.ɵfac = function RadiosComponent_Factory(t) {\n    return new (t || RadiosComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RadiosComponent,\n    selectors: [[\"app-radios\"]],\n    decls: 13,\n    vars: 0,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"f-m-light\", \"mt-1\"], [1, \"card-body\"], [1, \"list-group\"], [1, \"list-group-item\"], [\"type\", \"radio\", \"name\", \"listGroupRadio\", 3, \"id\", \"checked\"], [1, \"form-check-label\", \"mb-0\", 3, \"for\"], [\"class\", \"list-group-item\"]],\n    template: function RadiosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\");\n        i0.ɵɵtext(3, \"Lists with radios\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5, \" Use the \");\n        i0.ɵɵelementStart(6, \"code\");\n        i0.ɵɵtext(7, \".form-check-input \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"to check your radio buttons.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"ul\", 4);\n        i0.ɵɵrepeaterCreate(11, RadiosComponent_For_12_Template, 4, 7, \"li\", 8, i0.ɵɵrepeaterTrackByIdentity);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵrepeater(ctx.radio);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["radio","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵclassMapInterpolate1","item_r1","color","ɵɵpropertyInterpolate","id","ɵɵproperty","active","ɵɵtextInterpolate","name","RadiosComponent","constructor","_","_2","selectors","decls","vars","consts","template","RadiosComponent_Template","rf","ctx","ɵɵrepeaterCreate","RadiosComponent_For_12_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater"],"sources":["C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\ui-kits\\lists\\radios\\radios.component.ts","C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\ui-kits\\lists\\radios\\radios.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { radio } from '../../../../shared/data/data/ui-kits/list';\n\n@Component({\n  selector: 'app-radios',\n  templateUrl: './radios.component.html',\n  styleUrls: ['./radios.component.scss']\n})\n\nexport class RadiosComponent {\n\n  public radio = radio;\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h4>Lists with radios</h4>\n        <p class=\"f-m-light mt-1\">\n            Use the <code>.form-check-input </code>to check your radio buttons.</p>\n    </div>\n    <div class=\"card-body\">\n        <ul class=\"list-group\">\n            @for (item of radio; track item) {\n            <li class=\"list-group-item\">\n                <input class=\"form-check-input me-1 checkbox-{{item.color}}\" id=\"{{item.id}}\" type=\"radio\"\n                    name=\"listGroupRadio\" [checked]=\"item.active\">\n                <label class=\"form-check-label mb-0\" for=\"{{item.id}}\">{{item.name}}</label>\n            </li>\n            }\n        </ul>\n    </div>\n</div>"],"mappings":"AACA,SAASA,KAAK,QAAQ,2CAA2C;;;;ICQrDC,EAAA,CAAAC,cAAA,YAA4B;IACxBD,EAAA,CAAAE,SAAA,eACkD;IAClDF,EAAA,CAAAC,cAAA,eAAuD;IAAAD,EAAA,CAAAG,MAAA,GAAa;IAAAH,EAAA,CAAAI,YAAA,EAAQ;;;;IAFrEJ,EAAA,CAAAK,SAAA,EAAqD;IAArDL,EAAA,CAAAM,sBAAA,oCAAAC,OAAA,CAAAC,KAAA,KAAqD;IAACR,EAAA,CAAAS,qBAAA,OAAAF,OAAA,CAAAG,EAAA,CAAgB;IACnDV,EAAA,CAAAW,UAAA,YAAAJ,OAAA,CAAAK,MAAA,CAAuB;IACZZ,EAAA,CAAAK,SAAA,EAAiB;IAAjBL,EAAA,CAAAS,qBAAA,QAAAF,OAAA,CAAAG,EAAA,CAAiB;IAACV,EAAA,CAAAK,SAAA,EAAa;IAAbL,EAAA,CAAAa,iBAAA,CAAAN,OAAA,CAAAO,IAAA,CAAa;;;ADHpF,OAAM,MAAOC,eAAe;EAN5BC,YAAA;IAQS,KAAAjB,KAAK,GAAGA,KAAK;;EAErB,QAAAkB,CAAA,G;qBAJYF,eAAe;EAAA;EAAA,QAAAG,EAAA,G;UAAfH,eAAe;IAAAI,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCT5BzB,EAAA,CAAAC,cAAA,aAAkB;QAEND,EAAA,CAAAG,MAAA,wBAAiB;QAAAH,EAAA,CAAAI,YAAA,EAAK;QAC1BJ,EAAA,CAAAC,cAAA,WAA0B;QACtBD,EAAA,CAAAG,MAAA,gBAAQ;QAAAH,EAAA,CAAAC,cAAA,WAAM;QAAAD,EAAA,CAAAG,MAAA,yBAAkB;QAAAH,EAAA,CAAAI,YAAA,EAAO;QAAAJ,EAAA,CAAAG,MAAA,mCAA4B;QAAAH,EAAA,CAAAI,YAAA,EAAI;QAE/EJ,EAAA,CAAAC,cAAA,aAAuB;QAEfD,EAAA,CAAA2B,gBAAA,KAAAC,+BAAA,iBAAA5B,EAAA,CAAA6B,yBAAA,CAMC;QACL7B,EAAA,CAAAI,YAAA,EAAK;;;QAPDJ,EAAA,CAAAK,SAAA,IAMC;QANDL,EAAA,CAAA8B,UAAA,CAAAJ,GAAA,CAAA3B,KAAA,CAMC"},"metadata":{},"sourceType":"module","externalDependencies":[]}