{"ast":null,"code":"import * as Data from '../../../../../shared/data/data/forms/chechbox-radio';\nimport * as i0 from \"@angular/core\";\nfunction BasicRadioAndCheckboxComponent_For_12_For_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"input\", 9);\n    i0.ɵɵelementStart(2, \"label\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const data_r7 = ctx.$implicit;\n    i0.ɵɵclassMapInterpolate1(\"form-check form-check-inline \", data_r7.class, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"id\", data_r7.id);\n    i0.ɵɵpropertyInterpolate(\"type\", data_r7.type);\n    i0.ɵɵproperty(\"checked\", data_r7.active);\n    i0.ɵɵadvance();\n    i0.ɵɵpropertyInterpolate(\"for\", data_r7.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(data_r7.text);\n  }\n}\nfunction BasicRadioAndCheckboxComponent_For_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"h6\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 8);\n    i0.ɵɵrepeaterCreate(5, BasicRadioAndCheckboxComponent_For_12_For_6_Template, 4, 8, \"div\", 11, i0.ɵɵrepeaterTrackByIdentity);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r1.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵrepeater(item_r1.data);\n  }\n}\nexport class BasicRadioAndCheckboxComponent {\n  constructor() {\n    this.basicRadioAndCheckbox = Data.basicRadioAndCheckbox;\n  }\n  static #_ = this.ɵfac = function BasicRadioAndCheckboxComponent_Factory(t) {\n    return new (t || BasicRadioAndCheckboxComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BasicRadioAndCheckboxComponent,\n    selectors: [[\"app-basic-radio-and-checkbox\"]],\n    decls: 13,\n    vars: 0,\n    consts: [[1, \"card\", \"height-equal\"], [1, \"card-header\"], [1, \"f-m-light\", \"mt-1\"], [1, \"card-body\"], [1, \"row\", \"g-3\"], [1, \"col-md-12\"], [1, \"card-wrapper\", \"border\", \"rounded-3\", \"checkbox-checked\"], [1, \"sub-title\"], [1, \"form-check-size\"], [\"name\", \"radio5\", 1, \"form-check-input\", 3, \"id\", \"type\", \"checked\"], [1, \"form-check-label\", 3, \"for\"], [3, \"class\"], [\"class\", \"col-md-12\"]],\n    template: function BasicRadioAndCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\");\n        i0.ɵɵtext(3, \"Basic radio and checkbox\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5, \" Use the \");\n        i0.ɵɵelementStart(6, \"code\");\n        i0.ɵɵtext(7, \".form-check-inline \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"through display inline.\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"div\", 4);\n        i0.ɵɵrepeaterCreate(11, BasicRadioAndCheckboxComponent_For_12_Template, 7, 1, \"div\", 12, i0.ɵɵrepeaterTrackByIdentity);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵrepeater(ctx.basicRadioAndCheckbox);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Data","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵclassMapInterpolate1","data_r7","class","ɵɵadvance","ɵɵpropertyInterpolate","id","type","ɵɵproperty","active","ɵɵtextInterpolate","text","ɵɵrepeaterCreate","BasicRadioAndCheckboxComponent_For_12_For_6_Template","ɵɵrepeaterTrackByIdentity","item_r1","title","ɵɵrepeater","data","BasicRadioAndCheckboxComponent","constructor","basicRadioAndCheckbox","_","_2","selectors","decls","vars","consts","template","BasicRadioAndCheckboxComponent_Template","rf","ctx","BasicRadioAndCheckboxComponent_For_12_Template"],"sources":["C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\forms\\form-controls\\checkbox-radio\\basic-radio-and-checkbox\\basic-radio-and-checkbox.component.ts","C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\forms\\form-controls\\checkbox-radio\\basic-radio-and-checkbox\\basic-radio-and-checkbox.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport * as Data from '../../../../../shared/data/data/forms/chechbox-radio';\n\n@Component({\n  selector: 'app-basic-radio-and-checkbox',\n  templateUrl: './basic-radio-and-checkbox.component.html',\n  styleUrls: ['./basic-radio-and-checkbox.component.scss']\n})\n\n\nexport class BasicRadioAndCheckboxComponent {\n\n  public basicRadioAndCheckbox = Data.basicRadioAndCheckbox;\n\n}\n","<div class=\"card height-equal\">\n  <div class=\"card-header\">\n    <h4>Basic radio and checkbox</h4>\n    <p class=\"f-m-light mt-1\">\n      Use the <code>.form-check-inline </code>through display inline.</p>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row g-3\">\n      @for (item of basicRadioAndCheckbox; track item) {\n      <div class=\"col-md-12\">\n        <div class=\"card-wrapper border rounded-3 checkbox-checked\">\n          <h6 class=\"sub-title\">{{item.title}}</h6>\n          <div class=\"form-check-size\">\n            @for (data of item.data; track data) {\n            <div class=\"form-check form-check-inline {{data.class}}\">\n              <input class=\"form-check-input\" id=\"{{data.id}}\" type=\"{{data.type}}\" [checked]=\"data.active\"\n                name=\"radio5\">\n              <label class=\"form-check-label\" for=\"{{data.id}}\">{{data.text}}</label>\n            </div>\n            }\n          </div>\n        </div>\n      </div>\n      }\n    </div>\n  </div>\n</div>"],"mappings":"AACA,OAAO,KAAKA,IAAI,MAAM,sDAAsD;;;;ICahEC,EAAA,CAAAC,cAAA,UAAyD;IACvDD,EAAA,CAAAE,SAAA,eACgB;IAChBF,EAAA,CAAAC,cAAA,gBAAkD;IAAAD,EAAA,CAAAG,MAAA,GAAa;IAAAH,EAAA,CAAAI,YAAA,EAAQ;;;;IAHpEJ,EAAA,CAAAK,sBAAA,kCAAAC,OAAA,CAAAC,KAAA,KAAmD;IACtBP,EAAA,CAAAQ,SAAA,EAAgB;IAAhBR,EAAA,CAAAS,qBAAA,OAAAH,OAAA,CAAAI,EAAA,CAAgB;IAACV,EAAA,CAAAS,qBAAA,SAAAH,OAAA,CAAAK,IAAA,CAAoB;IAACX,EAAA,CAAAY,UAAA,YAAAN,OAAA,CAAAO,MAAA,CAAuB;IAE7Db,EAAA,CAAAQ,SAAA,EAAiB;IAAjBR,EAAA,CAAAS,qBAAA,QAAAH,OAAA,CAAAI,EAAA,CAAiB;IAACV,EAAA,CAAAQ,SAAA,EAAa;IAAbR,EAAA,CAAAc,iBAAA,CAAAR,OAAA,CAAAS,IAAA,CAAa;;;;;IARvEf,EAAA,CAAAC,cAAA,aAAuB;IAEGD,EAAA,CAAAG,MAAA,GAAc;IAAAH,EAAA,CAAAI,YAAA,EAAK;IACzCJ,EAAA,CAAAC,cAAA,aAA6B;IAC3BD,EAAA,CAAAgB,gBAAA,IAAAC,oDAAA,mBAAAjB,EAAA,CAAAkB,yBAAA,CAMC;IACHlB,EAAA,CAAAI,YAAA,EAAM;;;;IATgBJ,EAAA,CAAAQ,SAAA,GAAc;IAAdR,EAAA,CAAAc,iBAAA,CAAAK,OAAA,CAAAC,KAAA,CAAc;IAElCpB,EAAA,CAAAQ,SAAA,GAMC;IANDR,EAAA,CAAAqB,UAAA,CAAAF,OAAA,CAAAG,IAAA,CAMC;;;ADTb,OAAM,MAAOC,8BAA8B;EAP3CC,YAAA;IASS,KAAAC,qBAAqB,GAAG1B,IAAI,CAAC0B,qBAAqB;;EAE1D,QAAAC,CAAA,G;qBAJYH,8BAA8B;EAAA;EAAA,QAAAI,EAAA,G;UAA9BJ,8BAA8B;IAAAK,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3ClC,EAAA,CAAAC,cAAA,aAA+B;QAEvBD,EAAA,CAAAG,MAAA,+BAAwB;QAAAH,EAAA,CAAAI,YAAA,EAAK;QACjCJ,EAAA,CAAAC,cAAA,WAA0B;QACxBD,EAAA,CAAAG,MAAA,gBAAQ;QAAAH,EAAA,CAAAC,cAAA,WAAM;QAAAD,EAAA,CAAAG,MAAA,0BAAmB;QAAAH,EAAA,CAAAI,YAAA,EAAO;QAAAJ,EAAA,CAAAG,MAAA,8BAAuB;QAAAH,EAAA,CAAAI,YAAA,EAAI;QAEvEJ,EAAA,CAAAC,cAAA,aAAuB;QAEnBD,EAAA,CAAAgB,gBAAA,KAAAoB,8CAAA,mBAAApC,EAAA,CAAAkB,yBAAA,CAeC;QACHlB,EAAA,CAAAI,YAAA,EAAM;;;QAhBJJ,EAAA,CAAAQ,SAAA,IAeC;QAfDR,EAAA,CAAAqB,UAAA,CAAAc,GAAA,CAAAV,qBAAA,CAeC"},"metadata":{},"sourceType":"module","externalDependencies":[]}