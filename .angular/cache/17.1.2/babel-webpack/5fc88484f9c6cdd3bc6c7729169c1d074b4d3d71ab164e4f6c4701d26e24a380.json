{"ast":null,"code":"import * as Data from '../../../../shared/data/data/ui-kits/accordion';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../shared/components/feather-icons/feather-icons.component\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nfunction SimpleAccordianComponent_For_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"h2\", 6)(2, \"button\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"app-feather-icons\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 9)(6, \"div\", 10);\n    i0.ɵɵelement(7, \"p\", 11);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const allData_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"collapsed\", allData_r1.panel !== \"First\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", allData_r1.title, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(\"svg-color\");\n    i0.ɵɵproperty(\"icons\", \"chevron-down\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", allData_r1.desc, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class SimpleAccordianComponent {\n  constructor() {\n    this.simpleAccordionData = Data.simpleAccordionData;\n  }\n  static #_ = this.ɵfac = function SimpleAccordianComponent_Factory(t) {\n    return new (t || SimpleAccordianComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SimpleAccordianComponent,\n    selectors: [[\"app-simple-accordian\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"f-m-light\", \"mt-1\"], [1, \"card-body\"], [\"id\", \"simpleaccordion\", \"ngbAccordion\", \"\", 1, \"accordion\", \"dark-accordion\", 3, \"closeOthers\"], [\"ngbAccordionItem\", \"\", 1, \"accordion-item\", 3, \"collapsed\"], [\"id\", \"headingOne\", 1, \"accordion-header\"], [\"type\", \"button\", \"ngbAccordionButton\", \"\", 1, \"accordion-button\", \"collapsed\", \"bg-light-primary\", \"txt-primary\", \"active\"], [3, \"icons\"], [\"id\", \"collapseOne\", \"ngbAccordionCollapse\", \"\", 1, \"accordion-collapse\", \"collapse\", \"show\"], [\"ngbAccordionBody\", \"\", 1, \"accordion-body\"], [3, \"innerHTML\"], [\"class\", \"accordion-item\", \"ngbAccordionItem\", \"\", 3, \"collapsed\"]],\n    template: function SimpleAccordianComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\");\n        i0.ɵɵtext(3, \"Simple accordion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5, \" Click the accordions below to expand/collapse the accordion content. Use the \");\n        i0.ɵɵelementStart(6, \"code\");\n        i0.ɵɵtext(7, \".accordion \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \". \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 3)(10, \"div\", 4);\n        i0.ɵɵrepeaterCreate(11, SimpleAccordianComponent_For_12_Template, 8, 6, \"div\", 12, i0.ɵɵrepeaterTrackByIdentity);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"closeOthers\", true);\n        i0.ɵɵadvance();\n        i0.ɵɵrepeater(ctx.simpleAccordionData);\n      }\n    },\n    dependencies: [i1.FeatherIconsComponent, i2.NgbAccordionButton, i2.NgbAccordionDirective, i2.NgbAccordionItem, i2.NgbAccordionBody, i2.NgbAccordionCollapse],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Data","i0","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵproperty","allData_r1","panel","ɵɵadvance","ɵɵtextInterpolate1","title","ɵɵclassMap","desc","ɵɵsanitizeHtml","SimpleAccordianComponent","constructor","simpleAccordionData","_","_2","selectors","decls","vars","consts","template","SimpleAccordianComponent_Template","rf","ctx","ɵɵrepeaterCreate","SimpleAccordianComponent_For_12_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater"],"sources":["C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\ui-kits\\accordion\\simple-accordian\\simple-accordian.component.ts","C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\ui-kits\\accordion\\simple-accordian\\simple-accordian.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport * as Data from '../../../../shared/data/data/ui-kits/accordion';\n\n@Component({\n  selector: 'app-simple-accordian',\n  templateUrl: './simple-accordian.component.html',\n  styleUrls: ['./simple-accordian.component.scss']\n})\n\nexport class SimpleAccordianComponent {\n\n  public simpleAccordionData = Data.simpleAccordionData;\n\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    <h4>Simple accordion</h4>\n    <p class=\"f-m-light mt-1\">\n      Click the accordions below to expand/collapse the accordion content.\n      Use the <code>.accordion </code>.\n    </p>\n  </div>\n  <div class=\"card-body\">\n    <div class=\"accordion dark-accordion\" id=\"simpleaccordion\" ngbAccordion [closeOthers]=\"true\">\n      @for (allData of simpleAccordionData; track allData) {\n      <div class=\"accordion-item\" ngbAccordionItem [collapsed]=\"allData.panel !== 'First'\">\n        <h2 class=\"accordion-header\" id=\"headingOne\">\n          <button class=\"accordion-button collapsed bg-light-primary txt-primary active\" type=\"button\"\n            ngbAccordionButton>{{allData.title}}\n            <app-feather-icons [class]=\"'svg-color'\" [icons]=\"'chevron-down'\"></app-feather-icons>\n          </button>\n        </h2>\n        <div class=\"accordion-collapse collapse show\" id=\"collapseOne\" ngbAccordionCollapse>\n          <div class=\"accordion-body\" ngbAccordionBody>\n            <p [innerHTML]=\"allData.desc\"></p>\n          </div>\n        </div>\n      </div>\n      }\n    </div>\n  </div>\n</div>"],"mappings":"AACA,OAAO,KAAKA,IAAI,MAAM,gDAAgD;;;;;;ICUhEC,EAAA,CAAAC,cAAA,aAAqF;IAG5DD,EAAA,CAAAE,MAAA,GACnB;IAAAF,EAAA,CAAAG,SAAA,2BAAsF;IACxFH,EAAA,CAAAI,YAAA,EAAS;IAEXJ,EAAA,CAAAC,cAAA,aAAoF;IAEhFD,EAAA,CAAAG,SAAA,YAAkC;IACpCH,EAAA,CAAAI,YAAA,EAAM;;;;IAVmCJ,EAAA,CAAAK,UAAA,cAAAC,UAAA,CAAAC,KAAA,aAAuC;IAG3DP,EAAA,CAAAQ,SAAA,GACnB;IADmBR,EAAA,CAAAS,kBAAA,KAAAH,UAAA,CAAAI,KAAA,MACnB;IAAmBV,EAAA,CAAAQ,SAAA,EAAqB;IAArBR,EAAA,CAAAW,UAAA,aAAqB;IAACX,EAAA,CAAAK,UAAA,yBAAwB;IAK9DL,EAAA,CAAAQ,SAAA,GAA0B;IAA1BR,EAAA,CAAAK,UAAA,cAAAC,UAAA,CAAAM,IAAA,EAAAZ,EAAA,CAAAa,cAAA,CAA0B;;;ADXzC,OAAM,MAAOC,wBAAwB;EANrCC,YAAA;IAQS,KAAAC,mBAAmB,GAAGjB,IAAI,CAACiB,mBAAmB;;EAEtD,QAAAC,CAAA,G;qBAJYH,wBAAwB;EAAA;EAAA,QAAAI,EAAA,G;UAAxBJ,wBAAwB;IAAAK,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTrCzB,EAAA,CAAAC,cAAA,aAAkB;QAEVD,EAAA,CAAAE,MAAA,uBAAgB;QAAAF,EAAA,CAAAI,YAAA,EAAK;QACzBJ,EAAA,CAAAC,cAAA,WAA0B;QACxBD,EAAA,CAAAE,MAAA,qFACQ;QAAAF,EAAA,CAAAC,cAAA,WAAM;QAAAD,EAAA,CAAAE,MAAA,kBAAW;QAAAF,EAAA,CAAAI,YAAA,EAAO;QAAAJ,EAAA,CAAAE,MAAA,SAClC;QAAAF,EAAA,CAAAI,YAAA,EAAI;QAENJ,EAAA,CAAAC,cAAA,aAAuB;QAEnBD,EAAA,CAAA2B,gBAAA,KAAAC,wCAAA,mBAAA5B,EAAA,CAAA6B,yBAAA,CAcC;QACH7B,EAAA,CAAAI,YAAA,EAAM;;;QAhBkEJ,EAAA,CAAAQ,SAAA,IAAoB;QAApBR,EAAA,CAAAK,UAAA,qBAAoB;QAC1FL,EAAA,CAAAQ,SAAA,EAcC;QAdDR,EAAA,CAAA8B,UAAA,CAAAJ,GAAA,CAAAV,mBAAA,CAcC"},"metadata":{},"sourceType":"module","externalDependencies":[]}