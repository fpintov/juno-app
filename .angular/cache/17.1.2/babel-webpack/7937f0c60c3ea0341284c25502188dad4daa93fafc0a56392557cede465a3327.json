{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MultipleCollapseAccordionComponent {\n  constructor() {\n    this.isPrimary = false;\n    this.isWarning = false;\n  }\n  static #_ = this.ɵfac = function MultipleCollapseAccordionComponent_Factory(t) {\n    return new (t || MultipleCollapseAccordionComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MultipleCollapseAccordionComponent,\n    selectors: [[\"app-multiple-collapse-accordion\"]],\n    decls: 29,\n    vars: 4,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"f-m-light\", \"mt-1\"], [1, \"card-body\"], [1, \"common-flex\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"row\"], [1, \"col-xl-6\"], [\"id\", \"multiCollapseExample1\", 1, \"collapse\", \"multi-collapse\", \"dark-accordion\"], [1, \"card\", \"card-body\", \"mt-3\", \"mb-0\", \"collapse-wrapper\", \"bg-primary\", \"text-white\"], [\"id\", \"multiCollapseExample2\", 1, \"collapse\", \"multi-collapse\", \"dark-accordion\"], [1, \"card\", \"card-body\", \"mt-3\", \"mb-0\", \"collapse-wrapper\", \"bg-warning\", \"text-white\"]],\n    template: function MultipleCollapseAccordionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\");\n        i0.ɵɵtext(3, \"Multiple collapse accordion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5, \"A \");\n        i0.ɵɵelementStart(6, \"code\");\n        i0.ɵɵtext(7, \" <button>\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \" or\");\n        i0.ɵɵelementStart(9, \"code\");\n        i0.ɵɵtext(10, \" <a>\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \" can show and hide multiple elements by referencing them with a selector in its href or data-bs-target attribute. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 3)(13, \"div\", 4)(14, \"a\", 5);\n        i0.ɵɵlistener(\"click\", function MultipleCollapseAccordionComponent_Template_a_click_14_listener() {\n          return ctx.isPrimary = !ctx.isPrimary;\n        });\n        i0.ɵɵtext(15, \"Toggle first element\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function MultipleCollapseAccordionComponent_Template_button_click_16_listener() {\n          return ctx.isWarning = !ctx.isWarning;\n        });\n        i0.ɵɵtext(17, \"Toggle second element\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function MultipleCollapseAccordionComponent_Template_button_click_18_listener() {\n          ctx.isWarning = !ctx.isWarning;\n          return ctx.isPrimary = !ctx.isPrimary;\n        });\n        i0.ɵɵtext(19, \"Toggle both elements\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 8)(21, \"div\", 9)(22, \"div\", 10)(23, \"div\", 11);\n        i0.ɵɵtext(24, \"The collapse JavaScript plugin is used to show and hide content. Buttons or anchors are used as triggers that are mapped to specific elements you toggle. Collapsing an element will animate the height from it's current value to 0. Given how CSS handles animations, you cannot use padding on a .collapse element. Instead, use the class as an independent wrapping element.\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 9)(26, \"div\", 12)(27, \"div\", 13);\n        i0.ɵɵtext(28, \"This is the first item's accordion body. It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables.\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(22);\n        i0.ɵɵclassProp(\"show\", ctx.isPrimary);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"show\", ctx.isWarning);\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["MultipleCollapseAccordionComponent","constructor","isPrimary","isWarning","_","_2","selectors","decls","vars","consts","template","MultipleCollapseAccordionComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","MultipleCollapseAccordionComponent_Template_a_click_14_listener","MultipleCollapseAccordionComponent_Template_button_click_16_listener","MultipleCollapseAccordionComponent_Template_button_click_18_listener","ɵɵadvance","ɵɵclassProp"],"sources":["C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\ui-kits\\accordion\\multiple-collapse-accordion\\multiple-collapse-accordion.component.ts","C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\ui-kits\\accordion\\multiple-collapse-accordion\\multiple-collapse-accordion.component.html"],"sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-multiple-collapse-accordion\",\n  templateUrl: \"./multiple-collapse-accordion.component.html\",\n  styleUrls: [\"./multiple-collapse-accordion.component.scss\"],\n})\n\nexport class MultipleCollapseAccordionComponent {\n  \n  public isPrimary: boolean = false;\n  public isWarning: boolean = false;\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n      <h4>Multiple collapse accordion</h4>\n      <p class=\"f-m-light mt-1\">A <code> &lt;button&gt;</code>  or<code>  &lt;a&gt;</code> can show and hide multiple elements by referencing them with a selector in its href or data-bs-target attribute. </p>\n    </div>\n    <div class=\"card-body\"> \n      <div class=\"common-flex\"><a class=\"btn btn-primary\" (click)=\"isPrimary =!isPrimary\">Toggle first element</a>\n        <button class=\"btn btn-warning\" type=\"button\" (click)=\"isWarning = !isWarning\">Toggle second element</button>\n        <button class=\"btn btn-success\" type=\"button\" (click)=\"isWarning = !isWarning ;isPrimary =!isPrimary\">Toggle both elements</button>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-xl-6\">\n          <div class=\"collapse multi-collapse dark-accordion\" id=\"multiCollapseExample1\" [class.show]=\"isPrimary\">\n            <div class=\"card card-body mt-3 mb-0 collapse-wrapper bg-primary text-white\">The collapse JavaScript plugin is used to show and hide content. Buttons or anchors are used as triggers that are mapped to specific elements you toggle. Collapsing an element will animate the height from it's current value to 0. Given how CSS handles animations, you cannot use padding on a .collapse element. Instead, use the class as an independent wrapping element.</div>\n          </div>\n        </div>\n        <div class=\"col-xl-6\">\n          <div class=\"collapse multi-collapse dark-accordion\" id=\"multiCollapseExample2\"  [class.show]=\"isWarning\">\n            <div class=\"card card-body mt-3 mb-0 collapse-wrapper bg-warning text-white\">This is the first item's accordion body. It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables.</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"],"mappings":";AAQA,OAAM,MAAOA,kCAAkC;EAN/CC,YAAA;IAQS,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,SAAS,GAAY,KAAK;;EAElC,QAAAC,CAAA,G;qBALYJ,kCAAkC;EAAA;EAAA,QAAAK,EAAA,G;UAAlCL,kCAAkC;IAAAM,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4CAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/CE,EAAA,CAAAC,cAAA,aAAkB;QAERD,EAAA,CAAAE,MAAA,kCAA2B;QAAAF,EAAA,CAAAG,YAAA,EAAK;QACpCH,EAAA,CAAAC,cAAA,WAA0B;QAAAD,EAAA,CAAAE,MAAA,SAAE;QAAAF,EAAA,CAAAC,cAAA,WAAM;QAACD,EAAA,CAAAE,MAAA,gBAAc;QAAAF,EAAA,CAAAG,YAAA,EAAO;QAAEH,EAAA,CAAAE,MAAA,UAAE;QAAAF,EAAA,CAAAC,cAAA,WAAM;QAAED,EAAA,CAAAE,MAAA,YAAS;QAAAF,EAAA,CAAAG,YAAA,EAAO;QAACH,EAAA,CAAAE,MAAA,0HAAiH;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAE5MH,EAAA,CAAAC,cAAA,cAAuB;QAC+BD,EAAA,CAAAI,UAAA,mBAAAC,gEAAA;UAAA,OAAAN,GAAA,CAAAX,SAAA,IAAAW,GAAA,CAAAX,SAAA;QAAA,EAA+B;QAACY,EAAA,CAAAE,MAAA,4BAAoB;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAC1GH,EAAA,CAAAC,cAAA,iBAA+E;QAAjCD,EAAA,CAAAI,UAAA,mBAAAE,qEAAA;UAAA,OAAAP,GAAA,CAAAV,SAAA,IAAAU,GAAA,CAAAV,SAAA;QAAA,EAAgC;QAACW,EAAA,CAAAE,MAAA,6BAAqB;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC7GH,EAAA,CAAAC,cAAA,iBAAsG;QAAxDD,EAAA,CAAAI,UAAA,mBAAAG,qEAAA;UAAAR,GAAA,CAAAV,SAAA,IAAAU,GAAA,CAAAV,SAAA;UAAA,OAAAU,GAAA,CAAAX,SAAA,IAAAW,GAAA,CAAAX,SAAA;QAAA,EAAuD;QAACY,EAAA,CAAAE,MAAA,4BAAoB;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAErIH,EAAA,CAAAC,cAAA,cAAiB;QAGkED,EAAA,CAAAE,MAAA,yXAAiX;QAAAF,EAAA,CAAAG,YAAA,EAAM;QAGxcH,EAAA,CAAAC,cAAA,cAAsB;QAE2DD,EAAA,CAAAE,MAAA,uVAA+U;QAAAF,EAAA,CAAAG,YAAA,EAAM;;;QANrVH,EAAA,CAAAQ,SAAA,IAAwB;QAAxBR,EAAA,CAAAS,WAAA,SAAAV,GAAA,CAAAX,SAAA,CAAwB;QAKvBY,EAAA,CAAAQ,SAAA,GAAwB;QAAxBR,EAAA,CAAAS,WAAA,SAAAV,GAAA,CAAAV,SAAA,CAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}