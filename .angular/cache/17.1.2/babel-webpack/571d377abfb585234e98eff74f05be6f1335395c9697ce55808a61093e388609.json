{"ast":null,"code":"import { TextSelection } from 'prosemirror-state';\nimport { markApplies } from 'ngx-editor/helpers';\nconst removeLink = () => {\n  return (state, dispatch) => {\n    const {\n      doc,\n      selection,\n      tr\n    } = state;\n    const {\n      $head: {\n        pos\n      },\n      from,\n      to\n    } = selection;\n    // if the cursor is on the link without any selection\n    if (from === to) {\n      const $pos = doc.resolve(pos);\n      const linkStart = pos - $pos.textOffset;\n      const linkEnd = linkStart + $pos.parent.child($pos.index()).nodeSize;\n      tr.removeMark(linkStart, linkEnd);\n    } else {\n      tr.removeMark(from, to);\n    }\n    if (!tr.docChanged) {\n      return false;\n    }\n    dispatch?.(tr);\n    return true;\n  };\n};\n\n// Ref: https://github.com/ProseMirror/prosemirror-commands/blob/master/src/commands.js\nconst applyMark = (type, attrs = {}) => {\n  return (state, dispatch) => {\n    const {\n      tr,\n      selection\n    } = state;\n    const {\n      empty,\n      ranges,\n      $from,\n      $to\n    } = selection;\n    if (empty && selection instanceof TextSelection) {\n      const {\n        $cursor\n      } = selection;\n      if (!$cursor || !markApplies(state.doc, ranges, type)) {\n        return false;\n      }\n      tr.addStoredMark(type.create(attrs));\n      if (!tr.storedMarksSet) {\n        return false;\n      }\n      dispatch?.(tr);\n    } else {\n      tr.addMark($from.pos, $to.pos, type.create(attrs));\n      if (!tr.docChanged) {\n        return false;\n      }\n      dispatch?.(tr.scrollIntoView());\n    }\n    return true;\n  };\n};\nconst removeMark = type => {\n  return (state, dispatch) => {\n    const {\n      tr,\n      selection,\n      storedMarks,\n      doc\n    } = state;\n    const {\n      empty,\n      ranges\n    } = selection;\n    if (empty && selection instanceof TextSelection) {\n      const {\n        $cursor\n      } = selection;\n      if (!$cursor || !markApplies(state.doc, ranges, type)) {\n        return false;\n      }\n      if (type.isInSet(storedMarks || $cursor.marks())) {\n        tr.removeStoredMark(type);\n        dispatch?.(tr);\n        return true;\n      }\n    } else {\n      for (const range of ranges) {\n        const {\n          $from,\n          $to\n        } = range;\n        const hasMark = doc.rangeHasMark($from.pos, $to.pos, type);\n        if (hasMark) {\n          tr.removeMark($from.pos, $to.pos, type);\n        }\n      }\n      if (!tr.docChanged) {\n        return false;\n      }\n      dispatch?.(tr.scrollIntoView());\n    }\n    return false;\n  };\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { applyMark, removeLink, removeMark };","map":{"version":3,"names":["TextSelection","markApplies","removeLink","state","dispatch","doc","selection","tr","$head","pos","from","to","$pos","resolve","linkStart","textOffset","linkEnd","parent","child","index","nodeSize","removeMark","docChanged","applyMark","type","attrs","empty","ranges","$from","$to","$cursor","addStoredMark","create","storedMarksSet","addMark","scrollIntoView","storedMarks","isInSet","marks","removeStoredMark","range","hasMark","rangeHasMark"],"sources":["C:/Repository/Jupiter/juno-app/node_modules/ngx-editor/fesm2022/ngx-editor-commands.mjs"],"sourcesContent":["import { TextSelection } from 'prosemirror-state';\nimport { markApplies } from 'ngx-editor/helpers';\n\nconst removeLink = () => {\n    return (state, dispatch) => {\n        const { doc, selection, tr } = state;\n        const { $head: { pos }, from, to } = selection;\n        // if the cursor is on the link without any selection\n        if (from === to) {\n            const $pos = doc.resolve(pos);\n            const linkStart = pos - $pos.textOffset;\n            const linkEnd = linkStart + $pos.parent.child($pos.index()).nodeSize;\n            tr.removeMark(linkStart, linkEnd);\n        }\n        else {\n            tr.removeMark(from, to);\n        }\n        if (!tr.docChanged) {\n            return false;\n        }\n        dispatch?.(tr);\n        return true;\n    };\n};\n\n// Ref: https://github.com/ProseMirror/prosemirror-commands/blob/master/src/commands.js\nconst applyMark = (type, attrs = {}) => {\n    return (state, dispatch) => {\n        const { tr, selection } = state;\n        const { empty, ranges, $from, $to } = selection;\n        if (empty && selection instanceof TextSelection) {\n            const { $cursor } = selection;\n            if (!$cursor || !markApplies(state.doc, ranges, type)) {\n                return false;\n            }\n            tr.addStoredMark(type.create(attrs));\n            if (!tr.storedMarksSet) {\n                return false;\n            }\n            dispatch?.(tr);\n        }\n        else {\n            tr.addMark($from.pos, $to.pos, type.create(attrs));\n            if (!tr.docChanged) {\n                return false;\n            }\n            dispatch?.(tr.scrollIntoView());\n        }\n        return true;\n    };\n};\n\nconst removeMark = (type) => {\n    return (state, dispatch) => {\n        const { tr, selection, storedMarks, doc } = state;\n        const { empty, ranges } = selection;\n        if (empty && selection instanceof TextSelection) {\n            const { $cursor } = selection;\n            if (!$cursor || !markApplies(state.doc, ranges, type)) {\n                return false;\n            }\n            if (type.isInSet(storedMarks || $cursor.marks())) {\n                tr.removeStoredMark(type);\n                dispatch?.(tr);\n                return true;\n            }\n        }\n        else {\n            for (const range of ranges) {\n                const { $from, $to } = range;\n                const hasMark = doc.rangeHasMark($from.pos, $to.pos, type);\n                if (hasMark) {\n                    tr.removeMark($from.pos, $to.pos, type);\n                }\n            }\n            if (!tr.docChanged) {\n                return false;\n            }\n            dispatch?.(tr.scrollIntoView());\n        }\n        return false;\n    };\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { applyMark, removeLink, removeMark };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}