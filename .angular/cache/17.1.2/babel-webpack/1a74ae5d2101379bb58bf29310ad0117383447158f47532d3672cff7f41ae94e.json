{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"ngx-dropzone\";\nfunction FileUploadComponent_For_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ngx-dropzone-preview\", 6);\n    i0.ɵɵlistener(\"removed\", function FileUploadComponent_For_18_Template_ngx_dropzone_preview_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const f_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onRemove2(f_r1));\n    });\n    i0.ɵɵelementStart(1, \"ngx-dropzone-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const f_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"removable\", true);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", f_r1.name, \" (\", f_r1.type, \")\");\n  }\n}\nexport class FileUploadComponent {\n  constructor() {\n    this.files2 = [];\n  }\n  onSelect2(event) {\n    this.files2.push(...event.addedFiles);\n  }\n  onRemove2(event) {\n    this.files2.splice(this.files2.indexOf(event), 1);\n  }\n  static #_ = this.ɵfac = function FileUploadComponent_Factory(t) {\n    return new (t || FileUploadComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FileUploadComponent,\n    selectors: [[\"app-file-upload\"]],\n    decls: 19,\n    vars: 1,\n    consts: [[1, \"col\"], [1, \"mb-3\"], [\"id\", \"singleFileUpload\", \"action\", \"/upload.php\", 1, \"dropzone\", \"bg-light-primary\"], [3, \"multiple\", \"change\"], [1, \"dz-message\", \"needsclick\"], [1, \"icon-cloud-up\"], [3, \"removable\", \"removed\"], [3, \"removable\"]],\n    template: function FileUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"label\");\n        i0.ɵɵtext(3, \"Upload project file\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 2)(5, \"ngx-dropzone\", 3);\n        i0.ɵɵlistener(\"change\", function FileUploadComponent_Template_ngx_dropzone_change_5_listener($event) {\n          return ctx.onSelect2($event);\n        });\n        i0.ɵɵelementStart(6, \"ngx-dropzone-label\")(7, \"div\")(8, \"div\", 4);\n        i0.ɵɵelement(9, \"i\", 5);\n        i0.ɵɵelementStart(10, \"h6\");\n        i0.ɵɵtext(11, \"Drop files here or click to upload.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"span\", 4);\n        i0.ɵɵtext(13, \"(This is just a demo dropzone. Selected files are \");\n        i0.ɵɵelementStart(14, \"strong\");\n        i0.ɵɵtext(15, \"not\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(16, \" actually uploaded.)\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵrepeaterCreate(17, FileUploadComponent_For_18_Template, 3, 3, \"ngx-dropzone-preview\", 7, i0.ɵɵrepeaterTrackByIdentity);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"multiple\", true);\n        i0.ɵɵadvance(12);\n        i0.ɵɵrepeater(ctx.files2);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i2.NgxDropzoneComponent, i2.NgxDropzoneLabelDirective, i2.NgxDropzonePreviewComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","FileUploadComponent_For_18_Template_ngx_dropzone_preview_removed_0_listener","restoredCtx","ɵɵrestoreView","_r7","f_r1","$implicit","ctx_r6","ɵɵnextContext","ɵɵresetView","onRemove2","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate2","name","type","FileUploadComponent","constructor","files2","onSelect2","event","push","addedFiles","splice","indexOf","_","_2","selectors","decls","vars","consts","template","FileUploadComponent_Template","rf","ctx","FileUploadComponent_Template_ngx_dropzone_change_5_listener","$event","ɵɵelement","ɵɵrepeaterCreate","FileUploadComponent_For_18_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater"],"sources":["C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\project\\create-new\\file-upload\\file-upload.component.ts","C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\project\\create-new\\file-upload\\file-upload.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgxDropzoneChangeEvent } from 'ngx-dropzone';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\n\n\nexport class FileUploadComponent {\n  \n  public files2: File[] = [];\n\n  onSelect2(event: NgxDropzoneChangeEvent) {\n    this.files2.push(...event.addedFiles);\n  }\n\n  onRemove2(event: File) {\n    this.files2.splice(this.files2.indexOf(event), 1);\n  }\n}\n","<div class=\"col\">\n    <div class=\"mb-3\">\n        <label>Upload project file</label>\n        <form class=\"dropzone bg-light-primary\" id=\"singleFileUpload\" action=\"/upload.php\">\n            <ngx-dropzone (change)=\"onSelect2($event)\" [multiple]=\"true\">\n                <ngx-dropzone-label>\n                    <div>\n                        <div class=\"dz-message needsclick\">\n                            <i class=\"icon-cloud-up\"></i>\n                            <h6>Drop files here or click to upload.</h6><span class=\"dz-message needsclick\">(This is\n                                just a demo dropzone. Selected files are <strong>not</strong> actually uploaded.)</span>\n                        </div>\n                    </div>\n                </ngx-dropzone-label>\n                @for (f of files2; track f) {\n                <ngx-dropzone-preview [removable]=\"true\" (removed)=\"onRemove2(f)\">\n                    <ngx-dropzone-label>{{ f.name }} ({{ f.type }})</ngx-dropzone-label>\n                </ngx-dropzone-preview>\n                }\n            </ngx-dropzone>\n        </form>\n    </div>\n</div>"],"mappings":";;;;;;ICegBA,EAAA,CAAAC,cAAA,8BAAkE;IAAzBD,EAAA,CAAAE,UAAA,qBAAAC,4EAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,IAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAT,EAAA,CAAAU,aAAA;MAAA,OAAWV,EAAA,CAAAW,WAAA,CAAAF,MAAA,CAAAG,SAAA,CAAAL,IAAA,CAAY;IAAA,EAAC;IAC7DP,EAAA,CAAAC,cAAA,yBAAoB;IAAAD,EAAA,CAAAa,MAAA,GAA2B;IAAAb,EAAA,CAAAc,YAAA,EAAqB;;;;IADlDd,EAAA,CAAAe,UAAA,mBAAkB;IAChBf,EAAA,CAAAgB,SAAA,GAA2B;IAA3BhB,EAAA,CAAAiB,kBAAA,KAAAV,IAAA,CAAAW,IAAA,QAAAX,IAAA,CAAAY,IAAA,MAA2B;;;ADNnE,OAAM,MAAOC,mBAAmB;EAPhCC,YAAA;IASS,KAAAC,MAAM,GAAW,EAAE;;EAE1BC,SAASA,CAACC,KAA6B;IACrC,IAAI,CAACF,MAAM,CAACG,IAAI,CAAC,GAAGD,KAAK,CAACE,UAAU,CAAC;EACvC;EAEAd,SAASA,CAACY,KAAW;IACnB,IAAI,CAACF,MAAM,CAACK,MAAM,CAAC,IAAI,CAACL,MAAM,CAACM,OAAO,CAACJ,KAAK,CAAC,EAAE,CAAC,CAAC;EACnD;EAAC,QAAAK,CAAA,G;qBAVUT,mBAAmB;EAAA;EAAA,QAAAU,EAAA,G;UAAnBV,mBAAmB;IAAAW,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCVhCrC,EAAA,CAAAC,cAAA,aAAiB;QAEFD,EAAA,CAAAa,MAAA,0BAAmB;QAAAb,EAAA,CAAAc,YAAA,EAAQ;QAClCd,EAAA,CAAAC,cAAA,cAAmF;QACjED,EAAA,CAAAE,UAAA,oBAAAqC,4DAAAC,MAAA;UAAA,OAAUF,GAAA,CAAAf,SAAA,CAAAiB,MAAA,CAAiB;QAAA,EAAC;QACtCxC,EAAA,CAAAC,cAAA,yBAAoB;QAGRD,EAAA,CAAAyC,SAAA,WAA6B;QAC7BzC,EAAA,CAAAC,cAAA,UAAI;QAAAD,EAAA,CAAAa,MAAA,2CAAmC;QAAAb,EAAA,CAAAc,YAAA,EAAK;QAAAd,EAAA,CAAAC,cAAA,eAAoC;QAAAD,EAAA,CAAAa,MAAA,0DACnC;QAAAb,EAAA,CAAAC,cAAA,cAAQ;QAAAD,EAAA,CAAAa,MAAA,WAAG;QAAAb,EAAA,CAAAc,YAAA,EAAS;QAACd,EAAA,CAAAa,MAAA,4BAAmB;QAAAb,EAAA,CAAAc,YAAA,EAAO;QAIxGd,EAAA,CAAA0C,gBAAA,KAAAC,mCAAA,mCAAA3C,EAAA,CAAA4C,yBAAA,CAIC;QACL5C,EAAA,CAAAc,YAAA,EAAe;;;QAf4Bd,EAAA,CAAAgB,SAAA,GAAiB;QAAjBhB,EAAA,CAAAe,UAAA,kBAAiB;QAUxDf,EAAA,CAAAgB,SAAA,IAIC;QAJDhB,EAAA,CAAA6C,UAAA,CAAAP,GAAA,CAAAhB,MAAA,CAIC"},"metadata":{},"sourceType":"module","externalDependencies":[]}