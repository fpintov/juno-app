{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Optional, Inject, Injectable, PLATFORM_ID, Directive, Host, Self, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport * as i1$1 from 'ng-gallery';\nimport { GalleryComponent, ImageItem, GalleryModule } from 'ng-gallery';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ESCAPE, RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { Subject, debounceTime, switchMap, from, map, tap, finalize, EMPTY, Subscription, fromEvent } from 'rxjs';\nimport * as i2 from '@angular/cdk/overlay';\nimport * as i3 from '@angular/platform-browser';\nconst _c0 = (a0, a1) => ({\n  startAnimationTime: a0,\n  exitAnimationTime: a1\n});\nconst _c1 = (a0, a1) => ({\n  value: a0,\n  params: a1\n});\nconst LIGHTBOX_CONFIG = new InjectionToken('LIGHTBOX_CONFIG');\nconst lightboxAnimation = trigger('lightbox', [state('void, exit', style({\n  opacity: 0,\n  transform: 'scale(0.7)'\n})), state('enter', style({\n  transform: 'none'\n})), transition('* => enter', animate('{{startAnimationTime}}ms cubic-bezier(0, 0, 0.2, 1)', style({\n  transform: 'none',\n  opacity: 1\n}))), transition('* => void, * => exit', animate('{{exitAnimationTime}}ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({\n  opacity: 0\n})))]);\nclass LightboxComponent {\n  constructor(_document, _focusTrapFactory, _elementRef) {\n    this._document = _document;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._elementRef = _elementRef;\n    /** State of the lightbox animation. */\n    this.state = 'enter';\n    this._savePreviouslyFocusedElement();\n  }\n  /** Callback, invoked whenever an animation on the host completes. */\n  onAnimationDone(event) {\n    if (event.toState === 'enter') {\n      this._trapFocus();\n    } else {\n      this.overlayRef.dispose();\n      this._restoreFocus();\n    }\n  }\n  /** Moves the focus inside the focus trap. */\n  _trapFocus() {\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n    }\n    // If were to attempt to focus immediately, then the content of the lightbox would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    this._focusTrap.focusInitialElementWhenReady();\n  }\n  /** Saves a reference to the element that was focused before the lightbox was opened. */\n  _savePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement;\n      // Note that there is no focus method when rendering on the server.\n      if (this._elementRef.nativeElement.focus) {\n        // Move focus onto the lightbox immediately in order to prevent the user from accidentally\n        // opening multiple dialogs at the same time. Needs to be async, because the element\n        // may not be focusable immediately.\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      }\n    }\n  }\n  /** Restores focus to the element that was focused before the lightbox opened. */\n  _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (toFocus && typeof toFocus.focus === 'function') {\n      toFocus.focus();\n    }\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n  static #_ = this.ɵfac = function LightboxComponent_Factory(t) {\n    return new (t || LightboxComponent)(i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(i1.ConfigurableFocusTrapFactory), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: LightboxComponent,\n    selectors: [[\"lightbox\"]],\n    hostAttrs: [\"tabindex\", \"-1\", \"aria-modal\", \"true\"],\n    hostVars: 12,\n    hostBindings: function LightboxComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵsyntheticHostListener(\"@lightbox.done\", function LightboxComponent_animation_lightbox_done_HostBindingHandler($event) {\n          return ctx.onAnimationDone($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", \"lightbox-\" + ctx.id)(\"role\", ctx.role)(\"aria-labelledby\", ctx.ariaLabel ? null : ctx.ariaLabelledBy)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx.ariaDescribedBy || null);\n        i0.ɵɵsyntheticHostProperty(\"@lightbox\", i0.ɵɵpureFunction2(9, _c1, ctx.state, i0.ɵɵpureFunction2(6, _c0, ctx.startAnimationTime, ctx.exitAnimationTime)));\n      }\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 4,\n    consts: [[\"aria-label\", \"Close\", 1, \"g-btn-close\", 3, \"innerHTML\", \"click\"], [3, \"id\", \"destroyRef\", \"skipInitConfig\"]],\n    template: function LightboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"i\", 0);\n        i0.ɵɵlistener(\"click\", function LightboxComponent_Template_i_click_0_listener() {\n          return ctx.overlayRef.detach();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(1, \"gallery\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"innerHTML\", ctx.closeIcon, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"id\", ctx.id)(\"destroyRef\", false)(\"skipInitConfig\", true);\n      }\n    },\n    dependencies: [GalleryComponent],\n    styles: [\"lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}  lightbox:focus{outline:none}  lightbox gallery{height:100%;width:100%;overflow:hidden;margin:0}  lightbox gallery gallery-core{height:100%!important}  .g-backdrop{background-color:#00000052}  .fullscreen{width:100%}  .fullscreen   lightbox{max-width:unset;max-height:unset;position:fixed;inset:0;height:100%;width:100%;border-radius:0}  .g-overlay{margin:auto}@media only screen and (max-width: 480px){  .g-overlay{width:100%}  .g-overlay   lightbox{max-width:unset;max-height:unset;position:fixed;inset:0;height:100%;width:100%;border-radius:0}}  .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){  .g-btn-close{right:.7em;top:.7em}}  .g-btn-close svg{width:100%;height:100%;opacity:.6;transition:opacity linear .15s;filter:drop-shadow(0px 0px 2px rgba(0,0,0,.8))}  .g-btn-close svg:hover{opacity:1}\"],\n    data: {\n      animation: [lightboxAnimation]\n    },\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LightboxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lightbox',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      animations: [lightboxAnimation],\n      template: `\n    <i class=\"g-btn-close\" aria-label=\"Close\" [innerHTML]=\"closeIcon\" (click)=\"overlayRef.detach()\"></i>\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\"></gallery>\n  `,\n      host: {\n        'tabindex': '-1',\n        'aria-modal': 'true',\n        '[attr.id]': '\"lightbox-\" + id',\n        '[attr.role]': 'role',\n        '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\n        '[attr.aria-label]': 'ariaLabel',\n        '[attr.aria-describedby]': 'ariaDescribedBy || null',\n        '[@lightbox]': '{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }',\n        '(@lightbox.done)': 'onAnimationDone($event)'\n      },\n      standalone: true,\n      imports: [GalleryComponent],\n      styles: [\"::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{height:100%;width:100%;overflow:hidden;margin:0}::ng-deep lightbox gallery gallery-core{height:100%!important}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;inset:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;inset:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}::ng-deep .g-btn-close svg{width:100%;height:100%;opacity:.6;transition:opacity linear .15s;filter:drop-shadow(0px 0px 2px rgba(0,0,0,.8))}::ng-deep .g-btn-close svg:hover{opacity:1}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1.ConfigurableFocusTrapFactory\n    }, {\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\nconst defaultConfig = {\n  backdropClass: 'g-backdrop',\n  panelClass: 'g-overlay',\n  hasBackdrop: true,\n  keyboardShortcuts: true,\n  role: 'lightbox',\n  startAnimationTime: 150,\n  exitAnimationTime: 75,\n  closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\n</svg>\n`\n};\nclass Lightbox {\n  constructor(config, _gallery, _overlay, _sanitizer) {\n    this._gallery = _gallery;\n    this._overlay = _overlay;\n    this._sanitizer = _sanitizer;\n    /** Stream that emits when lightbox is opened */\n    this.opened = new Subject();\n    /** Stream that emits when lightbox is closed */\n    this.closed = new Subject();\n    this._config = config ? {\n      ...defaultConfig,\n      ...config\n    } : defaultConfig;\n  }\n  /**\n   * Set Lightbox Config\n   * @param config - LightboxConfig\n   */\n  setConfig(config) {\n    this._config = {\n      ...this._config,\n      ...config\n    };\n  }\n  /**\n   * Open Lightbox Overlay\n   * @param i - Current Index\n   * @param id - Gallery ID\n   * @param config - Lightbox Config\n   */\n  open(i = 0, id = 'lightbox', config) {\n    const _config = config ? {\n      ...this._config,\n      ...config\n    } : this._config;\n    const overlayConfig = {\n      backdropClass: _config.backdropClass,\n      panelClass: _config.panelClass,\n      hasBackdrop: _config.hasBackdrop,\n      positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      disposeOnNavigation: true\n    };\n    const galleryRef = this._gallery.ref(id);\n    galleryRef.set(i);\n    this._overlayRef = this._overlay.create(overlayConfig);\n    // overlay opened event\n    this._overlayRef.attachments().subscribe(() => this.opened.next(id));\n    // overlay closed event\n    this._overlayRef.detachments().subscribe(() => this.closed.next(id));\n    // Attach gallery to the overlay\n    const galleryPortal = new ComponentPortal(LightboxComponent);\n    const lightboxRef = this._overlayRef.attach(galleryPortal);\n    lightboxRef.instance.id = id;\n    lightboxRef.instance.overlayRef = this._overlayRef;\n    lightboxRef.instance.closeIcon = this._sanitizer.bypassSecurityTrustHtml(this._config.closeIcon);\n    lightboxRef.instance.role = this._config.role;\n    lightboxRef.instance.ariaLabel = this._config.ariaLabel;\n    lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\n    lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\n    lightboxRef.instance.startAnimationTime = this._config.startAnimationTime;\n    lightboxRef.instance.exitAnimationTime = this._config.exitAnimationTime;\n    if (_config.hasBackdrop) {\n      this._overlayRef.backdropClick().subscribe(() => this.close());\n    }\n    // Add keyboard shortcuts\n    if (_config.keyboardShortcuts) {\n      this._overlayRef.keydownEvents().subscribe(event => {\n        switch (event.keyCode) {\n          case LEFT_ARROW:\n            galleryRef.prev();\n            break;\n          case RIGHT_ARROW:\n            galleryRef.next();\n            break;\n          case ESCAPE:\n            this.close();\n        }\n      });\n    }\n  }\n  /**\n   * Close Lightbox Overlay\n   */\n  close() {\n    if (this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n    }\n  }\n  static #_ = this.ɵfac = function Lightbox_Factory(t) {\n    return new (t || Lightbox)(i0.ɵɵinject(LIGHTBOX_CONFIG, 8), i0.ɵɵinject(i1$1.Gallery), i0.ɵɵinject(i2.Overlay), i0.ɵɵinject(i3.DomSanitizer));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Lightbox,\n    factory: Lightbox.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Lightbox, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [LIGHTBOX_CONFIG]\n      }]\n    }, {\n      type: i1$1.Gallery\n    }, {\n      type: i2.Overlay\n    }, {\n      type: i3.DomSanitizer\n    }];\n  }, null);\n})();\nclass GallerizeDirective {\n  constructor(_zone, _el, _gallery, _lightbox, platform, _document, _galleryCmp) {\n    this._zone = _zone;\n    this._el = _el;\n    this._gallery = _gallery;\n    this._lightbox = _lightbox;\n    this._document = _document;\n    this._galleryCmp = _galleryCmp;\n    /** Default gallery id */\n    this._galleryId = 'lightbox';\n    /** The selector used to query images elements */\n    this.selector = 'img';\n    // Set gallerize mode\n    if (isPlatformBrowser(platform)) {\n      this._mode = _galleryCmp ? \"gallery\" /* GallerizeMode.Gallery */ : \"detector\" /* GallerizeMode.Detector */;\n    }\n  }\n  ngOnInit() {\n    this._zone.runOutsideAngular(() => {\n      this._galleryId = this.gallerize || this._galleryId;\n      const ref = this._gallery.ref(this._galleryId);\n      switch (this._mode) {\n        case \"detector\" /* GallerizeMode.Detector */:\n          this.detectorMode(ref);\n          break;\n        case \"gallery\" /* GallerizeMode.Gallery */:\n          this.galleryMode(ref);\n      }\n    });\n  }\n  ngOnDestroy() {\n    switch (this._mode) {\n      case \"detector\" /* GallerizeMode.Detector */:\n        this._detector$.complete();\n        this._observer$.disconnect();\n        break;\n      case \"gallery\" /* GallerizeMode.Gallery */:\n        this._itemClick$.unsubscribe();\n        this._itemChange$.unsubscribe();\n    }\n  }\n  /** Gallery mode: means `gallerize` directive is used on `<gallery>` component\n   * Adds a click event to each gallery item so it opens in lightbox */\n  galleryMode(galleryRef) {\n    // Clone its items to the new gallery instance\n    this._itemClick$ = this._galleryCmp.galleryRef.itemClick.subscribe(i => this._lightbox.open(i, this._galleryId));\n    this._itemChange$ = this._galleryCmp.galleryRef.itemsChanged.subscribe(state => galleryRef.load(state.items));\n  }\n  /** Detector mode: means `gallerize` directive is used on a normal HTMLElement\n   *  Detects images and adds a click event to each image, so it opens in the lightbox */\n  detectorMode(galleryRef) {\n    this._detector$ = new Subject();\n    // Query image elements\n    this._detector$.pipe(debounceTime(300), switchMap(() => {\n      /** get all img elements from content */\n      const imageElements = this._el.nativeElement.querySelectorAll(this.selector);\n      if (imageElements && imageElements.length) {\n        const images = [];\n        return from(imageElements).pipe(map((el, i) => {\n          // Add click event to the image\n          el.style.cursor = 'pointer';\n          el.addEventListener('click', () => {\n            this._zone.run(() => this._lightbox.open(i, this._galleryId));\n          });\n          if (el instanceof HTMLImageElement) {\n            // If element is type of img use the src property\n            return {\n              src: el.getAttribute('imageSrc') || el.src,\n              thumb: el.getAttribute('thumbSrc') || el.src\n            };\n          } else {\n            // Otherwise, use element background-image url\n            const elStyle = this._document.defaultView.getComputedStyle(el, null);\n            const background = elStyle.backgroundImage.slice(4, -1).replace(/\"/g, '');\n            return {\n              src: el.getAttribute('imageSrc') || background,\n              thumb: el.getAttribute('thumbSrc') || background\n            };\n          }\n        }), tap(data => images.push(new ImageItem(data))), finalize(() => galleryRef.load(images)));\n      } else {\n        return EMPTY;\n      }\n    })).subscribe();\n    // Observe content changes\n    this._observer$ = new MutationObserver(() => this._detector$.next());\n    this._observer$.observe(this._el.nativeElement, {\n      childList: true,\n      subtree: true\n    });\n  }\n  static #_ = this.ɵfac = function GallerizeDirective_Factory(t) {\n    return new (t || GallerizeDirective)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1$1.Gallery), i0.ɵɵdirectiveInject(Lightbox), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1$1.GalleryComponent, 11));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: GallerizeDirective,\n    selectors: [[\"\", \"gallerize\", \"\"]],\n    inputs: {\n      gallerize: \"gallerize\",\n      selector: \"selector\"\n    },\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GallerizeDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[gallerize]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i1$1.Gallery\n    }, {\n      type: Lightbox\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i1$1.GalleryComponent,\n      decorators: [{\n        type: Host\n      }, {\n        type: Self\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    gallerize: [{\n      type: Input\n    }],\n    selector: [{\n      type: Input\n    }]\n  });\n})();\nclass LightboxDirective {\n  constructor(_lightbox, _el, _renderer) {\n    this._lightbox = _lightbox;\n    this._el = _el;\n    this._renderer = _renderer;\n    this.clickEvent = Subscription.EMPTY;\n    this.index = 0;\n    this.id = 'root';\n  }\n  ngOnInit() {\n    this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\n    this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(tap(() => this._lightbox.open(this.index, this.id))).subscribe();\n  }\n  ngOnDestroy() {\n    this.clickEvent.unsubscribe();\n  }\n  static #_ = this.ɵfac = function LightboxDirective_Factory(t) {\n    return new (t || LightboxDirective)(i0.ɵɵdirectiveInject(Lightbox), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: LightboxDirective,\n    selectors: [[\"\", \"lightbox\", \"\"]],\n    inputs: {\n      index: [i0.ɵɵInputFlags.None, \"lightbox\", \"index\"],\n      id: [i0.ɵɵInputFlags.None, \"gallery\", \"id\"]\n    },\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LightboxDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lightbox]',\n      standalone: true\n    }]\n  }], function () {\n    return [{\n      type: Lightbox\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }];\n  }, {\n    index: [{\n      type: Input,\n      args: ['lightbox']\n    }],\n    id: [{\n      type: Input,\n      args: ['gallery']\n    }]\n  });\n})();\nclass LightboxModule {\n  static #_ = this.ɵfac = function LightboxModule_Factory(t) {\n    return new (t || LightboxModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: LightboxModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [GalleryModule, GalleryModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LightboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [GalleryModule, LightboxDirective, GallerizeDirective],\n      exports: [GalleryModule, LightboxDirective, GallerizeDirective]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GallerizeDirective, LIGHTBOX_CONFIG, Lightbox, LightboxComponent, LightboxDirective, LightboxModule };","map":{"version":3,"names":["i0","InjectionToken","Component","ChangeDetectionStrategy","Optional","Inject","Injectable","PLATFORM_ID","Directive","Host","Self","Input","NgModule","DOCUMENT","isPlatformBrowser","i1$1","GalleryComponent","ImageItem","GalleryModule","trigger","state","style","transition","animate","i1","ComponentPortal","ESCAPE","RIGHT_ARROW","LEFT_ARROW","Subject","debounceTime","switchMap","from","map","tap","finalize","EMPTY","Subscription","fromEvent","i2","i3","_c0","a0","a1","startAnimationTime","exitAnimationTime","_c1","value","params","LIGHTBOX_CONFIG","lightboxAnimation","opacity","transform","LightboxComponent","constructor","_document","_focusTrapFactory","_elementRef","_savePreviouslyFocusedElement","onAnimationDone","event","toState","_trapFocus","overlayRef","dispose","_restoreFocus","_focusTrap","create","nativeElement","focusInitialElementWhenReady","_elementFocusedBeforeDialogWasOpened","activeElement","focus","Promise","resolve","then","toFocus","destroy","_","ɵfac","LightboxComponent_Factory","t","ɵɵdirectiveInject","ConfigurableFocusTrapFactory","ElementRef","_2","ɵcmp","ɵɵdefineComponent","type","selectors","hostAttrs","hostVars","hostBindings","LightboxComponent_HostBindings","rf","ctx","ɵɵsyntheticHostListener","LightboxComponent_animation_lightbox_done_HostBindingHandler","$event","ɵɵattribute","id","role","ariaLabel","ariaLabelledBy","ariaDescribedBy","ɵɵsyntheticHostProperty","ɵɵpureFunction2","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","LightboxComponent_Template","ɵɵelementStart","ɵɵlistener","LightboxComponent_Template_i_click_0_listener","detach","ɵɵelementEnd","ɵɵelement","ɵɵproperty","closeIcon","ɵɵsanitizeHtml","ɵɵadvance","dependencies","styles","data","animation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","OnPush","animations","host","imports","undefined","decorators","defaultConfig","backdropClass","panelClass","hasBackdrop","keyboardShortcuts","Lightbox","config","_gallery","_overlay","_sanitizer","opened","closed","_config","setConfig","open","i","overlayConfig","positionStrategy","position","global","centerHorizontally","centerVertically","scrollStrategy","scrollStrategies","block","disposeOnNavigation","galleryRef","ref","set","_overlayRef","attachments","subscribe","next","detachments","galleryPortal","lightboxRef","attach","instance","bypassSecurityTrustHtml","backdropClick","close","keydownEvents","keyCode","prev","hasAttached","Lightbox_Factory","ɵɵinject","Gallery","Overlay","DomSanitizer","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","GallerizeDirective","_zone","_el","_lightbox","platform","_galleryCmp","_galleryId","_mode","ngOnInit","runOutsideAngular","gallerize","detectorMode","galleryMode","ngOnDestroy","_detector$","complete","_observer$","disconnect","_itemClick$","unsubscribe","_itemChange$","itemClick","itemsChanged","load","items","pipe","imageElements","querySelectorAll","length","images","el","cursor","addEventListener","run","HTMLImageElement","src","getAttribute","thumb","elStyle","defaultView","getComputedStyle","background","backgroundImage","slice","replace","push","MutationObserver","observe","childList","subtree","GallerizeDirective_Factory","NgZone","ɵdir","ɵɵdefineDirective","inputs","Object","LightboxDirective","_renderer","clickEvent","index","setStyle","LightboxDirective_Factory","Renderer2","ɵɵInputFlags","None","LightboxModule","LightboxModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","exports"],"sources":["C:/Repository/Jupiter/juno-app/node_modules/ng-gallery/fesm2022/ng-gallery-lightbox.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, Optional, Inject, Injectable, PLATFORM_ID, Directive, Host, Self, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport * as i1$1 from 'ng-gallery';\nimport { GalleryComponent, ImageItem, GalleryModule } from 'ng-gallery';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ESCAPE, RIGHT_ARROW, LEFT_ARROW } from '@angular/cdk/keycodes';\nimport { Subject, debounceTime, switchMap, from, map, tap, finalize, EMPTY, Subscription, fromEvent } from 'rxjs';\nimport * as i2 from '@angular/cdk/overlay';\nimport * as i3 from '@angular/platform-browser';\n\nconst LIGHTBOX_CONFIG = new InjectionToken('LIGHTBOX_CONFIG');\n\nconst lightboxAnimation = trigger('lightbox', [\n    state('void, exit', style({ opacity: 0, transform: 'scale(0.7)' })),\n    state('enter', style({ transform: 'none' })),\n    transition('* => enter', animate('{{startAnimationTime}}ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'none', opacity: 1 }))),\n    transition('* => void, * => exit', animate('{{exitAnimationTime}}ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 0 }))),\n]);\n\nclass LightboxComponent {\n    constructor(_document, _focusTrapFactory, _elementRef) {\n        this._document = _document;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._elementRef = _elementRef;\n        /** State of the lightbox animation. */\n        this.state = 'enter';\n        this._savePreviouslyFocusedElement();\n    }\n    /** Callback, invoked whenever an animation on the host completes. */\n    onAnimationDone(event) {\n        if (event.toState === 'enter') {\n            this._trapFocus();\n        }\n        else {\n            this.overlayRef.dispose();\n            this._restoreFocus();\n        }\n    }\n    /** Moves the focus inside the focus trap. */\n    _trapFocus() {\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        }\n        // If were to attempt to focus immediately, then the content of the lightbox would not yet be\n        // ready in instances where change detection has to run first. To deal with this, we simply\n        // wait for the microtask queue to be empty.\n        this._focusTrap.focusInitialElementWhenReady();\n    }\n    /** Saves a reference to the element that was focused before the lightbox was opened. */\n    _savePreviouslyFocusedElement() {\n        if (this._document) {\n            this._elementFocusedBeforeDialogWasOpened = this._document.activeElement;\n            // Note that there is no focus method when rendering on the server.\n            if (this._elementRef.nativeElement.focus) {\n                // Move focus onto the lightbox immediately in order to prevent the user from accidentally\n                // opening multiple dialogs at the same time. Needs to be async, because the element\n                // may not be focusable immediately.\n                Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n            }\n        }\n    }\n    /** Restores focus to the element that was focused before the lightbox opened. */\n    _restoreFocus() {\n        const toFocus = this._elementFocusedBeforeDialogWasOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (toFocus && typeof toFocus.focus === 'function') {\n            toFocus.focus();\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LightboxComponent, deps: [{ token: DOCUMENT, optional: true }, { token: i1.ConfigurableFocusTrapFactory }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: LightboxComponent, isStandalone: true, selector: \"lightbox\", host: { attributes: { \"tabindex\": \"-1\", \"aria-modal\": \"true\" }, listeners: { \"@lightbox.done\": \"onAnimationDone($event)\" }, properties: { \"attr.id\": \"\\\"lightbox-\\\" + id\", \"attr.role\": \"role\", \"attr.aria-labelledby\": \"ariaLabel ? null : ariaLabelledBy\", \"attr.aria-label\": \"ariaLabel\", \"attr.aria-describedby\": \"ariaDescribedBy || null\", \"@lightbox\": \"{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }\" } }, ngImport: i0, template: `\r\n    <i class=\"g-btn-close\" aria-label=\"Close\" [innerHTML]=\"closeIcon\" (click)=\"overlayRef.detach()\"></i>\r\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\"></gallery>\r\n  `, isInline: true, styles: [\"::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{height:100%;width:100%;overflow:hidden;margin:0}::ng-deep lightbox gallery gallery-core{height:100%!important}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;inset:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;inset:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}::ng-deep .g-btn-close svg{width:100%;height:100%;opacity:.6;transition:opacity linear .15s;filter:drop-shadow(0px 0px 2px rgba(0,0,0,.8))}::ng-deep .g-btn-close svg:hover{opacity:1}\\n\"], dependencies: [{ kind: \"component\", type: GalleryComponent, selector: \"gallery\", inputs: [\"id\", \"items\", \"nav\", \"dots\", \"loop\", \"debug\", \"thumb\", \"counter\", \"dotsSize\", \"autoPlay\", \"thumbWidth\", \"thumbHeight\", \"disableThumb\", \"scrollBehavior\", \"navScrollBehavior\", \"slidingDisabled\", \"thumbSlidingDisabled\", \"mouseSlidingDisabled\", \"thumbMouseSlidingDisabled\", \"playerInterval\", \"slidingDuration\", \"slidingEase\", \"resizeDebounceTime\", \"imageSize\", \"thumbImageSize\", \"dotsPosition\", \"counterPosition\", \"slidingDirection\", \"loadingAttr\", \"loadingStrategy\", \"thumbPosition\", \"thumbView\", \"thumbDetached\", \"thumbAutosize\", \"itemAutosize\", \"autoHeight\", \"destroyRef\", \"skipInitConfig\"], outputs: [\"itemClick\", \"thumbClick\", \"playingChange\", \"indexChange\", \"itemsChange\", \"error\"] }], animations: [lightboxAnimation], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LightboxComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'lightbox', changeDetection: ChangeDetectionStrategy.OnPush, animations: [lightboxAnimation], template: `\r\n    <i class=\"g-btn-close\" aria-label=\"Close\" [innerHTML]=\"closeIcon\" (click)=\"overlayRef.detach()\"></i>\r\n    <gallery [id]=\"id\" [destroyRef]=\"false\" [skipInitConfig]=\"true\"></gallery>\r\n  `, host: {\n                        'tabindex': '-1',\n                        'aria-modal': 'true',\n                        '[attr.id]': '\"lightbox-\" + id',\n                        '[attr.role]': 'role',\n                        '[attr.aria-labelledby]': 'ariaLabel ? null : ariaLabelledBy',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '[attr.aria-describedby]': 'ariaDescribedBy || null',\n                        '[@lightbox]': '{ value: state, params: { startAnimationTime: startAnimationTime, exitAnimationTime: exitAnimationTime } }',\n                        '(@lightbox.done)': 'onAnimationDone($event)',\n                    }, standalone: true, imports: [GalleryComponent], styles: [\"::ng-deep lightbox{position:relative;display:block;width:1100px;height:800px;max-width:94vw;max-height:90vh;border-radius:4px;overflow:hidden;box-shadow:0 11px 15px -7px #0003,0 24px 38px 3px #00000024,0 9px 46px 8px #0000001f}::ng-deep lightbox:focus{outline:none}::ng-deep lightbox gallery{height:100%;width:100%;overflow:hidden;margin:0}::ng-deep lightbox gallery gallery-core{height:100%!important}::ng-deep .g-backdrop{background-color:#00000052}::ng-deep .fullscreen{width:100%}::ng-deep .fullscreen ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;inset:0;height:100%;width:100%;border-radius:0}::ng-deep .g-overlay{margin:auto}@media only screen and (max-width: 480px){::ng-deep .g-overlay{width:100%}::ng-deep .g-overlay ::ng-deep lightbox{max-width:unset;max-height:unset;position:fixed;inset:0;height:100%;width:100%;border-radius:0}}::ng-deep .g-btn-close{position:absolute;right:.9em;top:.9em;z-index:60;cursor:pointer;width:20px;height:20px}@media only screen and (max-width: 480px){::ng-deep .g-btn-close{right:.7em;top:.7em}}::ng-deep .g-btn-close svg{width:100%;height:100%;opacity:.6;transition:opacity linear .15s;filter:drop-shadow(0px 0px 2px rgba(0,0,0,.8))}::ng-deep .g-btn-close svg:hover{opacity:1}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1.ConfigurableFocusTrapFactory }, { type: i0.ElementRef }]; } });\n\nconst defaultConfig = {\n    backdropClass: 'g-backdrop',\n    panelClass: 'g-overlay',\n    hasBackdrop: true,\n    keyboardShortcuts: true,\n    role: 'lightbox',\n    startAnimationTime: 150,\n    exitAnimationTime: 75,\n    closeIcon: `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<svg width=\"512px\" height=\"512px\" enable-background=\"new 0 0 47.971 47.971\" version=\"1.1\" viewBox=\"0 0 47.971 47.971\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\">\r\n\t<path d=\"M28.228,23.986L47.092,5.122c1.172-1.171,1.172-3.071,0-4.242c-1.172-1.172-3.07-1.172-4.242,0L23.986,19.744L5.121,0.88   c-1.172-1.172-3.07-1.172-4.242,0c-1.172,1.171-1.172,3.071,0,4.242l18.865,18.864L0.879,42.85c-1.172,1.171-1.172,3.071,0,4.242   C1.465,47.677,2.233,47.97,3,47.97s1.535-0.293,2.121-0.879l18.865-18.864L42.85,47.091c0.586,0.586,1.354,0.879,2.121,0.879   s1.535-0.293,2.121-0.879c1.172-1.171,1.172-3.071,0-4.242L28.228,23.986z\" fill=\"#fff\"/>\r\n</svg>\r\n`\n};\n\nclass Lightbox {\n    constructor(config, _gallery, _overlay, _sanitizer) {\n        this._gallery = _gallery;\n        this._overlay = _overlay;\n        this._sanitizer = _sanitizer;\n        /** Stream that emits when lightbox is opened */\n        this.opened = new Subject();\n        /** Stream that emits when lightbox is closed */\n        this.closed = new Subject();\n        this._config = config ? { ...defaultConfig, ...config } : defaultConfig;\n    }\n    /**\n     * Set Lightbox Config\n     * @param config - LightboxConfig\n     */\n    setConfig(config) {\n        this._config = { ...this._config, ...config };\n    }\n    /**\n     * Open Lightbox Overlay\n     * @param i - Current Index\n     * @param id - Gallery ID\n     * @param config - Lightbox Config\n     */\n    open(i = 0, id = 'lightbox', config) {\n        const _config = config ? { ...this._config, ...config } : this._config;\n        const overlayConfig = {\n            backdropClass: _config.backdropClass,\n            panelClass: _config.panelClass,\n            hasBackdrop: _config.hasBackdrop,\n            positionStrategy: this._overlay.position().global().centerHorizontally().centerVertically(),\n            scrollStrategy: this._overlay.scrollStrategies.block(),\n            disposeOnNavigation: true\n        };\n        const galleryRef = this._gallery.ref(id);\n        galleryRef.set(i);\n        this._overlayRef = this._overlay.create(overlayConfig);\n        // overlay opened event\n        this._overlayRef.attachments().subscribe(() => this.opened.next(id));\n        // overlay closed event\n        this._overlayRef.detachments().subscribe(() => this.closed.next(id));\n        // Attach gallery to the overlay\n        const galleryPortal = new ComponentPortal(LightboxComponent);\n        const lightboxRef = this._overlayRef.attach(galleryPortal);\n        lightboxRef.instance.id = id;\n        lightboxRef.instance.overlayRef = this._overlayRef;\n        lightboxRef.instance.closeIcon = this._sanitizer.bypassSecurityTrustHtml(this._config.closeIcon);\n        lightboxRef.instance.role = this._config.role;\n        lightboxRef.instance.ariaLabel = this._config.ariaLabel;\n        lightboxRef.instance.ariaLabelledBy = this._config.ariaLabelledBy;\n        lightboxRef.instance.ariaDescribedBy = this._config.ariaDescribedBy;\n        lightboxRef.instance.startAnimationTime = this._config.startAnimationTime;\n        lightboxRef.instance.exitAnimationTime = this._config.exitAnimationTime;\n        if (_config.hasBackdrop) {\n            this._overlayRef.backdropClick().subscribe(() => this.close());\n        }\n        // Add keyboard shortcuts\n        if (_config.keyboardShortcuts) {\n            this._overlayRef.keydownEvents().subscribe((event) => {\n                switch (event.keyCode) {\n                    case LEFT_ARROW:\n                        galleryRef.prev();\n                        break;\n                    case RIGHT_ARROW:\n                        galleryRef.next();\n                        break;\n                    case ESCAPE:\n                        this.close();\n                }\n            });\n        }\n    }\n    /**\n     * Close Lightbox Overlay\n     */\n    close() {\n        if (this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Lightbox, deps: [{ token: LIGHTBOX_CONFIG, optional: true }, { token: i1$1.Gallery }, { token: i2.Overlay }, { token: i3.DomSanitizer }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Lightbox, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: Lightbox, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [LIGHTBOX_CONFIG]\n                }] }, { type: i1$1.Gallery }, { type: i2.Overlay }, { type: i3.DomSanitizer }]; } });\n\nclass GallerizeDirective {\n    constructor(_zone, _el, _gallery, _lightbox, platform, _document, _galleryCmp) {\n        this._zone = _zone;\n        this._el = _el;\n        this._gallery = _gallery;\n        this._lightbox = _lightbox;\n        this._document = _document;\n        this._galleryCmp = _galleryCmp;\n        /** Default gallery id */\n        this._galleryId = 'lightbox';\n        /** The selector used to query images elements */\n        this.selector = 'img';\n        // Set gallerize mode\n        if (isPlatformBrowser(platform)) {\n            this._mode = _galleryCmp ? \"gallery\" /* GallerizeMode.Gallery */ : \"detector\" /* GallerizeMode.Detector */;\n        }\n    }\n    ngOnInit() {\n        this._zone.runOutsideAngular(() => {\n            this._galleryId = this.gallerize || this._galleryId;\n            const ref = this._gallery.ref(this._galleryId);\n            switch (this._mode) {\n                case \"detector\" /* GallerizeMode.Detector */:\n                    this.detectorMode(ref);\n                    break;\n                case \"gallery\" /* GallerizeMode.Gallery */:\n                    this.galleryMode(ref);\n            }\n        });\n    }\n    ngOnDestroy() {\n        switch (this._mode) {\n            case \"detector\" /* GallerizeMode.Detector */:\n                this._detector$.complete();\n                this._observer$.disconnect();\n                break;\n            case \"gallery\" /* GallerizeMode.Gallery */:\n                this._itemClick$.unsubscribe();\n                this._itemChange$.unsubscribe();\n        }\n    }\n    /** Gallery mode: means `gallerize` directive is used on `<gallery>` component\n     * Adds a click event to each gallery item so it opens in lightbox */\n    galleryMode(galleryRef) {\n        // Clone its items to the new gallery instance\n        this._itemClick$ = this._galleryCmp.galleryRef.itemClick.subscribe((i) => this._lightbox.open(i, this._galleryId));\n        this._itemChange$ = this._galleryCmp.galleryRef.itemsChanged.subscribe((state) => galleryRef.load(state.items));\n    }\n    /** Detector mode: means `gallerize` directive is used on a normal HTMLElement\n     *  Detects images and adds a click event to each image, so it opens in the lightbox */\n    detectorMode(galleryRef) {\n        this._detector$ = new Subject();\n        // Query image elements\n        this._detector$.pipe(debounceTime(300), switchMap(() => {\n            /** get all img elements from content */\n            const imageElements = this._el.nativeElement.querySelectorAll(this.selector);\n            if (imageElements && imageElements.length) {\n                const images = [];\n                return from(imageElements).pipe(map((el, i) => {\n                    // Add click event to the image\n                    el.style.cursor = 'pointer';\n                    el.addEventListener('click', () => {\n                        this._zone.run(() => this._lightbox.open(i, this._galleryId));\n                    });\n                    if (el instanceof HTMLImageElement) {\n                        // If element is type of img use the src property\n                        return {\n                            src: el.getAttribute('imageSrc') || el.src,\n                            thumb: el.getAttribute('thumbSrc') || el.src\n                        };\n                    }\n                    else {\n                        // Otherwise, use element background-image url\n                        const elStyle = this._document.defaultView.getComputedStyle(el, null);\n                        const background = elStyle.backgroundImage.slice(4, -1).replace(/\"/g, '');\n                        return {\n                            src: el.getAttribute('imageSrc') || background,\n                            thumb: el.getAttribute('thumbSrc') || background\n                        };\n                    }\n                }), tap((data) => images.push(new ImageItem(data))), finalize(() => galleryRef.load(images)));\n            }\n            else {\n                return EMPTY;\n            }\n        })).subscribe();\n        // Observe content changes\n        this._observer$ = new MutationObserver(() => this._detector$.next());\n        this._observer$.observe(this._el.nativeElement, { childList: true, subtree: true });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: GallerizeDirective, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1$1.Gallery }, { token: Lightbox }, { token: PLATFORM_ID }, { token: DOCUMENT }, { token: i1$1.GalleryComponent, host: true, optional: true, self: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: GallerizeDirective, isStandalone: true, selector: \"[gallerize]\", inputs: { gallerize: \"gallerize\", selector: \"selector\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: GallerizeDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[gallerize]',\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1$1.Gallery }, { type: Lightbox }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i1$1.GalleryComponent, decorators: [{\n                    type: Host\n                }, {\n                    type: Self\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { gallerize: [{\n                type: Input\n            }], selector: [{\n                type: Input\n            }] } });\n\nclass LightboxDirective {\n    constructor(_lightbox, _el, _renderer) {\n        this._lightbox = _lightbox;\n        this._el = _el;\n        this._renderer = _renderer;\n        this.clickEvent = Subscription.EMPTY;\n        this.index = 0;\n        this.id = 'root';\n    }\n    ngOnInit() {\n        this._renderer.setStyle(this._el.nativeElement, 'cursor', 'pointer');\n        this.clickEvent = fromEvent(this._el.nativeElement, 'click').pipe(tap(() => this._lightbox.open(this.index, this.id))).subscribe();\n    }\n    ngOnDestroy() {\n        this.clickEvent.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LightboxDirective, deps: [{ token: Lightbox }, { token: i0.ElementRef }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.1.1\", type: LightboxDirective, isStandalone: true, selector: \"[lightbox]\", inputs: { index: [\"lightbox\", \"index\"], id: [\"gallery\", \"id\"] }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LightboxDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[lightbox]',\n                    standalone: true\n                }]\n        }], ctorParameters: function () { return [{ type: Lightbox }, { type: i0.ElementRef }, { type: i0.Renderer2 }]; }, propDecorators: { index: [{\n                type: Input,\n                args: ['lightbox']\n            }], id: [{\n                type: Input,\n                args: ['gallery']\n            }] } });\n\nclass LightboxModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LightboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: LightboxModule, imports: [GalleryModule, LightboxDirective, GallerizeDirective], exports: [GalleryModule, LightboxDirective, GallerizeDirective] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LightboxModule, imports: [GalleryModule, GalleryModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: LightboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [GalleryModule, LightboxDirective, GallerizeDirective],\n                    exports: [GalleryModule, LightboxDirective, GallerizeDirective]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GallerizeDirective, LIGHTBOX_CONFIG, Lightbox, LightboxComponent, LightboxDirective, LightboxModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}