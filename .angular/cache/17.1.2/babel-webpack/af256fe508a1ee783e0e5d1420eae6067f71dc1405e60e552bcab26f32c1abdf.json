{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { inject, NgZone, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nconst _c0 = [\"*\"];\nclass MapEventManager {\n  /** Clears all currently-registered event listeners. */\n  _clearListeners() {\n    for (const listener of this._listeners) {\n      listener.remove();\n    }\n    this._listeners = [];\n  }\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n    /** Pending listeners that were added before the target was set. */\n    this._pending = [];\n    this._listeners = [];\n    this._targetStream = new BehaviorSubject(undefined);\n  }\n  /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n  getLazyEmitter(name) {\n    return this._targetStream.pipe(switchMap(target => {\n      const observable = new Observable(observer => {\n        // If the target hasn't been initialized yet, cache the observer so it can be added later.\n        if (!target) {\n          this._pending.push({\n            observable,\n            observer\n          });\n          return undefined;\n        }\n        const listener = target.addListener(name, event => {\n          this._ngZone.run(() => observer.next(event));\n        });\n        // If there's an error when initializing the Maps API (e.g. a wrong API key), it will\n        // return a dummy object that returns `undefined` from `addListener` (see #26514).\n        if (!listener) {\n          observer.complete();\n          return undefined;\n        }\n        this._listeners.push(listener);\n        return () => listener.remove();\n      });\n      return observable;\n    }));\n  }\n  /** Sets the current target that the manager should bind events to. */\n  setTarget(target) {\n    const currentTarget = this._targetStream.value;\n    if (target === currentTarget) {\n      return;\n    }\n    // Clear the listeners from the pre-existing target.\n    if (currentTarget) {\n      this._clearListeners();\n      this._pending = [];\n    }\n    this._targetStream.next(target);\n    // Add the listeners that were bound before the map was initialized.\n    this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n    this._pending = [];\n  }\n  /** Destroys the manager and clears the event listeners. */\n  destroy() {\n    this._clearListeners();\n    this._pending = [];\n    this._targetStream.complete();\n  }\n}\n\n/** Imports a Google Maps library. */\nfunction importLibrary(name, symbol) {\n  // TODO(crisbeto): needs to cast to `any` to avoid some internal limitations around typings.\n  // Should be cleaned up eventually.\n  return window.google.maps.importLibrary(name).then(library => library[symbol]);\n}\n\n/// <reference types=\"google.maps\" />\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n  center: {\n    lat: 37.421995,\n    lng: -122.084092\n  },\n  zoom: 17,\n  // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n  mapTypeId: 'roadmap'\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nclass GoogleMap {\n  set center(center) {\n    this._center = center;\n  }\n  set zoom(zoom) {\n    this._zoom = zoom;\n  }\n  set options(options) {\n    this._options = options || DEFAULT_OPTIONS;\n  }\n  constructor(_elementRef, _ngZone, platformId) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n    this.height = DEFAULT_HEIGHT;\n    /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n    this.width = DEFAULT_WIDTH;\n    this._options = DEFAULT_OPTIONS;\n    /** Event emitted when the map is initialized. */\n    this.mapInitialized = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n     */\n    this.authFailure = new EventEmitter();\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n     */\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n     */\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n     */\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n     */\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n     */\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n     */\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n     */\n    this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n     */\n    this.idle = this._eventManager.getLazyEmitter('idle');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n     */\n    this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n     */\n    this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n     */\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n     */\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n     */\n    this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n     */\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n     */\n    this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n     */\n    this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n     */\n    this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n    this._isBrowser = isPlatformBrowser(platformId);\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n      if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace google not found, cannot construct embedded google ' + 'map. Please install the Google Maps JavaScript API: ' + 'https://developers.google.com/maps/documentation/javascript/' + 'tutorial#Loading_the_Maps_API');\n      }\n      this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n      googleMapsWindow.gm_authFailure = () => {\n        if (this._existingAuthFailureCallback) {\n          this._existingAuthFailureCallback();\n        }\n        this.authFailure.emit();\n      };\n    }\n  }\n  ngOnChanges(changes) {\n    if (changes['height'] || changes['width']) {\n      this._setSize();\n    }\n    const googleMap = this.googleMap;\n    if (googleMap) {\n      if (changes['options']) {\n        googleMap.setOptions(this._combineOptions());\n      }\n      if (changes['center'] && this._center) {\n        googleMap.setCenter(this._center);\n      }\n      // Note that the zoom can be zero.\n      if (changes['zoom'] && this._zoom != null) {\n        googleMap.setZoom(this._zoom);\n      }\n      if (changes['mapTypeId'] && this.mapTypeId) {\n        googleMap.setMapTypeId(this.mapTypeId);\n      }\n    }\n  }\n  ngOnInit() {\n    // It should be a noop during server-side rendering.\n    if (this._isBrowser) {\n      this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n      this._setSize();\n      // Create the object outside the zone so its events don't trigger change detection.\n      // We'll bring it back in inside the `MapEventManager` only for the events that the\n      // user has subscribed to.\n      if (google.maps.Map) {\n        this._initialize(google.maps.Map);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          importLibrary('maps', 'Map').then(mapConstructor => this._initialize(mapConstructor));\n        });\n      }\n    }\n  }\n  _initialize(mapConstructor) {\n    this._ngZone.runOutsideAngular(() => {\n      this.googleMap = new mapConstructor(this._mapEl, this._combineOptions());\n      this._eventManager.setTarget(this.googleMap);\n      this.mapInitialized.emit(this.googleMap);\n    });\n  }\n  ngOnDestroy() {\n    this.mapInitialized.complete();\n    this._eventManager.destroy();\n    if (this._isBrowser) {\n      const googleMapsWindow = window;\n      googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n    }\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n   */\n  fitBounds(bounds, padding) {\n    this._assertInitialized();\n    this.googleMap.fitBounds(bounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n   */\n  panBy(x, y) {\n    this._assertInitialized();\n    this.googleMap.panBy(x, y);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n   */\n  panTo(latLng) {\n    this._assertInitialized();\n    this.googleMap.panTo(latLng);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n   */\n  panToBounds(latLngBounds, padding) {\n    this._assertInitialized();\n    this.googleMap.panToBounds(latLngBounds, padding);\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.googleMap.getBounds() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n   */\n  getCenter() {\n    this._assertInitialized();\n    return this.googleMap.getCenter();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n   */\n  getClickableIcons() {\n    this._assertInitialized();\n    return this.googleMap.getClickableIcons();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n   */\n  getHeading() {\n    this._assertInitialized();\n    return this.googleMap.getHeading();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n   */\n  getMapTypeId() {\n    this._assertInitialized();\n    return this.googleMap.getMapTypeId();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n   */\n  getProjection() {\n    this._assertInitialized();\n    return this.googleMap.getProjection() || null;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n   */\n  getStreetView() {\n    this._assertInitialized();\n    return this.googleMap.getStreetView();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n   */\n  getTilt() {\n    this._assertInitialized();\n    return this.googleMap.getTilt();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n   */\n  getZoom() {\n    this._assertInitialized();\n    return this.googleMap.getZoom();\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n   */\n  get controls() {\n    this._assertInitialized();\n    return this.googleMap.controls;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n   */\n  get data() {\n    this._assertInitialized();\n    return this.googleMap.data;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n   */\n  get mapTypes() {\n    this._assertInitialized();\n    return this.googleMap.mapTypes;\n  }\n  /**\n   * See\n   * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n   */\n  get overlayMapTypes() {\n    this._assertInitialized();\n    return this.googleMap.overlayMapTypes;\n  }\n  /** Returns a promise that resolves when the map has been initialized. */\n  _resolveMap() {\n    return this.googleMap ? Promise.resolve(this.googleMap) : this.mapInitialized.pipe(take(1)).toPromise();\n  }\n  _setSize() {\n    if (this._mapEl) {\n      const styles = this._mapEl.style;\n      styles.height = this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n      styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n    }\n  }\n  /** Combines the center and zoom and the other map options into a single object */\n  _combineOptions() {\n    const options = this._options || {};\n    return {\n      ...options,\n      // It's important that we set **some** kind of `center` and `zoom`, otherwise\n      // Google Maps will render a blank rectangle which looks broken.\n      center: this._center || options.center || DEFAULT_OPTIONS.center,\n      zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n      // Passing in an undefined `mapTypeId` seems to break tile loading\n      // so make sure that we have some kind of default (see #22082).\n      mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId\n    };\n  }\n  /** Asserts that the map has been initialized. */\n  _assertInitialized() {\n    if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n  static #_ = this.ɵfac = function GoogleMap_Factory(t) {\n    return new (t || GoogleMap)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: GoogleMap,\n    selectors: [[\"google-map\"]],\n    inputs: {\n      height: \"height\",\n      width: \"width\",\n      mapTypeId: \"mapTypeId\",\n      center: \"center\",\n      zoom: \"zoom\",\n      options: \"options\"\n    },\n    outputs: {\n      mapInitialized: \"mapInitialized\",\n      authFailure: \"authFailure\",\n      boundsChanged: \"boundsChanged\",\n      centerChanged: \"centerChanged\",\n      mapClick: \"mapClick\",\n      mapDblclick: \"mapDblclick\",\n      mapDrag: \"mapDrag\",\n      mapDragend: \"mapDragend\",\n      mapDragstart: \"mapDragstart\",\n      headingChanged: \"headingChanged\",\n      idle: \"idle\",\n      maptypeidChanged: \"maptypeidChanged\",\n      mapMousemove: \"mapMousemove\",\n      mapMouseout: \"mapMouseout\",\n      mapMouseover: \"mapMouseover\",\n      projectionChanged: \"projectionChanged\",\n      mapRightclick: \"mapRightclick\",\n      tilesloaded: \"tilesloaded\",\n      tiltChanged: \"tiltChanged\",\n      zoomChanged: \"zoomChanged\"\n    },\n    exportAs: [\"googleMap\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"map-container\"]],\n    template: function GoogleMap_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMap, [{\n    type: Component,\n    args: [{\n      selector: 'google-map',\n      exportAs: 'googleMap',\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: '<div class=\"map-container\"></div><ng-content />',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], () => [{\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }, {\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], {\n    height: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    mapTypeId: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    zoom: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    mapInitialized: [{\n      type: Output\n    }],\n    authFailure: [{\n      type: Output\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    headingChanged: [{\n      type: Output\n    }],\n    idle: [{\n      type: Output\n    }],\n    maptypeidChanged: [{\n      type: Output\n    }],\n    mapMousemove: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    projectionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    tilesloaded: [{\n      type: Output\n    }],\n    tiltChanged: [{\n      type: Output\n    }],\n    zoomChanged: [{\n      type: Output\n    }]\n  });\n})();\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n  return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n/// <reference types=\"google.maps\" />\nclass MapBaseLayer {\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._ngZone.runOutsideAngular(() => {\n        this._initializeObject();\n      });\n      this._assertInitialized();\n      this._setMap();\n    }\n  }\n  ngOnDestroy() {\n    this._unsetMap();\n  }\n  _assertInitialized() {\n    if (!this._map.googleMap) {\n      throw Error('Cannot access Google Map information before the API has been initialized. ' + 'Please wait for the API to load before trying to interact with it.');\n    }\n  }\n  _initializeObject() {}\n  _setMap() {}\n  _unsetMap() {}\n  static #_ = this.ɵfac = function MapBaseLayer_Factory(t) {\n    return new (t || MapBaseLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapBaseLayer,\n    selectors: [[\"map-base-layer\"]],\n    exportAs: [\"mapBaseLayer\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBaseLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-base-layer',\n      exportAs: 'mapBaseLayer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], null);\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nclass MapBicyclingLayer {\n  constructor() {\n    this._map = inject(GoogleMap);\n    this._zone = inject(NgZone);\n    /** Event emitted when the bicycling layer is initialized. */\n    this.bicyclingLayerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      if (google.maps.BicyclingLayer && this._map.googleMap) {\n        this._initialize(this._map.googleMap, google.maps.BicyclingLayer);\n      } else {\n        this._zone.runOutsideAngular(() => {\n          Promise.all([this._map._resolveMap(), importLibrary('maps', 'BicyclingLayer')]).then(([map, layerConstructor]) => {\n            this._initialize(map, layerConstructor);\n          });\n        });\n      }\n    }\n  }\n  _initialize(map, layerConstructor) {\n    this._zone.runOutsideAngular(() => {\n      this.bicyclingLayer = new layerConstructor();\n      this.bicyclingLayerInitialized.emit(this.bicyclingLayer);\n      this._assertLayerInitialized();\n      this.bicyclingLayer.setMap(map);\n    });\n  }\n  ngOnDestroy() {\n    this.bicyclingLayer?.setMap(null);\n  }\n  _assertLayerInitialized() {\n    if (!this.bicyclingLayer) {\n      throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n  static #_ = this.ɵfac = function MapBicyclingLayer_Factory(t) {\n    return new (t || MapBicyclingLayer)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapBicyclingLayer,\n    selectors: [[\"map-bicycling-layer\"]],\n    outputs: {\n      bicyclingLayerInitialized: \"bicyclingLayerInitialized\"\n    },\n    exportAs: [\"mapBicyclingLayer\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapBicyclingLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-bicycling-layer',\n      exportAs: 'mapBicyclingLayer',\n      standalone: true\n    }]\n  }], null, {\n    bicyclingLayerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nclass MapCircle {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set center(center) {\n    this._center.next(center);\n  }\n  set radius(radius) {\n    this._radius.next(radius);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._center = new BehaviorSubject(undefined);\n    this._radius = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n     */\n    this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n     */\n    this.circleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n     */\n    this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n     */\n    this.circleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n     */\n    this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n     */\n    this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n     */\n    this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n     */\n    this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n     */\n    this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n     */\n    this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n     */\n    this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n     */\n    this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n     */\n    this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the circle is initialized. */\n    this.circleInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (!this._map._isBrowser) {\n      return;\n    }\n    this._combineOptions().pipe(take(1)).subscribe(options => {\n      if (google.maps.Circle && this._map.googleMap) {\n        this._initialize(this._map.googleMap, google.maps.Circle, options);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          Promise.all([this._map._resolveMap(), importLibrary('maps', 'Circle')]).then(([map, circleConstructor]) => {\n            this._initialize(map, circleConstructor, options);\n          });\n        });\n      }\n    });\n  }\n  _initialize(map, circleConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.circle = new circleConstructor(options);\n      this._assertInitialized();\n      this.circle.setMap(map);\n      this._eventManager.setTarget(this.circle);\n      this.circleInitialized.emit(this.circle);\n      this._watchForOptionsChanges();\n      this._watchForCenterChanges();\n      this._watchForRadiusChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.circle?.setMap(null);\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.circle.getBounds();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n   */\n  getCenter() {\n    this._assertInitialized();\n    return this.circle.getCenter();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.circle.getDraggable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.circle.getEditable();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n   */\n  getRadius() {\n    this._assertInitialized();\n    return this.circle.getRadius();\n  }\n  /**\n   * @see\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.circle.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n      const combinedOptions = {\n        ...options,\n        center: center || options.center,\n        radius: radius !== undefined ? radius : options.radius\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.circle.setOptions(options);\n    });\n  }\n  _watchForCenterChanges() {\n    this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n      if (center) {\n        this._assertInitialized();\n        this.circle.setCenter(center);\n      }\n    });\n  }\n  _watchForRadiusChanges() {\n    this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n      if (radius !== undefined) {\n        this._assertInitialized();\n        this.circle.setRadius(radius);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.circle) {\n        throw Error('Cannot interact with a Google Map Circle before it has been ' + 'initialized. Please wait for the Circle to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapCircle_Factory(t) {\n    return new (t || MapCircle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapCircle,\n    selectors: [[\"map-circle\"]],\n    inputs: {\n      options: \"options\",\n      center: \"center\",\n      radius: \"radius\"\n    },\n    outputs: {\n      centerChanged: \"centerChanged\",\n      circleClick: \"circleClick\",\n      circleDblclick: \"circleDblclick\",\n      circleDrag: \"circleDrag\",\n      circleDragend: \"circleDragend\",\n      circleDragstart: \"circleDragstart\",\n      circleMousedown: \"circleMousedown\",\n      circleMousemove: \"circleMousemove\",\n      circleMouseout: \"circleMouseout\",\n      circleMouseover: \"circleMouseover\",\n      circleMouseup: \"circleMouseup\",\n      radiusChanged: \"radiusChanged\",\n      circleRightclick: \"circleRightclick\",\n      circleInitialized: \"circleInitialized\"\n    },\n    exportAs: [\"mapCircle\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapCircle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-circle',\n      exportAs: 'mapCircle',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    center: [{\n      type: Input\n    }],\n    radius: [{\n      type: Input\n    }],\n    centerChanged: [{\n      type: Output\n    }],\n    circleClick: [{\n      type: Output\n    }],\n    circleDblclick: [{\n      type: Output\n    }],\n    circleDrag: [{\n      type: Output\n    }],\n    circleDragend: [{\n      type: Output\n    }],\n    circleDragstart: [{\n      type: Output\n    }],\n    circleMousedown: [{\n      type: Output\n    }],\n    circleMousemove: [{\n      type: Output\n    }],\n    circleMouseout: [{\n      type: Output\n    }],\n    circleMouseover: [{\n      type: Output\n    }],\n    circleMouseup: [{\n      type: Output\n    }],\n    radiusChanged: [{\n      type: Output\n    }],\n    circleRightclick: [{\n      type: Output\n    }],\n    circleInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nclass MapDirectionsRenderer {\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions.directions\n   */\n  set directions(directions) {\n    this._directions = directions;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRendererOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.directions_changed\n     */\n    this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n    /** Event emitted when the directions renderer is initialized. */\n    this.directionsRendererInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (google.maps.DirectionsRenderer && this._googleMap.googleMap) {\n        this._initialize(this._googleMap.googleMap, google.maps.DirectionsRenderer);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          Promise.all([this._googleMap._resolveMap(), importLibrary('routes', 'DirectionsRenderer')]).then(([map, rendererConstructor]) => {\n            this._initialize(map, rendererConstructor);\n          });\n        });\n      }\n    }\n  }\n  _initialize(map, rendererConstructor) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.directionsRenderer = new rendererConstructor(this._combineOptions());\n      this._assertInitialized();\n      this.directionsRenderer.setMap(map);\n      this._eventManager.setTarget(this.directionsRenderer);\n      this.directionsRendererInitialized.emit(this.directionsRenderer);\n    });\n  }\n  ngOnChanges(changes) {\n    if (this.directionsRenderer) {\n      if (changes['options']) {\n        this.directionsRenderer.setOptions(this._combineOptions());\n      }\n      if (changes['directions'] && this._directions !== undefined) {\n        this.directionsRenderer.setDirections(this._directions);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this.directionsRenderer?.setMap(null);\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getDirections\n   */\n  getDirections() {\n    this._assertInitialized();\n    return this.directionsRenderer.getDirections();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getPanel\n   */\n  getPanel() {\n    this._assertInitialized();\n    return this.directionsRenderer.getPanel();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsRenderer.getRouteIndex\n   */\n  getRouteIndex() {\n    this._assertInitialized();\n    return this.directionsRenderer.getRouteIndex();\n  }\n  _combineOptions() {\n    const options = this._options || {};\n    return {\n      ...options,\n      directions: this._directions || options.directions,\n      map: this._googleMap.googleMap\n    };\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.directionsRenderer) {\n        throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' + 'initialized. Please wait for the Directions Renderer to load before trying ' + 'to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapDirectionsRenderer_Factory(t) {\n    return new (t || MapDirectionsRenderer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapDirectionsRenderer,\n    selectors: [[\"map-directions-renderer\"]],\n    inputs: {\n      directions: \"directions\",\n      options: \"options\"\n    },\n    outputs: {\n      directionsChanged: \"directionsChanged\",\n      directionsRendererInitialized: \"directionsRendererInitialized\"\n    },\n    exportAs: [\"mapDirectionsRenderer\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsRenderer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-directions-renderer',\n      exportAs: 'mapDirectionsRenderer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    directions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    directionsChanged: [{\n      type: Output\n    }],\n    directionsRendererInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nclass MapGroundOverlay {\n  /** URL of the image that will be shown in the overlay. */\n  set url(url) {\n    this._url.next(url);\n  }\n  /** Bounds for the overlay. */\n  get bounds() {\n    return this._bounds.value;\n  }\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n  /** Opacity of the overlay. */\n  set opacity(opacity) {\n    this._opacity.next(opacity);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._opacity = new BehaviorSubject(1);\n    this._url = new BehaviorSubject('');\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /** Whether the overlay is clickable */\n    this.clickable = false;\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.dblclick\n     */\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /** Event emitted when the ground overlay is initialized. */\n    this.groundOverlayInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      // The ground overlay setup is slightly different from the other Google Maps objects in that\n      // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n      // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n      this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n        if (this.groundOverlay) {\n          this.groundOverlay.setMap(null);\n          this.groundOverlay = undefined;\n        }\n        if (!bounds) {\n          return;\n        }\n        if (google.maps.GroundOverlay && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.GroundOverlay, bounds);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), importLibrary('maps', 'GroundOverlay')]).then(([map, overlayConstructor]) => {\n              this._initialize(map, overlayConstructor, bounds);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, overlayConstructor, bounds) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.groundOverlay = new overlayConstructor(this._url.getValue(), bounds, {\n        clickable: this.clickable,\n        opacity: this._opacity.value\n      });\n      this._assertInitialized();\n      this.groundOverlay.setMap(map);\n      this._eventManager.setTarget(this.groundOverlay);\n      this.groundOverlayInitialized.emit(this.groundOverlay);\n      // We only need to set up the watchers once.\n      if (!this._hasWatchers) {\n        this._hasWatchers = true;\n        this._watchForOpacityChanges();\n        this._watchForUrlChanges();\n      }\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.groundOverlay?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.groundOverlay.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getOpacity\n   */\n  getOpacity() {\n    this._assertInitialized();\n    return this.groundOverlay.getOpacity();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/image-overlay\n   * #GroundOverlay.getUrl\n   */\n  getUrl() {\n    this._assertInitialized();\n    return this.groundOverlay.getUrl();\n  }\n  _watchForOpacityChanges() {\n    this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n      if (opacity != null) {\n        this.groundOverlay?.setOpacity(opacity);\n      }\n    });\n  }\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      const overlay = this.groundOverlay;\n      if (overlay) {\n        overlay.set('url', url);\n        // Google Maps only redraws the overlay if we re-set the map.\n        overlay.setMap(null);\n        overlay.setMap(this._map.googleMap);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.groundOverlay) {\n        throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' + 'Please wait for the GroundOverlay to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapGroundOverlay_Factory(t) {\n    return new (t || MapGroundOverlay)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapGroundOverlay,\n    selectors: [[\"map-ground-overlay\"]],\n    inputs: {\n      url: \"url\",\n      bounds: \"bounds\",\n      clickable: \"clickable\",\n      opacity: \"opacity\"\n    },\n    outputs: {\n      mapClick: \"mapClick\",\n      mapDblclick: \"mapDblclick\",\n      groundOverlayInitialized: \"groundOverlayInitialized\"\n    },\n    exportAs: [\"mapGroundOverlay\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGroundOverlay, [{\n    type: Directive,\n    args: [{\n      selector: 'map-ground-overlay',\n      exportAs: 'mapGroundOverlay',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    url: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    opacity: [{\n      type: Input\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    groundOverlayInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nclass MapInfoWindow {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set position(position) {\n    this._position.next(position);\n  }\n  constructor(_googleMap, _elementRef, _ngZone) {\n    this._googleMap = _googleMap;\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._position = new BehaviorSubject(undefined);\n    this._destroy = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n     */\n    this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.content_changed\n     */\n    this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n     */\n    this.domready = this._eventManager.getLazyEmitter('domready');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.position_changed\n     */\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.zindex_changed\n     */\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    /** Event emitted when the info window is initialized. */\n    this.infoWindowInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.InfoWindow) {\n          this._initialize(google.maps.InfoWindow, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            importLibrary('maps', 'InfoWindow').then(infoWindowConstructor => this._initialize(infoWindowConstructor, options));\n          });\n        }\n      });\n    }\n  }\n  _initialize(infoWindowConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.infoWindow = new infoWindowConstructor(options);\n      this._eventManager.setTarget(this.infoWindow);\n      this.infoWindowInitialized.emit(this.infoWindow);\n      this._watchForOptionsChanges();\n      this._watchForPositionChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroy.next();\n    this._destroy.complete();\n    // If no info window has been created on the server, we do not try closing it.\n    // On the server, an info window cannot be created and this would cause errors.\n    if (this.infoWindow) {\n      this.close();\n    }\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n   */\n  close() {\n    this._assertInitialized();\n    this.infoWindow.close();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n   */\n  getContent() {\n    this._assertInitialized();\n    return this.infoWindow.getContent() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window\n   * #InfoWindow.getPosition\n   */\n  getPosition() {\n    this._assertInitialized();\n    return this.infoWindow.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n   */\n  getZIndex() {\n    this._assertInitialized();\n    return this.infoWindow.getZIndex();\n  }\n  /**\n   * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n   * then the position property of the options input is used instead.\n   */\n  open(anchor, shouldFocus) {\n    this._assertInitialized();\n    const anchorObject = anchor ? anchor.getAnchor() : undefined;\n    // Prevent the info window from initializing when trying to reopen on the same anchor.\n    // Note that when the window is opened for the first time, the anchor will always be\n    // undefined. If that's the case, we have to allow it to open in order to handle the\n    // case where the window doesn't have an anchor, but is placed at a particular position.\n    if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n      this._elementRef.nativeElement.style.display = '';\n      // The config is cast to `any`, because the internal typings are out of date.\n      this.infoWindow.open({\n        map: this._googleMap.googleMap,\n        anchor: anchorObject,\n        shouldFocus\n      });\n    }\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n      const combinedOptions = {\n        ...options,\n        position: position || options.position,\n        content: this._elementRef.nativeElement\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n      this._assertInitialized();\n      this.infoWindow.setOptions(options);\n    });\n  }\n  _watchForPositionChanges() {\n    this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n      if (position) {\n        this._assertInitialized();\n        this.infoWindow.setPosition(position);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.infoWindow) {\n        throw Error('Cannot interact with a Google Map Info Window before it has been ' + 'initialized. Please wait for the Info Window to load before trying to interact with ' + 'it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapInfoWindow_Factory(t) {\n    return new (t || MapInfoWindow)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapInfoWindow,\n    selectors: [[\"map-info-window\"]],\n    hostAttrs: [2, \"display\", \"none\"],\n    inputs: {\n      options: \"options\",\n      position: \"position\"\n    },\n    outputs: {\n      closeclick: \"closeclick\",\n      contentChanged: \"contentChanged\",\n      domready: \"domready\",\n      positionChanged: \"positionChanged\",\n      zindexChanged: \"zindexChanged\",\n      infoWindowInitialized: \"infoWindowInitialized\"\n    },\n    exportAs: [\"mapInfoWindow\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapInfoWindow, [{\n    type: Directive,\n    args: [{\n      selector: 'map-info-window',\n      exportAs: 'mapInfoWindow',\n      standalone: true,\n      host: {\n        'style': 'display: none'\n      }\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.ElementRef\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    closeclick: [{\n      type: Output\n    }],\n    contentChanged: [{\n      type: Output\n    }],\n    domready: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }],\n    infoWindowInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nclass MapKmlLayer {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set url(url) {\n    this._url.next(url);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._url = new BehaviorSubject('');\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n     */\n    this.kmlClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml\n     * #KmlLayer.defaultviewport_changed\n     */\n    this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n     */\n    this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n    /** Event emitted when the KML layer is initialized. */\n    this.kmlLayerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.KmlLayer && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.KmlLayer, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), importLibrary('maps', 'KmlLayer')]).then(([map, layerConstructor]) => {\n              this._initialize(map, layerConstructor, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, layerConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.kmlLayer = new layerConstructor(options);\n      this._assertInitialized();\n      this.kmlLayer.setMap(map);\n      this._eventManager.setTarget(this.kmlLayer);\n      this.kmlLayerInitialized.emit(this.kmlLayer);\n      this._watchForOptionsChanges();\n      this._watchForUrlChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.kmlLayer?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n   */\n  getDefaultViewport() {\n    this._assertInitialized();\n    return this.kmlLayer.getDefaultViewport();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n   */\n  getMetadata() {\n    this._assertInitialized();\n    return this.kmlLayer.getMetadata();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n   */\n  getStatus() {\n    this._assertInitialized();\n    return this.kmlLayer.getStatus();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n   */\n  getUrl() {\n    this._assertInitialized();\n    return this.kmlLayer.getUrl();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n   */\n  getZIndex() {\n    this._assertInitialized();\n    return this.kmlLayer.getZIndex();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n      const combinedOptions = {\n        ...options,\n        url: url || options.url\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      if (this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setOptions(options);\n      }\n    });\n  }\n  _watchForUrlChanges() {\n    this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n      if (url && this.kmlLayer) {\n        this._assertInitialized();\n        this.kmlLayer.setUrl(url);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.kmlLayer) {\n        throw Error('Cannot interact with a Google Map KmlLayer before it has been ' + 'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapKmlLayer_Factory(t) {\n    return new (t || MapKmlLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapKmlLayer,\n    selectors: [[\"map-kml-layer\"]],\n    inputs: {\n      options: \"options\",\n      url: \"url\"\n    },\n    outputs: {\n      kmlClick: \"kmlClick\",\n      defaultviewportChanged: \"defaultviewportChanged\",\n      statusChanged: \"statusChanged\",\n      kmlLayerInitialized: \"kmlLayerInitialized\"\n    },\n    exportAs: [\"mapKmlLayer\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapKmlLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-kml-layer',\n      exportAs: 'mapKmlLayer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    url: [{\n      type: Input\n    }],\n    kmlClick: [{\n      type: Output\n    }],\n    defaultviewportChanged: [{\n      type: Output\n    }],\n    statusChanged: [{\n      type: Output\n    }],\n    kmlLayerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n  position: {\n    lat: 37.421995,\n    lng: -122.084092\n  }\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapMarker {\n  /**\n   * Title of the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n   */\n  set title(title) {\n    this._title = title;\n  }\n  /**\n   * Position of the marker. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n   */\n  set position(position) {\n    this._position = position;\n  }\n  /**\n   * Label for the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n   */\n  set label(label) {\n    this._label = label;\n  }\n  /**\n   * Whether the marker is clickable. See:\n   * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n   */\n  set clickable(clickable) {\n    this._clickable = clickable;\n  }\n  /**\n   * Options used to configure the marker.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  /**\n   * Icon to be used for the marker.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n   */\n  set icon(icon) {\n    this._icon = icon;\n  }\n  /**\n   * Whether the marker is visible.\n   * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n   */\n  set visible(value) {\n    this._visible = value;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n     */\n    this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n     */\n    this.mapClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n     */\n    this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n     */\n    this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n     */\n    this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n     */\n    this.mapDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n     */\n    this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n     */\n    this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n     */\n    this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n     */\n    this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n     */\n    this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n     */\n    this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n     */\n    this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n     */\n    this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n     */\n    this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n     */\n    this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n     */\n    this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n     */\n    this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n     */\n    this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n     */\n    this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n     */\n    this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n    /** Event emitted when the marker is initialized. */\n    this.markerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (!this._googleMap._isBrowser) {\n      return;\n    }\n    if (google.maps.Marker && this._googleMap.googleMap) {\n      this._initialize(this._googleMap.googleMap, google.maps.Marker);\n    } else {\n      this._ngZone.runOutsideAngular(() => {\n        Promise.all([this._googleMap._resolveMap(), importLibrary('marker', 'Marker')]).then(([map, markerConstrutor]) => {\n          this._initialize(map, markerConstrutor);\n        });\n      });\n    }\n  }\n  _initialize(map, markerConstructor) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.marker = new markerConstructor(this._combineOptions());\n      this._assertInitialized();\n      this.marker.setMap(map);\n      this._eventManager.setTarget(this.marker);\n      this.markerInitialized.next(this.marker);\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      marker,\n      _title,\n      _position,\n      _label,\n      _clickable,\n      _icon,\n      _visible\n    } = this;\n    if (marker) {\n      if (changes['options']) {\n        marker.setOptions(this._combineOptions());\n      }\n      if (changes['title'] && _title !== undefined) {\n        marker.setTitle(_title);\n      }\n      if (changes['position'] && _position) {\n        marker.setPosition(_position);\n      }\n      if (changes['label'] && _label !== undefined) {\n        marker.setLabel(_label);\n      }\n      if (changes['clickable'] && _clickable !== undefined) {\n        marker.setClickable(_clickable);\n      }\n      if (changes['icon'] && _icon) {\n        marker.setIcon(_icon);\n      }\n      if (changes['visible'] && _visible !== undefined) {\n        marker.setVisible(_visible);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.markerInitialized.complete();\n    this._eventManager.destroy();\n    this.marker?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n   */\n  getAnimation() {\n    this._assertInitialized();\n    return this.marker.getAnimation() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n   */\n  getClickable() {\n    this._assertInitialized();\n    return this.marker.getClickable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n   */\n  getCursor() {\n    this._assertInitialized();\n    return this.marker.getCursor() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return !!this.marker.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n   */\n  getIcon() {\n    this._assertInitialized();\n    return this.marker.getIcon() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n   */\n  getLabel() {\n    this._assertInitialized();\n    return this.marker.getLabel() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n   */\n  getOpacity() {\n    this._assertInitialized();\n    return this.marker.getOpacity() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n   */\n  getPosition() {\n    this._assertInitialized();\n    return this.marker.getPosition() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n   */\n  getShape() {\n    this._assertInitialized();\n    return this.marker.getShape() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n   */\n  getTitle() {\n    this._assertInitialized();\n    return this.marker.getTitle() || null;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.marker.getVisible();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n   */\n  getZIndex() {\n    this._assertInitialized();\n    return this.marker.getZIndex() || null;\n  }\n  /** Gets the anchor point that can be used to attach other Google Maps objects. */\n  getAnchor() {\n    this._assertInitialized();\n    return this.marker;\n  }\n  /** Returns a promise that resolves when the marker has been initialized. */\n  _resolveMarker() {\n    return this.marker ? Promise.resolve(this.marker) : this.markerInitialized.pipe(take(1)).toPromise();\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  _combineOptions() {\n    const options = this._options || DEFAULT_MARKER_OPTIONS;\n    return {\n      ...options,\n      title: this._title || options.title,\n      position: this._position || options.position,\n      label: this._label || options.label,\n      clickable: this._clickable ?? options.clickable,\n      map: this._googleMap.googleMap,\n      icon: this._icon || options.icon,\n      visible: this._visible ?? options.visible\n    };\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.marker) {\n        throw Error('Cannot interact with a Google Map Marker before it has been ' + 'initialized. Please wait for the Marker to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapMarker_Factory(t) {\n    return new (t || MapMarker)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapMarker,\n    selectors: [[\"map-marker\"]],\n    inputs: {\n      title: \"title\",\n      position: \"position\",\n      label: \"label\",\n      clickable: \"clickable\",\n      options: \"options\",\n      icon: \"icon\",\n      visible: \"visible\"\n    },\n    outputs: {\n      animationChanged: \"animationChanged\",\n      mapClick: \"mapClick\",\n      clickableChanged: \"clickableChanged\",\n      cursorChanged: \"cursorChanged\",\n      mapDblclick: \"mapDblclick\",\n      mapDrag: \"mapDrag\",\n      mapDragend: \"mapDragend\",\n      draggableChanged: \"draggableChanged\",\n      mapDragstart: \"mapDragstart\",\n      flatChanged: \"flatChanged\",\n      iconChanged: \"iconChanged\",\n      mapMousedown: \"mapMousedown\",\n      mapMouseout: \"mapMouseout\",\n      mapMouseover: \"mapMouseover\",\n      mapMouseup: \"mapMouseup\",\n      positionChanged: \"positionChanged\",\n      mapRightclick: \"mapRightclick\",\n      shapeChanged: \"shapeChanged\",\n      titleChanged: \"titleChanged\",\n      visibleChanged: \"visibleChanged\",\n      zindexChanged: \"zindexChanged\",\n      markerInitialized: \"markerInitialized\"\n    },\n    exportAs: [\"mapMarker\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarker, [{\n    type: Directive,\n    args: [{\n      selector: 'map-marker',\n      exportAs: 'mapMarker',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    title: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    clickable: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    icon: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    animationChanged: [{\n      type: Output\n    }],\n    mapClick: [{\n      type: Output\n    }],\n    clickableChanged: [{\n      type: Output\n    }],\n    cursorChanged: [{\n      type: Output\n    }],\n    mapDblclick: [{\n      type: Output\n    }],\n    mapDrag: [{\n      type: Output\n    }],\n    mapDragend: [{\n      type: Output\n    }],\n    draggableChanged: [{\n      type: Output\n    }],\n    mapDragstart: [{\n      type: Output\n    }],\n    flatChanged: [{\n      type: Output\n    }],\n    iconChanged: [{\n      type: Output\n    }],\n    mapMousedown: [{\n      type: Output\n    }],\n    mapMouseout: [{\n      type: Output\n    }],\n    mapMouseover: [{\n      type: Output\n    }],\n    mapMouseup: [{\n      type: Output\n    }],\n    positionChanged: [{\n      type: Output\n    }],\n    mapRightclick: [{\n      type: Output\n    }],\n    shapeChanged: [{\n      type: Output\n    }],\n    titleChanged: [{\n      type: Output\n    }],\n    visibleChanged: [{\n      type: Output\n    }],\n    zindexChanged: [{\n      type: Output\n    }],\n    markerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nclass MapMarkerClusterer {\n  set averageCenter(averageCenter) {\n    this._averageCenter = averageCenter;\n  }\n  set batchSizeIE(batchSizeIE) {\n    this._batchSizeIE = batchSizeIE;\n  }\n  set calculator(calculator) {\n    this._calculator = calculator;\n  }\n  set clusterClass(clusterClass) {\n    this._clusterClass = clusterClass;\n  }\n  set enableRetinaIcons(enableRetinaIcons) {\n    this._enableRetinaIcons = enableRetinaIcons;\n  }\n  set gridSize(gridSize) {\n    this._gridSize = gridSize;\n  }\n  set ignoreHidden(ignoreHidden) {\n    this._ignoreHidden = ignoreHidden;\n  }\n  set imageExtension(imageExtension) {\n    this._imageExtension = imageExtension;\n  }\n  set imagePath(imagePath) {\n    this._imagePath = imagePath;\n  }\n  set imageSizes(imageSizes) {\n    this._imageSizes = imageSizes;\n  }\n  set maxZoom(maxZoom) {\n    this._maxZoom = maxZoom;\n  }\n  set minimumClusterSize(minimumClusterSize) {\n    this._minimumClusterSize = minimumClusterSize;\n  }\n  set styles(styles) {\n    this._styles = styles;\n  }\n  set title(title) {\n    this._title = title;\n  }\n  set zIndex(zIndex) {\n    this._zIndex = zIndex;\n  }\n  set zoomOnClick(zoomOnClick) {\n    this._zoomOnClick = zoomOnClick;\n  }\n  set options(options) {\n    this._options = options;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    this._currentMarkers = new Set();\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._destroy = new Subject();\n    this.ariaLabelFn = () => '';\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/\n     * _google_markerclustererplus.html#clusteringbegin\n     */\n    this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n    /**\n     * See\n     * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n     */\n    this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n    /** Emits when a cluster has been clicked. */\n    this.clusterClick = this._eventManager.getLazyEmitter('click');\n    /** Event emitted when the clusterer is initialized. */\n    this.markerClustererInitialized = new EventEmitter();\n    this._canInitialize = _googleMap._isBrowser;\n  }\n  ngOnInit() {\n    if (this._canInitialize) {\n      this._ngZone.runOutsideAngular(() => {\n        this._googleMap._resolveMap().then(map => {\n          if (typeof MarkerClusterer !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' + 'Please install the MarkerClustererPlus library: ' + 'https://github.com/googlemaps/js-markerclustererplus');\n          }\n          // Create the object outside the zone so its events don't trigger change detection.\n          // We'll bring it back in inside the `MapEventManager` only for the events that the\n          // user has subscribed to.\n          this.markerClusterer = this._ngZone.runOutsideAngular(() => {\n            return new MarkerClusterer(map, [], this._combineOptions());\n          });\n          this._assertInitialized();\n          this._eventManager.setTarget(this.markerClusterer);\n          this.markerClustererInitialized.emit(this.markerClusterer);\n        });\n      });\n    }\n  }\n  ngAfterContentInit() {\n    if (this._canInitialize) {\n      if (this.markerClusterer) {\n        this._watchForMarkerChanges();\n      } else {\n        this.markerClustererInitialized.pipe(take(1), takeUntil(this._destroy)).subscribe(() => this._watchForMarkerChanges());\n      }\n    }\n  }\n  ngOnChanges(changes) {\n    const {\n      markerClusterer: clusterer,\n      ariaLabelFn,\n      _averageCenter,\n      _batchSizeIE,\n      _calculator,\n      _styles,\n      _clusterClass,\n      _enableRetinaIcons,\n      _gridSize,\n      _ignoreHidden,\n      _imageExtension,\n      _imagePath,\n      _imageSizes,\n      _maxZoom,\n      _minimumClusterSize,\n      _title,\n      _zIndex,\n      _zoomOnClick\n    } = this;\n    if (clusterer) {\n      if (changes['options']) {\n        clusterer.setOptions(this._combineOptions());\n      }\n      if (changes['ariaLabelFn']) {\n        clusterer.ariaLabelFn = ariaLabelFn;\n      }\n      if (changes['averageCenter'] && _averageCenter !== undefined) {\n        clusterer.setAverageCenter(_averageCenter);\n      }\n      if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n        clusterer.setBatchSizeIE(_batchSizeIE);\n      }\n      if (changes['calculator'] && !!_calculator) {\n        clusterer.setCalculator(_calculator);\n      }\n      if (changes['clusterClass'] && _clusterClass !== undefined) {\n        clusterer.setClusterClass(_clusterClass);\n      }\n      if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n        clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n      }\n      if (changes['gridSize'] && _gridSize !== undefined) {\n        clusterer.setGridSize(_gridSize);\n      }\n      if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n        clusterer.setIgnoreHidden(_ignoreHidden);\n      }\n      if (changes['imageExtension'] && _imageExtension !== undefined) {\n        clusterer.setImageExtension(_imageExtension);\n      }\n      if (changes['imagePath'] && _imagePath !== undefined) {\n        clusterer.setImagePath(_imagePath);\n      }\n      if (changes['imageSizes'] && _imageSizes) {\n        clusterer.setImageSizes(_imageSizes);\n      }\n      if (changes['maxZoom'] && _maxZoom !== undefined) {\n        clusterer.setMaxZoom(_maxZoom);\n      }\n      if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n        clusterer.setMinimumClusterSize(_minimumClusterSize);\n      }\n      if (changes['styles'] && _styles) {\n        clusterer.setStyles(_styles);\n      }\n      if (changes['title'] && _title !== undefined) {\n        clusterer.setTitle(_title);\n      }\n      if (changes['zIndex'] && _zIndex !== undefined) {\n        clusterer.setZIndex(_zIndex);\n      }\n      if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n        clusterer.setZoomOnClick(_zoomOnClick);\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._destroy.next();\n    this._destroy.complete();\n    this._eventManager.destroy();\n    this.markerClusterer?.setMap(null);\n  }\n  fitMapToMarkers(padding) {\n    this._assertInitialized();\n    this.markerClusterer.fitMapToMarkers(padding);\n  }\n  getAverageCenter() {\n    this._assertInitialized();\n    return this.markerClusterer.getAverageCenter();\n  }\n  getBatchSizeIE() {\n    this._assertInitialized();\n    return this.markerClusterer.getBatchSizeIE();\n  }\n  getCalculator() {\n    this._assertInitialized();\n    return this.markerClusterer.getCalculator();\n  }\n  getClusterClass() {\n    this._assertInitialized();\n    return this.markerClusterer.getClusterClass();\n  }\n  getClusters() {\n    this._assertInitialized();\n    return this.markerClusterer.getClusters();\n  }\n  getEnableRetinaIcons() {\n    this._assertInitialized();\n    return this.markerClusterer.getEnableRetinaIcons();\n  }\n  getGridSize() {\n    this._assertInitialized();\n    return this.markerClusterer.getGridSize();\n  }\n  getIgnoreHidden() {\n    this._assertInitialized();\n    return this.markerClusterer.getIgnoreHidden();\n  }\n  getImageExtension() {\n    this._assertInitialized();\n    return this.markerClusterer.getImageExtension();\n  }\n  getImagePath() {\n    this._assertInitialized();\n    return this.markerClusterer.getImagePath();\n  }\n  getImageSizes() {\n    this._assertInitialized();\n    return this.markerClusterer.getImageSizes();\n  }\n  getMaxZoom() {\n    this._assertInitialized();\n    return this.markerClusterer.getMaxZoom();\n  }\n  getMinimumClusterSize() {\n    this._assertInitialized();\n    return this.markerClusterer.getMinimumClusterSize();\n  }\n  getStyles() {\n    this._assertInitialized();\n    return this.markerClusterer.getStyles();\n  }\n  getTitle() {\n    this._assertInitialized();\n    return this.markerClusterer.getTitle();\n  }\n  getTotalClusters() {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalClusters();\n  }\n  getTotalMarkers() {\n    this._assertInitialized();\n    return this.markerClusterer.getTotalMarkers();\n  }\n  getZIndex() {\n    this._assertInitialized();\n    return this.markerClusterer.getZIndex();\n  }\n  getZoomOnClick() {\n    this._assertInitialized();\n    return this.markerClusterer.getZoomOnClick();\n  }\n  _combineOptions() {\n    const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n    return {\n      ...options,\n      ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n      averageCenter: this._averageCenter ?? options.averageCenter,\n      batchSize: this.batchSize ?? options.batchSize,\n      batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n      calculator: this._calculator ?? options.calculator,\n      clusterClass: this._clusterClass ?? options.clusterClass,\n      enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n      gridSize: this._gridSize ?? options.gridSize,\n      ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n      imageExtension: this._imageExtension ?? options.imageExtension,\n      imagePath: this._imagePath ?? options.imagePath,\n      imageSizes: this._imageSizes ?? options.imageSizes,\n      maxZoom: this._maxZoom ?? options.maxZoom,\n      minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n      styles: this._styles ?? options.styles,\n      title: this._title ?? options.title,\n      zIndex: this._zIndex ?? options.zIndex,\n      zoomOnClick: this._zoomOnClick ?? options.zoomOnClick\n    };\n  }\n  _watchForMarkerChanges() {\n    this._assertInitialized();\n    this._ngZone.runOutsideAngular(() => {\n      this._getInternalMarkers(this._markers).then(markers => {\n        const initialMarkers = [];\n        for (const marker of markers) {\n          this._currentMarkers.add(marker);\n          initialMarkers.push(marker);\n        }\n        this.markerClusterer.addMarkers(initialMarkers);\n      });\n    });\n    this._markers.changes.pipe(takeUntil(this._destroy)).subscribe(markerComponents => {\n      this._assertInitialized();\n      this._ngZone.runOutsideAngular(() => {\n        this._getInternalMarkers(markerComponents).then(markers => {\n          const newMarkers = new Set(markers);\n          const markersToAdd = [];\n          const markersToRemove = [];\n          for (const marker of Array.from(newMarkers)) {\n            if (!this._currentMarkers.has(marker)) {\n              this._currentMarkers.add(marker);\n              markersToAdd.push(marker);\n            }\n          }\n          for (const marker of Array.from(this._currentMarkers)) {\n            if (!newMarkers.has(marker)) {\n              markersToRemove.push(marker);\n            }\n          }\n          this.markerClusterer.addMarkers(markersToAdd, true);\n          this.markerClusterer.removeMarkers(markersToRemove, true);\n          this.markerClusterer.repaint();\n          for (const marker of markersToRemove) {\n            this._currentMarkers.delete(marker);\n          }\n        });\n      });\n    });\n  }\n  _getInternalMarkers(markers) {\n    return Promise.all(markers.map(markerComponent => markerComponent._resolveMarker()));\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.markerClusterer) {\n        throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' + 'Please wait for the MarkerClusterer to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapMarkerClusterer_Factory(t) {\n    return new (t || MapMarkerClusterer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MapMarkerClusterer,\n    selectors: [[\"map-marker-clusterer\"]],\n    contentQueries: function MapMarkerClusterer_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MapMarker, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._markers = _t);\n      }\n    },\n    inputs: {\n      ariaLabelFn: \"ariaLabelFn\",\n      averageCenter: \"averageCenter\",\n      batchSize: \"batchSize\",\n      batchSizeIE: \"batchSizeIE\",\n      calculator: \"calculator\",\n      clusterClass: \"clusterClass\",\n      enableRetinaIcons: \"enableRetinaIcons\",\n      gridSize: \"gridSize\",\n      ignoreHidden: \"ignoreHidden\",\n      imageExtension: \"imageExtension\",\n      imagePath: \"imagePath\",\n      imageSizes: \"imageSizes\",\n      maxZoom: \"maxZoom\",\n      minimumClusterSize: \"minimumClusterSize\",\n      styles: \"styles\",\n      title: \"title\",\n      zIndex: \"zIndex\",\n      zoomOnClick: \"zoomOnClick\",\n      options: \"options\"\n    },\n    outputs: {\n      clusteringbegin: \"clusteringbegin\",\n      clusteringend: \"clusteringend\",\n      clusterClick: \"clusterClick\",\n      markerClustererInitialized: \"markerClustererInitialized\"\n    },\n    exportAs: [\"mapMarkerClusterer\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MapMarkerClusterer_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapMarkerClusterer, [{\n    type: Component,\n    args: [{\n      selector: 'map-marker-clusterer',\n      exportAs: 'mapMarkerClusterer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      standalone: true,\n      template: '<ng-content />',\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    ariaLabelFn: [{\n      type: Input\n    }],\n    averageCenter: [{\n      type: Input\n    }],\n    batchSize: [{\n      type: Input\n    }],\n    batchSizeIE: [{\n      type: Input\n    }],\n    calculator: [{\n      type: Input\n    }],\n    clusterClass: [{\n      type: Input\n    }],\n    enableRetinaIcons: [{\n      type: Input\n    }],\n    gridSize: [{\n      type: Input\n    }],\n    ignoreHidden: [{\n      type: Input\n    }],\n    imageExtension: [{\n      type: Input\n    }],\n    imagePath: [{\n      type: Input\n    }],\n    imageSizes: [{\n      type: Input\n    }],\n    maxZoom: [{\n      type: Input\n    }],\n    minimumClusterSize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    zoomOnClick: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    clusteringbegin: [{\n      type: Output\n    }],\n    clusteringend: [{\n      type: Output\n    }],\n    clusterClick: [{\n      type: Output\n    }],\n    _markers: [{\n      type: ContentChildren,\n      args: [MapMarker, {\n        descendants: true\n      }]\n    }],\n    markerClustererInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nclass MapPolygon {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set paths(paths) {\n    this._paths.next(paths);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._paths = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n     */\n    this.polygonClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n     */\n    this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n     */\n    this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n     */\n    this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n     */\n    this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n     */\n    this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n     */\n    this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n     */\n    this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n     */\n    this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n     */\n    this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n     */\n    this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the polygon is initialized. */\n    this.polygonInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.Polygon && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.Polygon, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), importLibrary('maps', 'Polygon')]).then(([map, polygonConstructor]) => {\n              this._initialize(map, polygonConstructor, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, polygonConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.polygon = new polygonConstructor(options);\n      this._assertInitialized();\n      this.polygon.setMap(map);\n      this._eventManager.setTarget(this.polygon);\n      this.polygonInitialized.emit(this.polygon);\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.polygon?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.polygon.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.polygon.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n   */\n  getPath() {\n    this._assertInitialized();\n    return this.polygon.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n   */\n  getPaths() {\n    this._assertInitialized();\n    return this.polygon.getPaths();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.polygon.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n      const combinedOptions = {\n        ...options,\n        paths: paths || options.paths\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polygon.setOptions(options);\n    });\n  }\n  _watchForPathChanges() {\n    this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n      if (paths) {\n        this._assertInitialized();\n        this.polygon.setPaths(paths);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.polygon) {\n        throw Error('Cannot interact with a Google Map Polygon before it has been ' + 'initialized. Please wait for the Polygon to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapPolygon_Factory(t) {\n    return new (t || MapPolygon)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapPolygon,\n    selectors: [[\"map-polygon\"]],\n    inputs: {\n      options: \"options\",\n      paths: \"paths\"\n    },\n    outputs: {\n      polygonClick: \"polygonClick\",\n      polygonDblclick: \"polygonDblclick\",\n      polygonDrag: \"polygonDrag\",\n      polygonDragend: \"polygonDragend\",\n      polygonDragstart: \"polygonDragstart\",\n      polygonMousedown: \"polygonMousedown\",\n      polygonMousemove: \"polygonMousemove\",\n      polygonMouseout: \"polygonMouseout\",\n      polygonMouseover: \"polygonMouseover\",\n      polygonMouseup: \"polygonMouseup\",\n      polygonRightclick: \"polygonRightclick\",\n      polygonInitialized: \"polygonInitialized\"\n    },\n    exportAs: [\"mapPolygon\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolygon, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polygon',\n      exportAs: 'mapPolygon',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    paths: [{\n      type: Input\n    }],\n    polygonClick: [{\n      type: Output\n    }],\n    polygonDblclick: [{\n      type: Output\n    }],\n    polygonDrag: [{\n      type: Output\n    }],\n    polygonDragend: [{\n      type: Output\n    }],\n    polygonDragstart: [{\n      type: Output\n    }],\n    polygonMousedown: [{\n      type: Output\n    }],\n    polygonMousemove: [{\n      type: Output\n    }],\n    polygonMouseout: [{\n      type: Output\n    }],\n    polygonMouseover: [{\n      type: Output\n    }],\n    polygonMouseup: [{\n      type: Output\n    }],\n    polygonRightclick: [{\n      type: Output\n    }],\n    polygonInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nclass MapPolyline {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set path(path) {\n    this._path.next(path);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._path = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n     */\n    this.polylineClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n     */\n    this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n     */\n    this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n     */\n    this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n     */\n    this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n     */\n    this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n     */\n    this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n     */\n    this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n     */\n    this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n     */\n    this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n     */\n    this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the polyline is initialized. */\n    this.polylineInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.Polyline && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.Polyline, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), importLibrary('maps', 'Polyline')]).then(([map, polylineConstructor]) => {\n              this._initialize(map, polylineConstructor, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, polylineConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.polyline = new polylineConstructor(options);\n      this._assertInitialized();\n      this.polyline.setMap(map);\n      this._eventManager.setTarget(this.polyline);\n      this.polylineInitialized.emit(this.polyline);\n      this._watchForOptionsChanges();\n      this._watchForPathChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.polyline?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.polyline.getDraggable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.polyline.getEditable();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n   */\n  getPath() {\n    this._assertInitialized();\n    return this.polyline.getPath();\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.polyline.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n      const combinedOptions = {\n        ...options,\n        path: path || options.path\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.polyline.setOptions(options);\n    });\n  }\n  _watchForPathChanges() {\n    this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n      if (path) {\n        this._assertInitialized();\n        this.polyline.setPath(path);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.polyline) {\n        throw Error('Cannot interact with a Google Map Polyline before it has been ' + 'initialized. Please wait for the Polyline to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapPolyline_Factory(t) {\n    return new (t || MapPolyline)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapPolyline,\n    selectors: [[\"map-polyline\"]],\n    inputs: {\n      options: \"options\",\n      path: \"path\"\n    },\n    outputs: {\n      polylineClick: \"polylineClick\",\n      polylineDblclick: \"polylineDblclick\",\n      polylineDrag: \"polylineDrag\",\n      polylineDragend: \"polylineDragend\",\n      polylineDragstart: \"polylineDragstart\",\n      polylineMousedown: \"polylineMousedown\",\n      polylineMousemove: \"polylineMousemove\",\n      polylineMouseout: \"polylineMouseout\",\n      polylineMouseover: \"polylineMouseover\",\n      polylineMouseup: \"polylineMouseup\",\n      polylineRightclick: \"polylineRightclick\",\n      polylineInitialized: \"polylineInitialized\"\n    },\n    exportAs: [\"mapPolyline\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapPolyline, [{\n    type: Directive,\n    args: [{\n      selector: 'map-polyline',\n      exportAs: 'mapPolyline',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    path: [{\n      type: Input\n    }],\n    polylineClick: [{\n      type: Output\n    }],\n    polylineDblclick: [{\n      type: Output\n    }],\n    polylineDrag: [{\n      type: Output\n    }],\n    polylineDragend: [{\n      type: Output\n    }],\n    polylineDragstart: [{\n      type: Output\n    }],\n    polylineMousedown: [{\n      type: Output\n    }],\n    polylineMousemove: [{\n      type: Output\n    }],\n    polylineMouseout: [{\n      type: Output\n    }],\n    polylineMouseover: [{\n      type: Output\n    }],\n    polylineMouseup: [{\n      type: Output\n    }],\n    polylineRightclick: [{\n      type: Output\n    }],\n    polylineInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nclass MapRectangle {\n  set options(options) {\n    this._options.next(options || {});\n  }\n  set bounds(bounds) {\n    this._bounds.next(bounds);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._eventManager = new MapEventManager(inject(NgZone));\n    this._options = new BehaviorSubject({});\n    this._bounds = new BehaviorSubject(undefined);\n    this._destroyed = new Subject();\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n     */\n    this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n     */\n    this.rectangleClick = this._eventManager.getLazyEmitter('click');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n     */\n    this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n     */\n    this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n     */\n    this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n     */\n    this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n     */\n    this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n     */\n    this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n     */\n    this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n     */\n    this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n     */\n    this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n     */\n    this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n    /** Event emitted when the rectangle is initialized. */\n    this.rectangleInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.Rectangle && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.Rectangle, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), importLibrary('maps', 'Rectangle')]).then(([map, rectangleConstructor]) => {\n              this._initialize(map, rectangleConstructor, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, rectangleConstructor, options) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.rectangle = new rectangleConstructor(options);\n      this._assertInitialized();\n      this.rectangle.setMap(map);\n      this._eventManager.setTarget(this.rectangle);\n      this.rectangleInitialized.emit(this.rectangle);\n      this._watchForOptionsChanges();\n      this._watchForBoundsChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._eventManager.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.rectangle?.setMap(null);\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n   */\n  getBounds() {\n    this._assertInitialized();\n    return this.rectangle.getBounds();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n   */\n  getDraggable() {\n    this._assertInitialized();\n    return this.rectangle.getDraggable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n   */\n  getEditable() {\n    this._assertInitialized();\n    return this.rectangle.getEditable();\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n   */\n  getVisible() {\n    this._assertInitialized();\n    return this.rectangle.getVisible();\n  }\n  _combineOptions() {\n    return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n      const combinedOptions = {\n        ...options,\n        bounds: bounds || options.bounds\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForOptionsChanges() {\n    this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.rectangle.setOptions(options);\n    });\n  }\n  _watchForBoundsChanges() {\n    this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n      if (bounds) {\n        this._assertInitialized();\n        this.rectangle.setBounds(bounds);\n      }\n    });\n  }\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.rectangle) {\n        throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' + 'Please wait for the Rectangle to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapRectangle_Factory(t) {\n    return new (t || MapRectangle)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapRectangle,\n    selectors: [[\"map-rectangle\"]],\n    inputs: {\n      options: \"options\",\n      bounds: \"bounds\"\n    },\n    outputs: {\n      boundsChanged: \"boundsChanged\",\n      rectangleClick: \"rectangleClick\",\n      rectangleDblclick: \"rectangleDblclick\",\n      rectangleDrag: \"rectangleDrag\",\n      rectangleDragend: \"rectangleDragend\",\n      rectangleDragstart: \"rectangleDragstart\",\n      rectangleMousedown: \"rectangleMousedown\",\n      rectangleMousemove: \"rectangleMousemove\",\n      rectangleMouseout: \"rectangleMouseout\",\n      rectangleMouseover: \"rectangleMouseover\",\n      rectangleMouseup: \"rectangleMouseup\",\n      rectangleRightclick: \"rectangleRightclick\",\n      rectangleInitialized: \"rectangleInitialized\"\n    },\n    exportAs: [\"mapRectangle\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapRectangle, [{\n    type: Directive,\n    args: [{\n      selector: 'map-rectangle',\n      exportAs: 'mapRectangle',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    options: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    boundsChanged: [{\n      type: Output\n    }],\n    rectangleClick: [{\n      type: Output\n    }],\n    rectangleDblclick: [{\n      type: Output\n    }],\n    rectangleDrag: [{\n      type: Output\n    }],\n    rectangleDragend: [{\n      type: Output\n    }],\n    rectangleDragstart: [{\n      type: Output\n    }],\n    rectangleMousedown: [{\n      type: Output\n    }],\n    rectangleMousemove: [{\n      type: Output\n    }],\n    rectangleMouseout: [{\n      type: Output\n    }],\n    rectangleMouseover: [{\n      type: Output\n    }],\n    rectangleMouseup: [{\n      type: Output\n    }],\n    rectangleRightclick: [{\n      type: Output\n    }],\n    rectangleInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nclass MapTrafficLayer {\n  /**\n   * Whether the traffic layer refreshes with updated information automatically.\n   */\n  set autoRefresh(autoRefresh) {\n    this._autoRefresh.next(autoRefresh);\n  }\n  constructor(_map, _ngZone) {\n    this._map = _map;\n    this._ngZone = _ngZone;\n    this._autoRefresh = new BehaviorSubject(true);\n    this._destroyed = new Subject();\n    /** Event emitted when the traffic layer is initialized. */\n    this.trafficLayerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      this._combineOptions().pipe(take(1)).subscribe(options => {\n        if (google.maps.TrafficLayer && this._map.googleMap) {\n          this._initialize(this._map.googleMap, google.maps.TrafficLayer, options);\n        } else {\n          this._ngZone.runOutsideAngular(() => {\n            Promise.all([this._map._resolveMap(), importLibrary('maps', 'TrafficLayer')]).then(([map, layerConstructor]) => {\n              this._initialize(map, layerConstructor, options);\n            });\n          });\n        }\n      });\n    }\n  }\n  _initialize(map, layerConstructor, options) {\n    this._ngZone.runOutsideAngular(() => {\n      this.trafficLayer = new layerConstructor(options);\n      this._assertInitialized();\n      this.trafficLayer.setMap(map);\n      this.trafficLayerInitialized.emit(this.trafficLayer);\n      this._watchForAutoRefreshChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.trafficLayer?.setMap(null);\n  }\n  _combineOptions() {\n    return this._autoRefresh.pipe(map(autoRefresh => {\n      const combinedOptions = {\n        autoRefresh\n      };\n      return combinedOptions;\n    }));\n  }\n  _watchForAutoRefreshChanges() {\n    this._combineOptions().pipe(takeUntil(this._destroyed)).subscribe(options => {\n      this._assertInitialized();\n      this.trafficLayer.setOptions(options);\n    });\n  }\n  _assertInitialized() {\n    if (!this.trafficLayer) {\n      throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' + 'Please wait for the Traffic Layer to load before trying to interact with it.');\n    }\n  }\n  static #_ = this.ɵfac = function MapTrafficLayer_Factory(t) {\n    return new (t || MapTrafficLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapTrafficLayer,\n    selectors: [[\"map-traffic-layer\"]],\n    inputs: {\n      autoRefresh: \"autoRefresh\"\n    },\n    outputs: {\n      trafficLayerInitialized: \"trafficLayerInitialized\"\n    },\n    exportAs: [\"mapTrafficLayer\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTrafficLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-traffic-layer',\n      exportAs: 'mapTrafficLayer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    autoRefresh: [{\n      type: Input\n    }],\n    trafficLayerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nclass MapTransitLayer {\n  constructor() {\n    this._map = inject(GoogleMap);\n    this._zone = inject(NgZone);\n    /** Event emitted when the transit layer is initialized. */\n    this.transitLayerInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._map._isBrowser) {\n      if (google.maps.TransitLayer && this._map.googleMap) {\n        this._initialize(this._map.googleMap, google.maps.TransitLayer);\n      } else {\n        this._zone.runOutsideAngular(() => {\n          Promise.all([this._map._resolveMap(), importLibrary('maps', 'TransitLayer')]).then(([map, layerConstructor]) => {\n            this._initialize(map, layerConstructor);\n          });\n        });\n      }\n    }\n  }\n  _initialize(map, layerConstructor) {\n    this._zone.runOutsideAngular(() => {\n      this.transitLayer = new layerConstructor();\n      this.transitLayerInitialized.emit(this.transitLayer);\n      this._assertLayerInitialized();\n      this.transitLayer.setMap(map);\n    });\n  }\n  ngOnDestroy() {\n    this.transitLayer?.setMap(null);\n  }\n  _assertLayerInitialized() {\n    if (!this.transitLayer) {\n      throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' + 'Please wait for the Transit Layer to load before trying to interact with it.');\n    }\n  }\n  static #_ = this.ɵfac = function MapTransitLayer_Factory(t) {\n    return new (t || MapTransitLayer)();\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapTransitLayer,\n    selectors: [[\"map-transit-layer\"]],\n    outputs: {\n      transitLayerInitialized: \"transitLayerInitialized\"\n    },\n    exportAs: [\"mapTransitLayer\"],\n    standalone: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapTransitLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-transit-layer',\n      exportAs: 'mapTransitLayer',\n      standalone: true\n    }]\n  }], null, {\n    transitLayerInitialized: [{\n      type: Output\n    }]\n  });\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nclass MapHeatmapLayer {\n  /**\n   * Data shown on the heatmap.\n   * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n   */\n  set data(data) {\n    this._data = data;\n  }\n  /**\n   * Options used to configure the heatmap. See:\n   * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n   */\n  set options(options) {\n    this._options = options;\n  }\n  constructor(_googleMap, _ngZone) {\n    this._googleMap = _googleMap;\n    this._ngZone = _ngZone;\n    /** Event emitted when the heatmap is initialized. */\n    this.heatmapInitialized = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this._googleMap._isBrowser) {\n      if (!window.google?.maps?.visualization && !window.google?.maps.importLibrary && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' + 'Please install the Google Maps JavaScript API with the \"visualization\" library: ' + 'https://developers.google.com/maps/documentation/javascript/visualization');\n      }\n      if (google.maps.visualization?.HeatmapLayer && this._googleMap.googleMap) {\n        this._initialize(this._googleMap.googleMap, google.maps.visualization.HeatmapLayer);\n      } else {\n        this._ngZone.runOutsideAngular(() => {\n          Promise.all([this._googleMap._resolveMap(), importLibrary('visualization', 'HeatmapLayer')]).then(([map, heatmapConstructor]) => {\n            this._initialize(map, heatmapConstructor);\n          });\n        });\n      }\n    }\n  }\n  _initialize(map, heatmapConstructor) {\n    // Create the object outside the zone so its events don't trigger change detection.\n    // We'll bring it back in inside the `MapEventManager` only for the events that the\n    // user has subscribed to.\n    this._ngZone.runOutsideAngular(() => {\n      this.heatmap = new heatmapConstructor(this._combineOptions());\n      this._assertInitialized();\n      this.heatmap.setMap(map);\n      this.heatmapInitialized.emit(this.heatmap);\n    });\n  }\n  ngOnChanges(changes) {\n    const {\n      _data,\n      heatmap\n    } = this;\n    if (heatmap) {\n      if (changes['options']) {\n        heatmap.setOptions(this._combineOptions());\n      }\n      if (changes['data'] && _data !== undefined) {\n        heatmap.setData(this._normalizeData(_data));\n      }\n    }\n  }\n  ngOnDestroy() {\n    this.heatmap?.setMap(null);\n  }\n  /**\n   * Gets the data that is currently shown on the heatmap.\n   * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n   */\n  getData() {\n    this._assertInitialized();\n    return this.heatmap.getData();\n  }\n  /** Creates a combined options object using the passed-in options and the individual inputs. */\n  _combineOptions() {\n    const options = this._options || {};\n    return {\n      ...options,\n      data: this._normalizeData(this._data || options.data || []),\n      map: this._googleMap.googleMap\n    };\n  }\n  /**\n   * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n   * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n   * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n   * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n   * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n   * convert it to a `LatLng` object before passing it off to Google Maps.\n   */\n  _normalizeData(data) {\n    const result = [];\n    data.forEach(item => {\n      result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n    });\n    return result;\n  }\n  /** Asserts that the heatmap object has been initialized. */\n  _assertInitialized() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this.heatmap) {\n        throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' + 'initialized. Please wait for the heatmap to load before trying to interact with it.');\n      }\n    }\n  }\n  static #_ = this.ɵfac = function MapHeatmapLayer_Factory(t) {\n    return new (t || MapHeatmapLayer)(i0.ɵɵdirectiveInject(GoogleMap), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n  static #_2 = this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MapHeatmapLayer,\n    selectors: [[\"map-heatmap-layer\"]],\n    inputs: {\n      data: \"data\",\n      options: \"options\"\n    },\n    outputs: {\n      heatmapInitialized: \"heatmapInitialized\"\n    },\n    exportAs: [\"mapHeatmapLayer\"],\n    standalone: true,\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapHeatmapLayer, [{\n    type: Directive,\n    args: [{\n      selector: 'map-heatmap-layer',\n      exportAs: 'mapHeatmapLayer',\n      standalone: true\n    }]\n  }], () => [{\n    type: GoogleMap\n  }, {\n    type: i0.NgZone\n  }], {\n    data: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    heatmapInitialized: [{\n      type: Output\n    }]\n  });\n})();\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n  return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\nconst COMPONENTS = [GoogleMap, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer];\nclass GoogleMapsModule {\n  static #_ = this.ɵfac = function GoogleMapsModule_Factory(t) {\n    return new (t || GoogleMapsModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: GoogleMapsModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMapsModule, [{\n    type: NgModule,\n    args: [{\n      imports: COMPONENTS,\n      exports: COMPONENTS\n    }]\n  }], null, null);\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nclass MapDirectionsService {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See\n   * developers.google.com/maps/documentation/javascript/reference/directions\n   * #DirectionsService.route\n   */\n  route(request) {\n    return new Observable(observer => {\n      this._getService().then(service => {\n        service.route(request, (result, status) => {\n          this._ngZone.run(() => {\n            observer.next({\n              result: result || undefined,\n              status\n            });\n            observer.complete();\n          });\n        });\n      });\n    });\n  }\n  _getService() {\n    if (!this._directionsService) {\n      if (google.maps.DirectionsService) {\n        this._directionsService = new google.maps.DirectionsService();\n      } else {\n        return importLibrary('routes', 'DirectionsService').then(serviceConstructor => {\n          this._directionsService = new serviceConstructor();\n          return this._directionsService;\n        });\n      }\n    }\n    return Promise.resolve(this._directionsService);\n  }\n  static #_ = this.ɵfac = function MapDirectionsService_Factory(t) {\n    return new (t || MapDirectionsService)(i0.ɵɵinject(i0.NgZone));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MapDirectionsService,\n    factory: MapDirectionsService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapDirectionsService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }], null);\n})();\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nclass MapGeocoder {\n  constructor(_ngZone) {\n    this._ngZone = _ngZone;\n  }\n  /**\n   * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n   */\n  geocode(request) {\n    return new Observable(observer => {\n      this._getGeocoder().then(geocoder => {\n        geocoder.geocode(request, (results, status) => {\n          this._ngZone.run(() => {\n            observer.next({\n              results: results || [],\n              status\n            });\n            observer.complete();\n          });\n        });\n      });\n    });\n  }\n  _getGeocoder() {\n    if (!this._geocoder) {\n      if (google.maps.Geocoder) {\n        this._geocoder = new google.maps.Geocoder();\n      } else {\n        return importLibrary('geocoding', 'Geocoder').then(geocoderConstructor => {\n          this._geocoder = new geocoderConstructor();\n          return this._geocoder;\n        });\n      }\n    }\n    return Promise.resolve(this._geocoder);\n  }\n  static #_ = this.ɵfac = function MapGeocoder_Factory(t) {\n    return new (t || MapGeocoder)(i0.ɵɵinject(i0.NgZone));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MapGeocoder,\n    factory: MapGeocoder.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MapGeocoder, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }], null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };","map":{"version":3,"names":["i0","inject","NgZone","EventEmitter","PLATFORM_ID","Component","ChangeDetectionStrategy","ViewEncapsulation","Inject","Input","Output","Directive","ContentChildren","NgModule","Injectable","isPlatformBrowser","BehaviorSubject","Observable","Subject","combineLatest","switchMap","take","map","takeUntil","_c0","MapEventManager","_clearListeners","listener","_listeners","remove","constructor","_ngZone","_pending","_targetStream","undefined","getLazyEmitter","name","pipe","target","observable","observer","push","addListener","event","run","next","complete","setTarget","currentTarget","value","forEach","subscriber","subscribe","destroy","importLibrary","symbol","window","google","maps","then","library","DEFAULT_OPTIONS","center","lat","lng","zoom","mapTypeId","DEFAULT_HEIGHT","DEFAULT_WIDTH","GoogleMap","_center","_zoom","options","_options","_elementRef","platformId","_eventManager","height","width","mapInitialized","authFailure","boundsChanged","centerChanged","mapClick","mapDblclick","mapDrag","mapDragend","mapDragstart","headingChanged","idle","maptypeidChanged","mapMousemove","mapMouseout","mapMouseover","projectionChanged","mapRightclick","tilesloaded","tiltChanged","zoomChanged","_isBrowser","googleMapsWindow","ngDevMode","Error","_existingAuthFailureCallback","gm_authFailure","emit","ngOnChanges","changes","_setSize","googleMap","setOptions","_combineOptions","setCenter","setZoom","setMapTypeId","ngOnInit","_mapEl","nativeElement","querySelector","Map","_initialize","runOutsideAngular","mapConstructor","ngOnDestroy","fitBounds","bounds","padding","_assertInitialized","panBy","x","y","panTo","latLng","panToBounds","latLngBounds","getBounds","getCenter","getClickableIcons","getHeading","getMapTypeId","getProjection","getStreetView","getTilt","getZoom","controls","data","mapTypes","overlayMapTypes","_resolveMap","Promise","resolve","toPromise","styles","style","coerceCssPixelValue","_","ɵfac","GoogleMap_Factory","t","ɵɵdirectiveInject","ElementRef","_2","ɵcmp","ɵɵdefineComponent","type","selectors","inputs","outputs","exportAs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","ngContentSelectors","decls","vars","consts","template","GoogleMap_Template","rf","ctx","ɵɵprojectionDef","ɵɵelement","ɵɵprojection","encapsulation","changeDetection","ɵsetClassMetadata","args","selector","OnPush","None","Object","decorators","cssUnitsPattern","test","MapBaseLayer","_map","_initializeObject","_setMap","_unsetMap","MapBaseLayer_Factory","ɵdir","ɵɵdefineDirective","MapBicyclingLayer","_zone","bicyclingLayerInitialized","BicyclingLayer","all","layerConstructor","bicyclingLayer","_assertLayerInitialized","setMap","MapBicyclingLayer_Factory","MapCircle","radius","_radius","_destroyed","circleClick","circleDblclick","circleDrag","circleDragend","circleDragstart","circleMousedown","circleMousemove","circleMouseout","circleMouseover","circleMouseup","radiusChanged","circleRightclick","circleInitialized","Circle","circleConstructor","circle","_watchForOptionsChanges","_watchForCenterChanges","_watchForRadiusChanges","getDraggable","getEditable","getRadius","getVisible","combinedOptions","setRadius","MapCircle_Factory","MapDirectionsRenderer","directions","_directions","_googleMap","directionsChanged","directionsRendererInitialized","DirectionsRenderer","rendererConstructor","directionsRenderer","setDirections","getDirections","getPanel","getRouteIndex","MapDirectionsRenderer_Factory","MapGroundOverlay","url","_url","_bounds","opacity","_opacity","clickable","groundOverlayInitialized","groundOverlay","GroundOverlay","overlayConstructor","getValue","_hasWatchers","_watchForOpacityChanges","_watchForUrlChanges","getOpacity","getUrl","setOpacity","overlay","set","MapGroundOverlay_Factory","MapInfoWindow","position","_position","_destroy","closeclick","contentChanged","domready","positionChanged","zindexChanged","infoWindowInitialized","InfoWindow","infoWindowConstructor","infoWindow","_watchForPositionChanges","close","getContent","getPosition","getZIndex","open","anchor","shouldFocus","anchorObject","getAnchor","get","display","content","setPosition","MapInfoWindow_Factory","hostAttrs","host","MapKmlLayer","kmlClick","defaultviewportChanged","statusChanged","kmlLayerInitialized","KmlLayer","kmlLayer","getDefaultViewport","getMetadata","getStatus","setUrl","MapKmlLayer_Factory","DEFAULT_MARKER_OPTIONS","MapMarker","title","_title","label","_label","_clickable","icon","_icon","visible","_visible","animationChanged","clickableChanged","cursorChanged","draggableChanged","flatChanged","iconChanged","mapMousedown","mapMouseup","shapeChanged","titleChanged","visibleChanged","markerInitialized","Marker","markerConstrutor","markerConstructor","marker","setTitle","setLabel","setClickable","setIcon","setVisible","getAnimation","getClickable","getCursor","getIcon","getLabel","getShape","getTitle","_resolveMarker","MapMarker_Factory","DEFAULT_CLUSTERER_OPTIONS","MapMarkerClusterer","averageCenter","_averageCenter","batchSizeIE","_batchSizeIE","calculator","_calculator","clusterClass","_clusterClass","enableRetinaIcons","_enableRetinaIcons","gridSize","_gridSize","ignoreHidden","_ignoreHidden","imageExtension","_imageExtension","imagePath","_imagePath","imageSizes","_imageSizes","maxZoom","_maxZoom","minimumClusterSize","_minimumClusterSize","_styles","zIndex","_zIndex","zoomOnClick","_zoomOnClick","_currentMarkers","Set","ariaLabelFn","clusteringbegin","clusteringend","clusterClick","markerClustererInitialized","_canInitialize","MarkerClusterer","markerClusterer","ngAfterContentInit","_watchForMarkerChanges","clusterer","setAverageCenter","setBatchSizeIE","setCalculator","setClusterClass","setEnableRetinaIcons","setGridSize","setIgnoreHidden","setImageExtension","setImagePath","setImageSizes","setMaxZoom","setMinimumClusterSize","setStyles","setZIndex","setZoomOnClick","fitMapToMarkers","getAverageCenter","getBatchSizeIE","getCalculator","getClusterClass","getClusters","getEnableRetinaIcons","getGridSize","getIgnoreHidden","getImageExtension","getImagePath","getImageSizes","getMaxZoom","getMinimumClusterSize","getStyles","getTotalClusters","getTotalMarkers","getZoomOnClick","batchSize","_getInternalMarkers","_markers","markers","initialMarkers","add","addMarkers","markerComponents","newMarkers","markersToAdd","markersToRemove","Array","from","has","removeMarkers","repaint","delete","markerComponent","MapMarkerClusterer_Factory","contentQueries","MapMarkerClusterer_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","MapMarkerClusterer_Template","descendants","MapPolygon","paths","_paths","polygonClick","polygonDblclick","polygonDrag","polygonDragend","polygonDragstart","polygonMousedown","polygonMousemove","polygonMouseout","polygonMouseover","polygonMouseup","polygonRightclick","polygonInitialized","Polygon","polygonConstructor","polygon","_watchForPathChanges","getPath","getPaths","setPaths","MapPolygon_Factory","MapPolyline","path","_path","polylineClick","polylineDblclick","polylineDrag","polylineDragend","polylineDragstart","polylineMousedown","polylineMousemove","polylineMouseout","polylineMouseover","polylineMouseup","polylineRightclick","polylineInitialized","Polyline","polylineConstructor","polyline","setPath","MapPolyline_Factory","MapRectangle","rectangleClick","rectangleDblclick","rectangleDrag","rectangleDragend","rectangleDragstart","rectangleMousedown","rectangleMousemove","rectangleMouseout","rectangleMouseover","rectangleMouseup","rectangleRightclick","rectangleInitialized","Rectangle","rectangleConstructor","rectangle","_watchForBoundsChanges","setBounds","MapRectangle_Factory","MapTrafficLayer","autoRefresh","_autoRefresh","trafficLayerInitialized","TrafficLayer","trafficLayer","_watchForAutoRefreshChanges","MapTrafficLayer_Factory","MapTransitLayer","transitLayerInitialized","TransitLayer","transitLayer","MapTransitLayer_Factory","MapHeatmapLayer","_data","heatmapInitialized","visualization","HeatmapLayer","heatmapConstructor","heatmap","setData","_normalizeData","getData","result","item","isLatLngLiteral","LatLng","MapHeatmapLayer_Factory","COMPONENTS","GoogleMapsModule","GoogleMapsModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","exports","MapDirectionsService","route","request","_getService","service","status","_directionsService","DirectionsService","serviceConstructor","MapDirectionsService_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","MapGeocoder","geocode","_getGeocoder","geocoder","results","_geocoder","Geocoder","geocoderConstructor","MapGeocoder_Factory"],"sources":["C:/Repository/Jupiter/juno-app/node_modules/@angular/google-maps/fesm2022/google-maps.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, NgZone, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Input, Output, Directive, ContentChildren, NgModule, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { switchMap, take, map, takeUntil } from 'rxjs/operators';\n\n/** Manages event on a Google Maps object, ensuring that events are added only when necessary. */\nclass MapEventManager {\n    /** Clears all currently-registered event listeners. */\n    _clearListeners() {\n        for (const listener of this._listeners) {\n            listener.remove();\n        }\n        this._listeners = [];\n    }\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        /** Pending listeners that were added before the target was set. */\n        this._pending = [];\n        this._listeners = [];\n        this._targetStream = new BehaviorSubject(undefined);\n    }\n    /** Gets an observable that adds an event listener to the map when a consumer subscribes to it. */\n    getLazyEmitter(name) {\n        return this._targetStream.pipe(switchMap(target => {\n            const observable = new Observable(observer => {\n                // If the target hasn't been initialized yet, cache the observer so it can be added later.\n                if (!target) {\n                    this._pending.push({ observable, observer });\n                    return undefined;\n                }\n                const listener = target.addListener(name, (event) => {\n                    this._ngZone.run(() => observer.next(event));\n                });\n                // If there's an error when initializing the Maps API (e.g. a wrong API key), it will\n                // return a dummy object that returns `undefined` from `addListener` (see #26514).\n                if (!listener) {\n                    observer.complete();\n                    return undefined;\n                }\n                this._listeners.push(listener);\n                return () => listener.remove();\n            });\n            return observable;\n        }));\n    }\n    /** Sets the current target that the manager should bind events to. */\n    setTarget(target) {\n        const currentTarget = this._targetStream.value;\n        if (target === currentTarget) {\n            return;\n        }\n        // Clear the listeners from the pre-existing target.\n        if (currentTarget) {\n            this._clearListeners();\n            this._pending = [];\n        }\n        this._targetStream.next(target);\n        // Add the listeners that were bound before the map was initialized.\n        this._pending.forEach(subscriber => subscriber.observable.subscribe(subscriber.observer));\n        this._pending = [];\n    }\n    /** Destroys the manager and clears the event listeners. */\n    destroy() {\n        this._clearListeners();\n        this._pending = [];\n        this._targetStream.complete();\n    }\n}\n\n/** Imports a Google Maps library. */\nfunction importLibrary(name, symbol) {\n    // TODO(crisbeto): needs to cast to `any` to avoid some internal limitations around typings.\n    // Should be cleaned up eventually.\n    return window.google.maps.importLibrary(name).then((library) => library[symbol]);\n}\n\n/// <reference types=\"google.maps\" />\n/** default options set to the Googleplex */\nconst DEFAULT_OPTIONS = {\n    center: { lat: 37.421995, lng: -122.084092 },\n    zoom: 17,\n    // Note: the type conversion here isn't necessary for our CI, but it resolves a g3 failure.\n    mapTypeId: 'roadmap',\n};\n/** Arbitrary default height for the map element */\nconst DEFAULT_HEIGHT = '500px';\n/** Arbitrary default width for the map element */\nconst DEFAULT_WIDTH = '500px';\n/**\n * Angular component that renders a Google Map via the Google Maps JavaScript\n * API.\n * @see https://developers.google.com/maps/documentation/javascript/reference/\n */\nclass GoogleMap {\n    set center(center) {\n        this._center = center;\n    }\n    set zoom(zoom) {\n        this._zoom = zoom;\n    }\n    set options(options) {\n        this._options = options || DEFAULT_OPTIONS;\n    }\n    constructor(_elementRef, _ngZone, platformId) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /** Height of the map. Set this to `null` if you'd like to control the height through CSS. */\n        this.height = DEFAULT_HEIGHT;\n        /** Width of the map. Set this to `null` if you'd like to control the width through CSS. */\n        this.width = DEFAULT_WIDTH;\n        this._options = DEFAULT_OPTIONS;\n        /** Event emitted when the map is initialized. */\n        this.mapInitialized = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/events#auth-errors\n         */\n        this.authFailure = new EventEmitter();\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.bounds_changed\n         */\n        this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.heading_changed\n         */\n        this.headingChanged = this._eventManager.getLazyEmitter('heading_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.idle\n         */\n        this.idle = this._eventManager.getLazyEmitter('idle');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.maptypeid_changed\n         */\n        this.maptypeidChanged = this._eventManager.getLazyEmitter('maptypeid_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mousemove\n         */\n        this.mapMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/map#Map.projection_changed\n         */\n        this.projectionChanged = this._eventManager.getLazyEmitter('projection_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilesloaded\n         */\n        this.tilesloaded = this._eventManager.getLazyEmitter('tilesloaded');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.tilt_changed\n         */\n        this.tiltChanged = this._eventManager.getLazyEmitter('tilt_changed');\n        /**\n         * See\n         * https://developers.google.com/maps/documentation/javascript/reference/map#Map.zoom_changed\n         */\n        this.zoomChanged = this._eventManager.getLazyEmitter('zoom_changed');\n        this._isBrowser = isPlatformBrowser(platformId);\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            if (!googleMapsWindow.google && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace google not found, cannot construct embedded google ' +\n                    'map. Please install the Google Maps JavaScript API: ' +\n                    'https://developers.google.com/maps/documentation/javascript/' +\n                    'tutorial#Loading_the_Maps_API');\n            }\n            this._existingAuthFailureCallback = googleMapsWindow.gm_authFailure;\n            googleMapsWindow.gm_authFailure = () => {\n                if (this._existingAuthFailureCallback) {\n                    this._existingAuthFailureCallback();\n                }\n                this.authFailure.emit();\n            };\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['height'] || changes['width']) {\n            this._setSize();\n        }\n        const googleMap = this.googleMap;\n        if (googleMap) {\n            if (changes['options']) {\n                googleMap.setOptions(this._combineOptions());\n            }\n            if (changes['center'] && this._center) {\n                googleMap.setCenter(this._center);\n            }\n            // Note that the zoom can be zero.\n            if (changes['zoom'] && this._zoom != null) {\n                googleMap.setZoom(this._zoom);\n            }\n            if (changes['mapTypeId'] && this.mapTypeId) {\n                googleMap.setMapTypeId(this.mapTypeId);\n            }\n        }\n    }\n    ngOnInit() {\n        // It should be a noop during server-side rendering.\n        if (this._isBrowser) {\n            this._mapEl = this._elementRef.nativeElement.querySelector('.map-container');\n            this._setSize();\n            // Create the object outside the zone so its events don't trigger change detection.\n            // We'll bring it back in inside the `MapEventManager` only for the events that the\n            // user has subscribed to.\n            if (google.maps.Map) {\n                this._initialize(google.maps.Map);\n            }\n            else {\n                this._ngZone.runOutsideAngular(() => {\n                    importLibrary('maps', 'Map').then(mapConstructor => this._initialize(mapConstructor));\n                });\n            }\n        }\n    }\n    _initialize(mapConstructor) {\n        this._ngZone.runOutsideAngular(() => {\n            this.googleMap = new mapConstructor(this._mapEl, this._combineOptions());\n            this._eventManager.setTarget(this.googleMap);\n            this.mapInitialized.emit(this.googleMap);\n        });\n    }\n    ngOnDestroy() {\n        this.mapInitialized.complete();\n        this._eventManager.destroy();\n        if (this._isBrowser) {\n            const googleMapsWindow = window;\n            googleMapsWindow.gm_authFailure = this._existingAuthFailureCallback;\n        }\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.fitBounds\n     */\n    fitBounds(bounds, padding) {\n        this._assertInitialized();\n        this.googleMap.fitBounds(bounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panBy\n     */\n    panBy(x, y) {\n        this._assertInitialized();\n        this.googleMap.panBy(x, y);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panTo\n     */\n    panTo(latLng) {\n        this._assertInitialized();\n        this.googleMap.panTo(latLng);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.panToBounds\n     */\n    panToBounds(latLngBounds, padding) {\n        this._assertInitialized();\n        this.googleMap.panToBounds(latLngBounds, padding);\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.googleMap.getBounds() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.googleMap.getCenter();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getClickableIcons\n     */\n    getClickableIcons() {\n        this._assertInitialized();\n        return this.googleMap.getClickableIcons();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getHeading\n     */\n    getHeading() {\n        this._assertInitialized();\n        return this.googleMap.getHeading();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getMapTypeId\n     */\n    getMapTypeId() {\n        this._assertInitialized();\n        return this.googleMap.getMapTypeId();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getProjection\n     */\n    getProjection() {\n        this._assertInitialized();\n        return this.googleMap.getProjection() || null;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getStreetView\n     */\n    getStreetView() {\n        this._assertInitialized();\n        return this.googleMap.getStreetView();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getTilt\n     */\n    getTilt() {\n        this._assertInitialized();\n        return this.googleMap.getTilt();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.getZoom\n     */\n    getZoom() {\n        this._assertInitialized();\n        return this.googleMap.getZoom();\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.controls\n     */\n    get controls() {\n        this._assertInitialized();\n        return this.googleMap.controls;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.data\n     */\n    get data() {\n        this._assertInitialized();\n        return this.googleMap.data;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.mapTypes\n     */\n    get mapTypes() {\n        this._assertInitialized();\n        return this.googleMap.mapTypes;\n    }\n    /**\n     * See\n     * https://developers.google.com/maps/documentation/javascript/reference/map#Map.overlayMapTypes\n     */\n    get overlayMapTypes() {\n        this._assertInitialized();\n        return this.googleMap.overlayMapTypes;\n    }\n    /** Returns a promise that resolves when the map has been initialized. */\n    _resolveMap() {\n        return this.googleMap\n            ? Promise.resolve(this.googleMap)\n            : this.mapInitialized.pipe(take(1)).toPromise();\n    }\n    _setSize() {\n        if (this._mapEl) {\n            const styles = this._mapEl.style;\n            styles.height =\n                this.height === null ? '' : coerceCssPixelValue(this.height) || DEFAULT_HEIGHT;\n            styles.width = this.width === null ? '' : coerceCssPixelValue(this.width) || DEFAULT_WIDTH;\n        }\n    }\n    /** Combines the center and zoom and the other map options into a single object */\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            // It's important that we set **some** kind of `center` and `zoom`, otherwise\n            // Google Maps will render a blank rectangle which looks broken.\n            center: this._center || options.center || DEFAULT_OPTIONS.center,\n            zoom: this._zoom ?? options.zoom ?? DEFAULT_OPTIONS.zoom,\n            // Passing in an undefined `mapTypeId` seems to break tile loading\n            // so make sure that we have some kind of default (see #22082).\n            mapTypeId: this.mapTypeId || options.mapTypeId || DEFAULT_OPTIONS.mapTypeId,\n        };\n    }\n    /** Asserts that the map has been initialized. */\n    _assertInitialized() {\n        if (!this.googleMap && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: GoogleMap, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: GoogleMap, isStandalone: true, selector: \"google-map\", inputs: { height: \"height\", width: \"width\", mapTypeId: \"mapTypeId\", center: \"center\", zoom: \"zoom\", options: \"options\" }, outputs: { mapInitialized: \"mapInitialized\", authFailure: \"authFailure\", boundsChanged: \"boundsChanged\", centerChanged: \"centerChanged\", mapClick: \"mapClick\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", mapDragstart: \"mapDragstart\", headingChanged: \"headingChanged\", idle: \"idle\", maptypeidChanged: \"maptypeidChanged\", mapMousemove: \"mapMousemove\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", projectionChanged: \"projectionChanged\", mapRightclick: \"mapRightclick\", tilesloaded: \"tilesloaded\", tiltChanged: \"tiltChanged\", zoomChanged: \"zoomChanged\" }, exportAs: [\"googleMap\"], usesOnChanges: true, ngImport: i0, template: '<div class=\"map-container\"></div><ng-content />', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: GoogleMap, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'google-map',\n                    exportAs: 'googleMap',\n                    standalone: true,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    template: '<div class=\"map-container\"></div><ng-content />',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }], propDecorators: { height: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], mapTypeId: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], zoom: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], mapInitialized: [{\n                type: Output\n            }], authFailure: [{\n                type: Output\n            }], boundsChanged: [{\n                type: Output\n            }], centerChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], headingChanged: [{\n                type: Output\n            }], idle: [{\n                type: Output\n            }], maptypeidChanged: [{\n                type: Output\n            }], mapMousemove: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], projectionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], tilesloaded: [{\n                type: Output\n            }], tiltChanged: [{\n                type: Output\n            }], zoomChanged: [{\n                type: Output\n            }] } });\nconst cssUnitsPattern = /([A-Za-z%]+)$/;\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return cssUnitsPattern.test(value) ? value : `${value}px`;\n}\n\n/// <reference types=\"google.maps\" />\nclass MapBaseLayer {\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._ngZone.runOutsideAngular(() => {\n                this._initializeObject();\n            });\n            this._assertInitialized();\n            this._setMap();\n        }\n    }\n    ngOnDestroy() {\n        this._unsetMap();\n    }\n    _assertInitialized() {\n        if (!this._map.googleMap) {\n            throw Error('Cannot access Google Map information before the API has been initialized. ' +\n                'Please wait for the API to load before trying to interact with it.');\n        }\n    }\n    _initializeObject() { }\n    _setMap() { }\n    _unsetMap() { }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapBaseLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapBaseLayer, isStandalone: true, selector: \"map-base-layer\", exportAs: [\"mapBaseLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapBaseLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-base-layer',\n                    exportAs: 'mapBaseLayer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Bicycling Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#BicyclingLayer\n */\nclass MapBicyclingLayer {\n    constructor() {\n        this._map = inject(GoogleMap);\n        this._zone = inject(NgZone);\n        /** Event emitted when the bicycling layer is initialized. */\n        this.bicyclingLayerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            if (google.maps.BicyclingLayer && this._map.googleMap) {\n                this._initialize(this._map.googleMap, google.maps.BicyclingLayer);\n            }\n            else {\n                this._zone.runOutsideAngular(() => {\n                    Promise.all([\n                        this._map._resolveMap(),\n                        importLibrary('maps', 'BicyclingLayer'),\n                    ]).then(([map, layerConstructor]) => {\n                        this._initialize(map, layerConstructor);\n                    });\n                });\n            }\n        }\n    }\n    _initialize(map, layerConstructor) {\n        this._zone.runOutsideAngular(() => {\n            this.bicyclingLayer = new layerConstructor();\n            this.bicyclingLayerInitialized.emit(this.bicyclingLayer);\n            this._assertLayerInitialized();\n            this.bicyclingLayer.setMap(map);\n        });\n    }\n    ngOnDestroy() {\n        this.bicyclingLayer?.setMap(null);\n    }\n    _assertLayerInitialized() {\n        if (!this.bicyclingLayer) {\n            throw Error('Cannot interact with a Google Map Bicycling Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapBicyclingLayer, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapBicyclingLayer, isStandalone: true, selector: \"map-bicycling-layer\", outputs: { bicyclingLayerInitialized: \"bicyclingLayerInitialized\" }, exportAs: [\"mapBicyclingLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapBicyclingLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-bicycling-layer',\n                    exportAs: 'mapBicyclingLayer',\n                    standalone: true,\n                }]\n        }], propDecorators: { bicyclingLayerInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Circle via the Google Maps JavaScript API.\n * @see developers.google.com/maps/documentation/javascript/reference/polygon#Circle\n */\nclass MapCircle {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set center(center) {\n        this._center.next(center);\n    }\n    set radius(radius) {\n        this._radius.next(radius);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._center = new BehaviorSubject(undefined);\n        this._radius = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.center_changed\n         */\n        this.centerChanged = this._eventManager.getLazyEmitter('center_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.click\n         */\n        this.circleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dblclick\n         */\n        this.circleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.drag\n         */\n        this.circleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragend\n         */\n        this.circleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.dragstart\n         */\n        this.circleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousedown\n         */\n        this.circleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mousemove\n         */\n        this.circleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseout\n         */\n        this.circleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseover\n         */\n        this.circleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.mouseup\n         */\n        this.circleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.radius_changed\n         */\n        this.radiusChanged = this._eventManager.getLazyEmitter('radius_changed');\n        /**\n         * @see\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.rightclick\n         */\n        this.circleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /** Event emitted when the circle is initialized. */\n        this.circleInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this._map._isBrowser) {\n            return;\n        }\n        this._combineOptions()\n            .pipe(take(1))\n            .subscribe(options => {\n            if (google.maps.Circle && this._map.googleMap) {\n                this._initialize(this._map.googleMap, google.maps.Circle, options);\n            }\n            else {\n                this._ngZone.runOutsideAngular(() => {\n                    Promise.all([\n                        this._map._resolveMap(),\n                        importLibrary('maps', 'Circle'),\n                    ]).then(([map, circleConstructor]) => {\n                        this._initialize(map, circleConstructor, options);\n                    });\n                });\n            }\n        });\n    }\n    _initialize(map, circleConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.circle = new circleConstructor(options);\n            this._assertInitialized();\n            this.circle.setMap(map);\n            this._eventManager.setTarget(this.circle);\n            this.circleInitialized.emit(this.circle);\n            this._watchForOptionsChanges();\n            this._watchForCenterChanges();\n            this._watchForRadiusChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.circle?.setMap(null);\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.circle.getBounds();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getCenter\n     */\n    getCenter() {\n        this._assertInitialized();\n        return this.circle.getCenter();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.circle.getDraggable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.circle.getEditable();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getRadius\n     */\n    getRadius() {\n        this._assertInitialized();\n        return this.circle.getRadius();\n    }\n    /**\n     * @see\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Circle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.circle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._center, this._radius]).pipe(map(([options, center, radius]) => {\n            const combinedOptions = {\n                ...options,\n                center: center || options.center,\n                radius: radius !== undefined ? radius : options.radius,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.circle.setOptions(options);\n        });\n    }\n    _watchForCenterChanges() {\n        this._center.pipe(takeUntil(this._destroyed)).subscribe(center => {\n            if (center) {\n                this._assertInitialized();\n                this.circle.setCenter(center);\n            }\n        });\n    }\n    _watchForRadiusChanges() {\n        this._radius.pipe(takeUntil(this._destroyed)).subscribe(radius => {\n            if (radius !== undefined) {\n                this._assertInitialized();\n                this.circle.setRadius(radius);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.circle) {\n                throw Error('Cannot interact with a Google Map Circle before it has been ' +\n                    'initialized. Please wait for the Circle to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapCircle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapCircle, isStandalone: true, selector: \"map-circle\", inputs: { options: \"options\", center: \"center\", radius: \"radius\" }, outputs: { centerChanged: \"centerChanged\", circleClick: \"circleClick\", circleDblclick: \"circleDblclick\", circleDrag: \"circleDrag\", circleDragend: \"circleDragend\", circleDragstart: \"circleDragstart\", circleMousedown: \"circleMousedown\", circleMousemove: \"circleMousemove\", circleMouseout: \"circleMouseout\", circleMouseover: \"circleMouseover\", circleMouseup: \"circleMouseup\", radiusChanged: \"radiusChanged\", circleRightclick: \"circleRightclick\", circleInitialized: \"circleInitialized\" }, exportAs: [\"mapCircle\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapCircle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-circle',\n                    exportAs: 'mapCircle',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], center: [{\n                type: Input\n            }], radius: [{\n                type: Input\n            }], centerChanged: [{\n                type: Output\n            }], circleClick: [{\n                type: Output\n            }], circleDblclick: [{\n                type: Output\n            }], circleDrag: [{\n                type: Output\n            }], circleDragend: [{\n                type: Output\n            }], circleDragstart: [{\n                type: Output\n            }], circleMousedown: [{\n                type: Output\n            }], circleMousemove: [{\n                type: Output\n            }], circleMouseout: [{\n                type: Output\n            }], circleMouseover: [{\n                type: Output\n            }], circleMouseup: [{\n                type: Output\n            }], radiusChanged: [{\n                type: Output\n            }], circleRightclick: [{\n                type: Output\n            }], circleInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Directions Renderer via the Google Maps\n * JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsRenderer\n */\nclass MapDirectionsRenderer {\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions.directions\n     */\n    set directions(directions) {\n        this._directions = directions;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRendererOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/directions\n         * #DirectionsRenderer.directions_changed\n         */\n        this.directionsChanged = this._eventManager.getLazyEmitter('directions_changed');\n        /** Event emitted when the directions renderer is initialized. */\n        this.directionsRendererInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            if (google.maps.DirectionsRenderer && this._googleMap.googleMap) {\n                this._initialize(this._googleMap.googleMap, google.maps.DirectionsRenderer);\n            }\n            else {\n                this._ngZone.runOutsideAngular(() => {\n                    Promise.all([\n                        this._googleMap._resolveMap(),\n                        importLibrary('routes', 'DirectionsRenderer'),\n                    ]).then(([map, rendererConstructor]) => {\n                        this._initialize(map, rendererConstructor);\n                    });\n                });\n            }\n        }\n    }\n    _initialize(map, rendererConstructor) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.directionsRenderer = new rendererConstructor(this._combineOptions());\n            this._assertInitialized();\n            this.directionsRenderer.setMap(map);\n            this._eventManager.setTarget(this.directionsRenderer);\n            this.directionsRendererInitialized.emit(this.directionsRenderer);\n        });\n    }\n    ngOnChanges(changes) {\n        if (this.directionsRenderer) {\n            if (changes['options']) {\n                this.directionsRenderer.setOptions(this._combineOptions());\n            }\n            if (changes['directions'] && this._directions !== undefined) {\n                this.directionsRenderer.setDirections(this._directions);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this.directionsRenderer?.setMap(null);\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getDirections\n     */\n    getDirections() {\n        this._assertInitialized();\n        return this.directionsRenderer.getDirections();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getPanel\n     */\n    getPanel() {\n        this._assertInitialized();\n        return this.directionsRenderer.getPanel();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsRenderer.getRouteIndex\n     */\n    getRouteIndex() {\n        this._assertInitialized();\n        return this.directionsRenderer.getRouteIndex();\n    }\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            directions: this._directions || options.directions,\n            map: this._googleMap.googleMap,\n        };\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.directionsRenderer) {\n                throw Error('Cannot interact with a Google Map Directions Renderer before it has been ' +\n                    'initialized. Please wait for the Directions Renderer to load before trying ' +\n                    'to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapDirectionsRenderer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapDirectionsRenderer, isStandalone: true, selector: \"map-directions-renderer\", inputs: { directions: \"directions\", options: \"options\" }, outputs: { directionsChanged: \"directionsChanged\", directionsRendererInitialized: \"directionsRendererInitialized\" }, exportAs: [\"mapDirectionsRenderer\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapDirectionsRenderer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-directions-renderer',\n                    exportAs: 'mapDirectionsRenderer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { directions: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], directionsChanged: [{\n                type: Output\n            }], directionsRendererInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Ground Overlay via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay\n */\nclass MapGroundOverlay {\n    /** URL of the image that will be shown in the overlay. */\n    set url(url) {\n        this._url.next(url);\n    }\n    /** Bounds for the overlay. */\n    get bounds() {\n        return this._bounds.value;\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    /** Opacity of the overlay. */\n    set opacity(opacity) {\n        this._opacity.next(opacity);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._opacity = new BehaviorSubject(1);\n        this._url = new BehaviorSubject('');\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /** Whether the overlay is clickable */\n        this.clickable = false;\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay#GroundOverlay.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/image-overlay\n         * #GroundOverlay.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /** Event emitted when the ground overlay is initialized. */\n        this.groundOverlayInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            // The ground overlay setup is slightly different from the other Google Maps objects in that\n            // we have to recreate the `GroundOverlay` object whenever the bounds change, because\n            // Google Maps doesn't provide an API to update the bounds of an existing overlay.\n            this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n                if (this.groundOverlay) {\n                    this.groundOverlay.setMap(null);\n                    this.groundOverlay = undefined;\n                }\n                if (!bounds) {\n                    return;\n                }\n                if (google.maps.GroundOverlay && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.GroundOverlay, bounds);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([\n                            this._map._resolveMap(),\n                            importLibrary('maps', 'GroundOverlay'),\n                        ]).then(([map, overlayConstructor]) => {\n                            this._initialize(map, overlayConstructor, bounds);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, overlayConstructor, bounds) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.groundOverlay = new overlayConstructor(this._url.getValue(), bounds, {\n                clickable: this.clickable,\n                opacity: this._opacity.value,\n            });\n            this._assertInitialized();\n            this.groundOverlay.setMap(map);\n            this._eventManager.setTarget(this.groundOverlay);\n            this.groundOverlayInitialized.emit(this.groundOverlay);\n            // We only need to set up the watchers once.\n            if (!this._hasWatchers) {\n                this._hasWatchers = true;\n                this._watchForOpacityChanges();\n                this._watchForUrlChanges();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.groundOverlay?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.groundOverlay.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.groundOverlay.getOpacity();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/image-overlay\n     * #GroundOverlay.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.groundOverlay.getUrl();\n    }\n    _watchForOpacityChanges() {\n        this._opacity.pipe(takeUntil(this._destroyed)).subscribe(opacity => {\n            if (opacity != null) {\n                this.groundOverlay?.setOpacity(opacity);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            const overlay = this.groundOverlay;\n            if (overlay) {\n                overlay.set('url', url);\n                // Google Maps only redraws the overlay if we re-set the map.\n                overlay.setMap(null);\n                overlay.setMap(this._map.googleMap);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.groundOverlay) {\n                throw Error('Cannot interact with a Google Map GroundOverlay before it has been initialized. ' +\n                    'Please wait for the GroundOverlay to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapGroundOverlay, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapGroundOverlay, isStandalone: true, selector: \"map-ground-overlay\", inputs: { url: \"url\", bounds: \"bounds\", clickable: \"clickable\", opacity: \"opacity\" }, outputs: { mapClick: \"mapClick\", mapDblclick: \"mapDblclick\", groundOverlayInitialized: \"groundOverlayInitialized\" }, exportAs: [\"mapGroundOverlay\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapGroundOverlay, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-ground-overlay',\n                    exportAs: 'mapGroundOverlay',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { url: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], opacity: [{\n                type: Input\n            }], mapClick: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], groundOverlayInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps info window via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/info-window\n */\nclass MapInfoWindow {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set position(position) {\n        this._position.next(position);\n    }\n    constructor(_googleMap, _elementRef, _ngZone) {\n        this._googleMap = _googleMap;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._position = new BehaviorSubject(undefined);\n        this._destroy = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.closeclick\n         */\n        this.closeclick = this._eventManager.getLazyEmitter('closeclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.content_changed\n         */\n        this.contentChanged = this._eventManager.getLazyEmitter('content_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.domready\n         */\n        this.domready = this._eventManager.getLazyEmitter('domready');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/info-window\n         * #InfoWindow.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        /** Event emitted when the info window is initialized. */\n        this.infoWindowInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.InfoWindow) {\n                    this._initialize(google.maps.InfoWindow, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        importLibrary('maps', 'InfoWindow').then(infoWindowConstructor => this._initialize(infoWindowConstructor, options));\n                    });\n                }\n            });\n        }\n    }\n    _initialize(infoWindowConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.infoWindow = new infoWindowConstructor(options);\n            this._eventManager.setTarget(this.infoWindow);\n            this.infoWindowInitialized.emit(this.infoWindow);\n            this._watchForOptionsChanges();\n            this._watchForPositionChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroy.next();\n        this._destroy.complete();\n        // If no info window has been created on the server, we do not try closing it.\n        // On the server, an info window cannot be created and this would cause errors.\n        if (this.infoWindow) {\n            this.close();\n        }\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.close\n     */\n    close() {\n        this._assertInitialized();\n        this.infoWindow.close();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getContent\n     */\n    getContent() {\n        this._assertInitialized();\n        return this.infoWindow.getContent() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window\n     * #InfoWindow.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.infoWindow.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/info-window#InfoWindow.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.infoWindow.getZIndex();\n    }\n    /**\n     * Opens the MapInfoWindow using the provided anchor. If the anchor is not set,\n     * then the position property of the options input is used instead.\n     */\n    open(anchor, shouldFocus) {\n        this._assertInitialized();\n        const anchorObject = anchor ? anchor.getAnchor() : undefined;\n        // Prevent the info window from initializing when trying to reopen on the same anchor.\n        // Note that when the window is opened for the first time, the anchor will always be\n        // undefined. If that's the case, we have to allow it to open in order to handle the\n        // case where the window doesn't have an anchor, but is placed at a particular position.\n        if (this.infoWindow.get('anchor') !== anchorObject || !anchorObject) {\n            this._elementRef.nativeElement.style.display = '';\n            // The config is cast to `any`, because the internal typings are out of date.\n            this.infoWindow.open({\n                map: this._googleMap.googleMap,\n                anchor: anchorObject,\n                shouldFocus,\n            });\n        }\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._position]).pipe(map(([options, position]) => {\n            const combinedOptions = {\n                ...options,\n                position: position || options.position,\n                content: this._elementRef.nativeElement,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroy)).subscribe(options => {\n            this._assertInitialized();\n            this.infoWindow.setOptions(options);\n        });\n    }\n    _watchForPositionChanges() {\n        this._position.pipe(takeUntil(this._destroy)).subscribe(position => {\n            if (position) {\n                this._assertInitialized();\n                this.infoWindow.setPosition(position);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.infoWindow) {\n                throw Error('Cannot interact with a Google Map Info Window before it has been ' +\n                    'initialized. Please wait for the Info Window to load before trying to interact with ' +\n                    'it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapInfoWindow, deps: [{ token: GoogleMap }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapInfoWindow, isStandalone: true, selector: \"map-info-window\", inputs: { options: \"options\", position: \"position\" }, outputs: { closeclick: \"closeclick\", contentChanged: \"contentChanged\", domready: \"domready\", positionChanged: \"positionChanged\", zindexChanged: \"zindexChanged\", infoWindowInitialized: \"infoWindowInitialized\" }, host: { styleAttribute: \"display: none\" }, exportAs: [\"mapInfoWindow\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapInfoWindow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-info-window',\n                    exportAs: 'mapInfoWindow',\n                    standalone: true,\n                    host: { 'style': 'display: none' },\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], closeclick: [{\n                type: Output\n            }], contentChanged: [{\n                type: Output\n            }], domready: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }], infoWindowInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps KML Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer\n */\nclass MapKmlLayer {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set url(url) {\n        this._url.next(url);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._url = new BehaviorSubject('');\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.click\n         */\n        this.kmlClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/kml\n         * #KmlLayer.defaultviewport_changed\n         */\n        this.defaultviewportChanged = this._eventManager.getLazyEmitter('defaultviewport_changed');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.status_changed\n         */\n        this.statusChanged = this._eventManager.getLazyEmitter('status_changed');\n        /** Event emitted when the KML layer is initialized. */\n        this.kmlLayerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.KmlLayer && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.KmlLayer, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([\n                            this._map._resolveMap(),\n                            importLibrary('maps', 'KmlLayer'),\n                        ]).then(([map, layerConstructor]) => {\n                            this._initialize(map, layerConstructor, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, layerConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.kmlLayer = new layerConstructor(options);\n            this._assertInitialized();\n            this.kmlLayer.setMap(map);\n            this._eventManager.setTarget(this.kmlLayer);\n            this.kmlLayerInitialized.emit(this.kmlLayer);\n            this._watchForOptionsChanges();\n            this._watchForUrlChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.kmlLayer?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getDefaultViewport\n     */\n    getDefaultViewport() {\n        this._assertInitialized();\n        return this.kmlLayer.getDefaultViewport();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getMetadata\n     */\n    getMetadata() {\n        this._assertInitialized();\n        return this.kmlLayer.getMetadata();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getStatus\n     */\n    getStatus() {\n        this._assertInitialized();\n        return this.kmlLayer.getStatus();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getUrl\n     */\n    getUrl() {\n        this._assertInitialized();\n        return this.kmlLayer.getUrl();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/kml#KmlLayer.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.kmlLayer.getZIndex();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._url]).pipe(map(([options, url]) => {\n            const combinedOptions = {\n                ...options,\n                url: url || options.url,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            if (this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setOptions(options);\n            }\n        });\n    }\n    _watchForUrlChanges() {\n        this._url.pipe(takeUntil(this._destroyed)).subscribe(url => {\n            if (url && this.kmlLayer) {\n                this._assertInitialized();\n                this.kmlLayer.setUrl(url);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.kmlLayer) {\n                throw Error('Cannot interact with a Google Map KmlLayer before it has been ' +\n                    'initialized. Please wait for the KmlLayer to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapKmlLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapKmlLayer, isStandalone: true, selector: \"map-kml-layer\", inputs: { options: \"options\", url: \"url\" }, outputs: { kmlClick: \"kmlClick\", defaultviewportChanged: \"defaultviewportChanged\", statusChanged: \"statusChanged\", kmlLayerInitialized: \"kmlLayerInitialized\" }, exportAs: [\"mapKmlLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapKmlLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-kml-layer',\n                    exportAs: 'mapKmlLayer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], url: [{\n                type: Input\n            }], kmlClick: [{\n                type: Output\n            }], defaultviewportChanged: [{\n                type: Output\n            }], statusChanged: [{\n                type: Output\n            }], kmlLayerInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Default options for the Google Maps marker component. Displays a marker\n * at the Googleplex.\n */\nconst DEFAULT_MARKER_OPTIONS = {\n    position: { lat: 37.421995, lng: -122.084092 },\n};\n/**\n * Angular component that renders a Google Maps marker via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/marker\n */\nclass MapMarker {\n    /**\n     * Title of the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.title\n     */\n    set title(title) {\n        this._title = title;\n    }\n    /**\n     * Position of the marker. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.position\n     */\n    set position(position) {\n        this._position = position;\n    }\n    /**\n     * Label for the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.label\n     */\n    set label(label) {\n        this._label = label;\n    }\n    /**\n     * Whether the marker is clickable. See:\n     * developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.clickable\n     */\n    set clickable(clickable) {\n        this._clickable = clickable;\n    }\n    /**\n     * Options used to configure the marker.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    /**\n     * Icon to be used for the marker.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/marker#Icon\n     */\n    set icon(icon) {\n        this._icon = icon;\n    }\n    /**\n     * Whether the marker is visible.\n     * See: developers.google.com/maps/documentation/javascript/reference/marker#MarkerOptions.visible\n     */\n    set visible(value) {\n        this._visible = value;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.animation_changed\n         */\n        this.animationChanged = this._eventManager.getLazyEmitter('animation_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.click\n         */\n        this.mapClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.clickable_changed\n         */\n        this.clickableChanged = this._eventManager.getLazyEmitter('clickable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.cursor_changed\n         */\n        this.cursorChanged = this._eventManager.getLazyEmitter('cursor_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dblclick\n         */\n        this.mapDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.drag\n         */\n        this.mapDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragend\n         */\n        this.mapDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.draggable_changed\n         */\n        this.draggableChanged = this._eventManager.getLazyEmitter('draggable_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.dragstart\n         */\n        this.mapDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.flat_changed\n         */\n        this.flatChanged = this._eventManager.getLazyEmitter('flat_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.icon_changed\n         */\n        this.iconChanged = this._eventManager.getLazyEmitter('icon_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mousedown\n         */\n        this.mapMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseout\n         */\n        this.mapMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseover\n         */\n        this.mapMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.mouseup\n         */\n        this.mapMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.position_changed\n         */\n        this.positionChanged = this._eventManager.getLazyEmitter('position_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.rightclick\n         */\n        this.mapRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.shape_changed\n         */\n        this.shapeChanged = this._eventManager.getLazyEmitter('shape_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.title_changed\n         */\n        this.titleChanged = this._eventManager.getLazyEmitter('title_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.visible_changed\n         */\n        this.visibleChanged = this._eventManager.getLazyEmitter('visible_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/marker#Marker.zindex_changed\n         */\n        this.zindexChanged = this._eventManager.getLazyEmitter('zindex_changed');\n        /** Event emitted when the marker is initialized. */\n        this.markerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (!this._googleMap._isBrowser) {\n            return;\n        }\n        if (google.maps.Marker && this._googleMap.googleMap) {\n            this._initialize(this._googleMap.googleMap, google.maps.Marker);\n        }\n        else {\n            this._ngZone.runOutsideAngular(() => {\n                Promise.all([\n                    this._googleMap._resolveMap(),\n                    importLibrary('marker', 'Marker'),\n                ]).then(([map, markerConstrutor]) => {\n                    this._initialize(map, markerConstrutor);\n                });\n            });\n        }\n    }\n    _initialize(map, markerConstructor) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.marker = new markerConstructor(this._combineOptions());\n            this._assertInitialized();\n            this.marker.setMap(map);\n            this._eventManager.setTarget(this.marker);\n            this.markerInitialized.next(this.marker);\n        });\n    }\n    ngOnChanges(changes) {\n        const { marker, _title, _position, _label, _clickable, _icon, _visible } = this;\n        if (marker) {\n            if (changes['options']) {\n                marker.setOptions(this._combineOptions());\n            }\n            if (changes['title'] && _title !== undefined) {\n                marker.setTitle(_title);\n            }\n            if (changes['position'] && _position) {\n                marker.setPosition(_position);\n            }\n            if (changes['label'] && _label !== undefined) {\n                marker.setLabel(_label);\n            }\n            if (changes['clickable'] && _clickable !== undefined) {\n                marker.setClickable(_clickable);\n            }\n            if (changes['icon'] && _icon) {\n                marker.setIcon(_icon);\n            }\n            if (changes['visible'] && _visible !== undefined) {\n                marker.setVisible(_visible);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.markerInitialized.complete();\n        this._eventManager.destroy();\n        this.marker?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getAnimation\n     */\n    getAnimation() {\n        this._assertInitialized();\n        return this.marker.getAnimation() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getClickable\n     */\n    getClickable() {\n        this._assertInitialized();\n        return this.marker.getClickable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getCursor\n     */\n    getCursor() {\n        this._assertInitialized();\n        return this.marker.getCursor() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return !!this.marker.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getIcon\n     */\n    getIcon() {\n        this._assertInitialized();\n        return this.marker.getIcon() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getLabel\n     */\n    getLabel() {\n        this._assertInitialized();\n        return this.marker.getLabel() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getOpacity\n     */\n    getOpacity() {\n        this._assertInitialized();\n        return this.marker.getOpacity() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getPosition\n     */\n    getPosition() {\n        this._assertInitialized();\n        return this.marker.getPosition() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getShape\n     */\n    getShape() {\n        this._assertInitialized();\n        return this.marker.getShape() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getTitle\n     */\n    getTitle() {\n        this._assertInitialized();\n        return this.marker.getTitle() || null;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.marker.getVisible();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/marker#Marker.getZIndex\n     */\n    getZIndex() {\n        this._assertInitialized();\n        return this.marker.getZIndex() || null;\n    }\n    /** Gets the anchor point that can be used to attach other Google Maps objects. */\n    getAnchor() {\n        this._assertInitialized();\n        return this.marker;\n    }\n    /** Returns a promise that resolves when the marker has been initialized. */\n    _resolveMarker() {\n        return this.marker\n            ? Promise.resolve(this.marker)\n            : this.markerInitialized.pipe(take(1)).toPromise();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || DEFAULT_MARKER_OPTIONS;\n        return {\n            ...options,\n            title: this._title || options.title,\n            position: this._position || options.position,\n            label: this._label || options.label,\n            clickable: this._clickable ?? options.clickable,\n            map: this._googleMap.googleMap,\n            icon: this._icon || options.icon,\n            visible: this._visible ?? options.visible,\n        };\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.marker) {\n                throw Error('Cannot interact with a Google Map Marker before it has been ' +\n                    'initialized. Please wait for the Marker to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapMarker, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapMarker, isStandalone: true, selector: \"map-marker\", inputs: { title: \"title\", position: \"position\", label: \"label\", clickable: \"clickable\", options: \"options\", icon: \"icon\", visible: \"visible\" }, outputs: { animationChanged: \"animationChanged\", mapClick: \"mapClick\", clickableChanged: \"clickableChanged\", cursorChanged: \"cursorChanged\", mapDblclick: \"mapDblclick\", mapDrag: \"mapDrag\", mapDragend: \"mapDragend\", draggableChanged: \"draggableChanged\", mapDragstart: \"mapDragstart\", flatChanged: \"flatChanged\", iconChanged: \"iconChanged\", mapMousedown: \"mapMousedown\", mapMouseout: \"mapMouseout\", mapMouseover: \"mapMouseover\", mapMouseup: \"mapMouseup\", positionChanged: \"positionChanged\", mapRightclick: \"mapRightclick\", shapeChanged: \"shapeChanged\", titleChanged: \"titleChanged\", visibleChanged: \"visibleChanged\", zindexChanged: \"zindexChanged\", markerInitialized: \"markerInitialized\" }, exportAs: [\"mapMarker\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapMarker, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-marker',\n                    exportAs: 'mapMarker',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { title: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }], label: [{\n                type: Input\n            }], clickable: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], icon: [{\n                type: Input\n            }], visible: [{\n                type: Input\n            }], animationChanged: [{\n                type: Output\n            }], mapClick: [{\n                type: Output\n            }], clickableChanged: [{\n                type: Output\n            }], cursorChanged: [{\n                type: Output\n            }], mapDblclick: [{\n                type: Output\n            }], mapDrag: [{\n                type: Output\n            }], mapDragend: [{\n                type: Output\n            }], draggableChanged: [{\n                type: Output\n            }], mapDragstart: [{\n                type: Output\n            }], flatChanged: [{\n                type: Output\n            }], iconChanged: [{\n                type: Output\n            }], mapMousedown: [{\n                type: Output\n            }], mapMouseout: [{\n                type: Output\n            }], mapMouseover: [{\n                type: Output\n            }], mapMouseup: [{\n                type: Output\n            }], positionChanged: [{\n                type: Output\n            }], mapRightclick: [{\n                type: Output\n            }], shapeChanged: [{\n                type: Output\n            }], titleChanged: [{\n                type: Output\n            }], visibleChanged: [{\n                type: Output\n            }], zindexChanged: [{\n                type: Output\n            }], markerInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/** Default options for a clusterer. */\nconst DEFAULT_CLUSTERER_OPTIONS = {};\n/**\n * Angular component for implementing a Google Maps Marker Clusterer.\n *\n * See https://developers.google.com/maps/documentation/javascript/marker-clustering\n */\nclass MapMarkerClusterer {\n    set averageCenter(averageCenter) {\n        this._averageCenter = averageCenter;\n    }\n    set batchSizeIE(batchSizeIE) {\n        this._batchSizeIE = batchSizeIE;\n    }\n    set calculator(calculator) {\n        this._calculator = calculator;\n    }\n    set clusterClass(clusterClass) {\n        this._clusterClass = clusterClass;\n    }\n    set enableRetinaIcons(enableRetinaIcons) {\n        this._enableRetinaIcons = enableRetinaIcons;\n    }\n    set gridSize(gridSize) {\n        this._gridSize = gridSize;\n    }\n    set ignoreHidden(ignoreHidden) {\n        this._ignoreHidden = ignoreHidden;\n    }\n    set imageExtension(imageExtension) {\n        this._imageExtension = imageExtension;\n    }\n    set imagePath(imagePath) {\n        this._imagePath = imagePath;\n    }\n    set imageSizes(imageSizes) {\n        this._imageSizes = imageSizes;\n    }\n    set maxZoom(maxZoom) {\n        this._maxZoom = maxZoom;\n    }\n    set minimumClusterSize(minimumClusterSize) {\n        this._minimumClusterSize = minimumClusterSize;\n    }\n    set styles(styles) {\n        this._styles = styles;\n    }\n    set title(title) {\n        this._title = title;\n    }\n    set zIndex(zIndex) {\n        this._zIndex = zIndex;\n    }\n    set zoomOnClick(zoomOnClick) {\n        this._zoomOnClick = zoomOnClick;\n    }\n    set options(options) {\n        this._options = options;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        this._currentMarkers = new Set();\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._destroy = new Subject();\n        this.ariaLabelFn = () => '';\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/\n         * _google_markerclustererplus.html#clusteringbegin\n         */\n        this.clusteringbegin = this._eventManager.getLazyEmitter('clusteringbegin');\n        /**\n         * See\n         * googlemaps.github.io/v3-utility-library/modules/_google_markerclustererplus.html#clusteringend\n         */\n        this.clusteringend = this._eventManager.getLazyEmitter('clusteringend');\n        /** Emits when a cluster has been clicked. */\n        this.clusterClick = this._eventManager.getLazyEmitter('click');\n        /** Event emitted when the clusterer is initialized. */\n        this.markerClustererInitialized = new EventEmitter();\n        this._canInitialize = _googleMap._isBrowser;\n    }\n    ngOnInit() {\n        if (this._canInitialize) {\n            this._ngZone.runOutsideAngular(() => {\n                this._googleMap._resolveMap().then(map => {\n                    if (typeof MarkerClusterer !== 'function' &&\n                        (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        throw Error('MarkerClusterer class not found, cannot construct a marker cluster. ' +\n                            'Please install the MarkerClustererPlus library: ' +\n                            'https://github.com/googlemaps/js-markerclustererplus');\n                    }\n                    // Create the object outside the zone so its events don't trigger change detection.\n                    // We'll bring it back in inside the `MapEventManager` only for the events that the\n                    // user has subscribed to.\n                    this.markerClusterer = this._ngZone.runOutsideAngular(() => {\n                        return new MarkerClusterer(map, [], this._combineOptions());\n                    });\n                    this._assertInitialized();\n                    this._eventManager.setTarget(this.markerClusterer);\n                    this.markerClustererInitialized.emit(this.markerClusterer);\n                });\n            });\n        }\n    }\n    ngAfterContentInit() {\n        if (this._canInitialize) {\n            if (this.markerClusterer) {\n                this._watchForMarkerChanges();\n            }\n            else {\n                this.markerClustererInitialized\n                    .pipe(take(1), takeUntil(this._destroy))\n                    .subscribe(() => this._watchForMarkerChanges());\n            }\n        }\n    }\n    ngOnChanges(changes) {\n        const { markerClusterer: clusterer, ariaLabelFn, _averageCenter, _batchSizeIE, _calculator, _styles, _clusterClass, _enableRetinaIcons, _gridSize, _ignoreHidden, _imageExtension, _imagePath, _imageSizes, _maxZoom, _minimumClusterSize, _title, _zIndex, _zoomOnClick, } = this;\n        if (clusterer) {\n            if (changes['options']) {\n                clusterer.setOptions(this._combineOptions());\n            }\n            if (changes['ariaLabelFn']) {\n                clusterer.ariaLabelFn = ariaLabelFn;\n            }\n            if (changes['averageCenter'] && _averageCenter !== undefined) {\n                clusterer.setAverageCenter(_averageCenter);\n            }\n            if (changes['batchSizeIE'] && _batchSizeIE !== undefined) {\n                clusterer.setBatchSizeIE(_batchSizeIE);\n            }\n            if (changes['calculator'] && !!_calculator) {\n                clusterer.setCalculator(_calculator);\n            }\n            if (changes['clusterClass'] && _clusterClass !== undefined) {\n                clusterer.setClusterClass(_clusterClass);\n            }\n            if (changes['enableRetinaIcons'] && _enableRetinaIcons !== undefined) {\n                clusterer.setEnableRetinaIcons(_enableRetinaIcons);\n            }\n            if (changes['gridSize'] && _gridSize !== undefined) {\n                clusterer.setGridSize(_gridSize);\n            }\n            if (changes['ignoreHidden'] && _ignoreHidden !== undefined) {\n                clusterer.setIgnoreHidden(_ignoreHidden);\n            }\n            if (changes['imageExtension'] && _imageExtension !== undefined) {\n                clusterer.setImageExtension(_imageExtension);\n            }\n            if (changes['imagePath'] && _imagePath !== undefined) {\n                clusterer.setImagePath(_imagePath);\n            }\n            if (changes['imageSizes'] && _imageSizes) {\n                clusterer.setImageSizes(_imageSizes);\n            }\n            if (changes['maxZoom'] && _maxZoom !== undefined) {\n                clusterer.setMaxZoom(_maxZoom);\n            }\n            if (changes['minimumClusterSize'] && _minimumClusterSize !== undefined) {\n                clusterer.setMinimumClusterSize(_minimumClusterSize);\n            }\n            if (changes['styles'] && _styles) {\n                clusterer.setStyles(_styles);\n            }\n            if (changes['title'] && _title !== undefined) {\n                clusterer.setTitle(_title);\n            }\n            if (changes['zIndex'] && _zIndex !== undefined) {\n                clusterer.setZIndex(_zIndex);\n            }\n            if (changes['zoomOnClick'] && _zoomOnClick !== undefined) {\n                clusterer.setZoomOnClick(_zoomOnClick);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this._eventManager.destroy();\n        this.markerClusterer?.setMap(null);\n    }\n    fitMapToMarkers(padding) {\n        this._assertInitialized();\n        this.markerClusterer.fitMapToMarkers(padding);\n    }\n    getAverageCenter() {\n        this._assertInitialized();\n        return this.markerClusterer.getAverageCenter();\n    }\n    getBatchSizeIE() {\n        this._assertInitialized();\n        return this.markerClusterer.getBatchSizeIE();\n    }\n    getCalculator() {\n        this._assertInitialized();\n        return this.markerClusterer.getCalculator();\n    }\n    getClusterClass() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusterClass();\n    }\n    getClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getClusters();\n    }\n    getEnableRetinaIcons() {\n        this._assertInitialized();\n        return this.markerClusterer.getEnableRetinaIcons();\n    }\n    getGridSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getGridSize();\n    }\n    getIgnoreHidden() {\n        this._assertInitialized();\n        return this.markerClusterer.getIgnoreHidden();\n    }\n    getImageExtension() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageExtension();\n    }\n    getImagePath() {\n        this._assertInitialized();\n        return this.markerClusterer.getImagePath();\n    }\n    getImageSizes() {\n        this._assertInitialized();\n        return this.markerClusterer.getImageSizes();\n    }\n    getMaxZoom() {\n        this._assertInitialized();\n        return this.markerClusterer.getMaxZoom();\n    }\n    getMinimumClusterSize() {\n        this._assertInitialized();\n        return this.markerClusterer.getMinimumClusterSize();\n    }\n    getStyles() {\n        this._assertInitialized();\n        return this.markerClusterer.getStyles();\n    }\n    getTitle() {\n        this._assertInitialized();\n        return this.markerClusterer.getTitle();\n    }\n    getTotalClusters() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalClusters();\n    }\n    getTotalMarkers() {\n        this._assertInitialized();\n        return this.markerClusterer.getTotalMarkers();\n    }\n    getZIndex() {\n        this._assertInitialized();\n        return this.markerClusterer.getZIndex();\n    }\n    getZoomOnClick() {\n        this._assertInitialized();\n        return this.markerClusterer.getZoomOnClick();\n    }\n    _combineOptions() {\n        const options = this._options || DEFAULT_CLUSTERER_OPTIONS;\n        return {\n            ...options,\n            ariaLabelFn: this.ariaLabelFn ?? options.ariaLabelFn,\n            averageCenter: this._averageCenter ?? options.averageCenter,\n            batchSize: this.batchSize ?? options.batchSize,\n            batchSizeIE: this._batchSizeIE ?? options.batchSizeIE,\n            calculator: this._calculator ?? options.calculator,\n            clusterClass: this._clusterClass ?? options.clusterClass,\n            enableRetinaIcons: this._enableRetinaIcons ?? options.enableRetinaIcons,\n            gridSize: this._gridSize ?? options.gridSize,\n            ignoreHidden: this._ignoreHidden ?? options.ignoreHidden,\n            imageExtension: this._imageExtension ?? options.imageExtension,\n            imagePath: this._imagePath ?? options.imagePath,\n            imageSizes: this._imageSizes ?? options.imageSizes,\n            maxZoom: this._maxZoom ?? options.maxZoom,\n            minimumClusterSize: this._minimumClusterSize ?? options.minimumClusterSize,\n            styles: this._styles ?? options.styles,\n            title: this._title ?? options.title,\n            zIndex: this._zIndex ?? options.zIndex,\n            zoomOnClick: this._zoomOnClick ?? options.zoomOnClick,\n        };\n    }\n    _watchForMarkerChanges() {\n        this._assertInitialized();\n        this._ngZone.runOutsideAngular(() => {\n            this._getInternalMarkers(this._markers).then(markers => {\n                const initialMarkers = [];\n                for (const marker of markers) {\n                    this._currentMarkers.add(marker);\n                    initialMarkers.push(marker);\n                }\n                this.markerClusterer.addMarkers(initialMarkers);\n            });\n        });\n        this._markers.changes\n            .pipe(takeUntil(this._destroy))\n            .subscribe((markerComponents) => {\n            this._assertInitialized();\n            this._ngZone.runOutsideAngular(() => {\n                this._getInternalMarkers(markerComponents).then(markers => {\n                    const newMarkers = new Set(markers);\n                    const markersToAdd = [];\n                    const markersToRemove = [];\n                    for (const marker of Array.from(newMarkers)) {\n                        if (!this._currentMarkers.has(marker)) {\n                            this._currentMarkers.add(marker);\n                            markersToAdd.push(marker);\n                        }\n                    }\n                    for (const marker of Array.from(this._currentMarkers)) {\n                        if (!newMarkers.has(marker)) {\n                            markersToRemove.push(marker);\n                        }\n                    }\n                    this.markerClusterer.addMarkers(markersToAdd, true);\n                    this.markerClusterer.removeMarkers(markersToRemove, true);\n                    this.markerClusterer.repaint();\n                    for (const marker of markersToRemove) {\n                        this._currentMarkers.delete(marker);\n                    }\n                });\n            });\n        });\n    }\n    _getInternalMarkers(markers) {\n        return Promise.all(markers.map(markerComponent => markerComponent._resolveMarker()));\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.markerClusterer) {\n                throw Error('Cannot interact with a MarkerClusterer before it has been initialized. ' +\n                    'Please wait for the MarkerClusterer to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapMarkerClusterer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapMarkerClusterer, isStandalone: true, selector: \"map-marker-clusterer\", inputs: { ariaLabelFn: \"ariaLabelFn\", averageCenter: \"averageCenter\", batchSize: \"batchSize\", batchSizeIE: \"batchSizeIE\", calculator: \"calculator\", clusterClass: \"clusterClass\", enableRetinaIcons: \"enableRetinaIcons\", gridSize: \"gridSize\", ignoreHidden: \"ignoreHidden\", imageExtension: \"imageExtension\", imagePath: \"imagePath\", imageSizes: \"imageSizes\", maxZoom: \"maxZoom\", minimumClusterSize: \"minimumClusterSize\", styles: \"styles\", title: \"title\", zIndex: \"zIndex\", zoomOnClick: \"zoomOnClick\", options: \"options\" }, outputs: { clusteringbegin: \"clusteringbegin\", clusteringend: \"clusteringend\", clusterClick: \"clusterClick\", markerClustererInitialized: \"markerClustererInitialized\" }, queries: [{ propertyName: \"_markers\", predicate: MapMarker, descendants: true }], exportAs: [\"mapMarkerClusterer\"], usesOnChanges: true, ngImport: i0, template: '<ng-content />', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapMarkerClusterer, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'map-marker-clusterer',\n                    exportAs: 'mapMarkerClusterer',\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                    standalone: true,\n                    template: '<ng-content />',\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { ariaLabelFn: [{\n                type: Input\n            }], averageCenter: [{\n                type: Input\n            }], batchSize: [{\n                type: Input\n            }], batchSizeIE: [{\n                type: Input\n            }], calculator: [{\n                type: Input\n            }], clusterClass: [{\n                type: Input\n            }], enableRetinaIcons: [{\n                type: Input\n            }], gridSize: [{\n                type: Input\n            }], ignoreHidden: [{\n                type: Input\n            }], imageExtension: [{\n                type: Input\n            }], imagePath: [{\n                type: Input\n            }], imageSizes: [{\n                type: Input\n            }], maxZoom: [{\n                type: Input\n            }], minimumClusterSize: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], zoomOnClick: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], clusteringbegin: [{\n                type: Output\n            }], clusteringend: [{\n                type: Output\n            }], clusterClick: [{\n                type: Output\n            }], _markers: [{\n                type: ContentChildren,\n                args: [MapMarker, { descendants: true }]\n            }], markerClustererInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polygon via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon\n */\nclass MapPolygon {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set paths(paths) {\n        this._paths.next(paths);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._paths = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.click\n         */\n        this.polygonClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dblclick\n         */\n        this.polygonDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.drag\n         */\n        this.polygonDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragend\n         */\n        this.polygonDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.dragstart\n         */\n        this.polygonDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousedown\n         */\n        this.polygonMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mousemove\n         */\n        this.polygonMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseout\n         */\n        this.polygonMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseover\n         */\n        this.polygonMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.mouseup\n         */\n        this.polygonMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.rightclick\n         */\n        this.polygonRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /** Event emitted when the polygon is initialized. */\n        this.polygonInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.Polygon && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.Polygon, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([\n                            this._map._resolveMap(),\n                            importLibrary('maps', 'Polygon'),\n                        ]).then(([map, polygonConstructor]) => {\n                            this._initialize(map, polygonConstructor, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, polygonConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.polygon = new polygonConstructor(options);\n            this._assertInitialized();\n            this.polygon.setMap(map);\n            this._eventManager.setTarget(this.polygon);\n            this.polygonInitialized.emit(this.polygon);\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.polygon?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polygon.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polygon.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polygon.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getPaths\n     */\n    getPaths() {\n        this._assertInitialized();\n        return this.polygon.getPaths();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polygon.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polygon.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._paths]).pipe(map(([options, paths]) => {\n            const combinedOptions = {\n                ...options,\n                paths: paths || options.paths,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polygon.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._paths.pipe(takeUntil(this._destroyed)).subscribe(paths => {\n            if (paths) {\n                this._assertInitialized();\n                this.polygon.setPaths(paths);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.polygon) {\n                throw Error('Cannot interact with a Google Map Polygon before it has been ' +\n                    'initialized. Please wait for the Polygon to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapPolygon, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapPolygon, isStandalone: true, selector: \"map-polygon\", inputs: { options: \"options\", paths: \"paths\" }, outputs: { polygonClick: \"polygonClick\", polygonDblclick: \"polygonDblclick\", polygonDrag: \"polygonDrag\", polygonDragend: \"polygonDragend\", polygonDragstart: \"polygonDragstart\", polygonMousedown: \"polygonMousedown\", polygonMousemove: \"polygonMousemove\", polygonMouseout: \"polygonMouseout\", polygonMouseover: \"polygonMouseover\", polygonMouseup: \"polygonMouseup\", polygonRightclick: \"polygonRightclick\", polygonInitialized: \"polygonInitialized\" }, exportAs: [\"mapPolygon\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapPolygon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polygon',\n                    exportAs: 'mapPolygon',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], paths: [{\n                type: Input\n            }], polygonClick: [{\n                type: Output\n            }], polygonDblclick: [{\n                type: Output\n            }], polygonDrag: [{\n                type: Output\n            }], polygonDragend: [{\n                type: Output\n            }], polygonDragstart: [{\n                type: Output\n            }], polygonMousedown: [{\n                type: Output\n            }], polygonMousemove: [{\n                type: Output\n            }], polygonMouseout: [{\n                type: Output\n            }], polygonMouseover: [{\n                type: Output\n            }], polygonMouseup: [{\n                type: Output\n            }], polygonRightclick: [{\n                type: Output\n            }], polygonInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Polyline via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline\n */\nclass MapPolyline {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set path(path) {\n        this._path.next(path);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._path = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.click\n         */\n        this.polylineClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dblclick\n         */\n        this.polylineDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.drag\n         */\n        this.polylineDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragend\n         */\n        this.polylineDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.dragstart\n         */\n        this.polylineDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousedown\n         */\n        this.polylineMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mousemove\n         */\n        this.polylineMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseout\n         */\n        this.polylineMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseover\n         */\n        this.polylineMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.mouseup\n         */\n        this.polylineMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.rightclick\n         */\n        this.polylineRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /** Event emitted when the polyline is initialized. */\n        this.polylineInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.Polyline && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.Polyline, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([\n                            this._map._resolveMap(),\n                            importLibrary('maps', 'Polyline'),\n                        ]).then(([map, polylineConstructor]) => {\n                            this._initialize(map, polylineConstructor, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, polylineConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.polyline = new polylineConstructor(options);\n            this._assertInitialized();\n            this.polyline.setMap(map);\n            this._eventManager.setTarget(this.polyline);\n            this.polylineInitialized.emit(this.polyline);\n            this._watchForOptionsChanges();\n            this._watchForPathChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.polyline?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.polyline.getDraggable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.polyline.getEditable();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getPath\n     */\n    getPath() {\n        this._assertInitialized();\n        return this.polyline.getPath();\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/polygon#Polyline.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.polyline.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._path]).pipe(map(([options, path]) => {\n            const combinedOptions = {\n                ...options,\n                path: path || options.path,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.polyline.setOptions(options);\n        });\n    }\n    _watchForPathChanges() {\n        this._path.pipe(takeUntil(this._destroyed)).subscribe(path => {\n            if (path) {\n                this._assertInitialized();\n                this.polyline.setPath(path);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.polyline) {\n                throw Error('Cannot interact with a Google Map Polyline before it has been ' +\n                    'initialized. Please wait for the Polyline to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapPolyline, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapPolyline, isStandalone: true, selector: \"map-polyline\", inputs: { options: \"options\", path: \"path\" }, outputs: { polylineClick: \"polylineClick\", polylineDblclick: \"polylineDblclick\", polylineDrag: \"polylineDrag\", polylineDragend: \"polylineDragend\", polylineDragstart: \"polylineDragstart\", polylineMousedown: \"polylineMousedown\", polylineMousemove: \"polylineMousemove\", polylineMouseout: \"polylineMouseout\", polylineMouseover: \"polylineMouseover\", polylineMouseup: \"polylineMouseup\", polylineRightclick: \"polylineRightclick\", polylineInitialized: \"polylineInitialized\" }, exportAs: [\"mapPolyline\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapPolyline, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-polyline',\n                    exportAs: 'mapPolyline',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], path: [{\n                type: Input\n            }], polylineClick: [{\n                type: Output\n            }], polylineDblclick: [{\n                type: Output\n            }], polylineDrag: [{\n                type: Output\n            }], polylineDragend: [{\n                type: Output\n            }], polylineDragstart: [{\n                type: Output\n            }], polylineMousedown: [{\n                type: Output\n            }], polylineMousemove: [{\n                type: Output\n            }], polylineMouseout: [{\n                type: Output\n            }], polylineMouseover: [{\n                type: Output\n            }], polylineMouseup: [{\n                type: Output\n            }], polylineRightclick: [{\n                type: Output\n            }], polylineInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Rectangle via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle\n */\nclass MapRectangle {\n    set options(options) {\n        this._options.next(options || {});\n    }\n    set bounds(bounds) {\n        this._bounds.next(bounds);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._eventManager = new MapEventManager(inject(NgZone));\n        this._options = new BehaviorSubject({});\n        this._bounds = new BehaviorSubject(undefined);\n        this._destroyed = new Subject();\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.boundsChanged\n         */ this.boundsChanged = this._eventManager.getLazyEmitter('bounds_changed');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.click\n         */\n        this.rectangleClick = this._eventManager.getLazyEmitter('click');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dblclick\n         */\n        this.rectangleDblclick = this._eventManager.getLazyEmitter('dblclick');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.drag\n         */\n        this.rectangleDrag = this._eventManager.getLazyEmitter('drag');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragend\n         */\n        this.rectangleDragend = this._eventManager.getLazyEmitter('dragend');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.dragstart\n         */\n        this.rectangleDragstart = this._eventManager.getLazyEmitter('dragstart');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousedown\n         */\n        this.rectangleMousedown = this._eventManager.getLazyEmitter('mousedown');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mousemove\n         */\n        this.rectangleMousemove = this._eventManager.getLazyEmitter('mousemove');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseout\n         */\n        this.rectangleMouseout = this._eventManager.getLazyEmitter('mouseout');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseover\n         */\n        this.rectangleMouseover = this._eventManager.getLazyEmitter('mouseover');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.mouseup\n         */\n        this.rectangleMouseup = this._eventManager.getLazyEmitter('mouseup');\n        /**\n         * See\n         * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.rightclick\n         */\n        this.rectangleRightclick = this._eventManager.getLazyEmitter('rightclick');\n        /** Event emitted when the rectangle is initialized. */\n        this.rectangleInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.Rectangle && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.Rectangle, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([\n                            this._map._resolveMap(),\n                            importLibrary('maps', 'Rectangle'),\n                        ]).then(([map, rectangleConstructor]) => {\n                            this._initialize(map, rectangleConstructor, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, rectangleConstructor, options) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.rectangle = new rectangleConstructor(options);\n            this._assertInitialized();\n            this.rectangle.setMap(map);\n            this._eventManager.setTarget(this.rectangle);\n            this.rectangleInitialized.emit(this.rectangle);\n            this._watchForOptionsChanges();\n            this._watchForBoundsChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._eventManager.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.rectangle?.setMap(null);\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getBounds\n     */\n    getBounds() {\n        this._assertInitialized();\n        return this.rectangle.getBounds();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getDraggable\n     */\n    getDraggable() {\n        this._assertInitialized();\n        return this.rectangle.getDraggable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getEditable\n     */\n    getEditable() {\n        this._assertInitialized();\n        return this.rectangle.getEditable();\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/polygon#Rectangle.getVisible\n     */\n    getVisible() {\n        this._assertInitialized();\n        return this.rectangle.getVisible();\n    }\n    _combineOptions() {\n        return combineLatest([this._options, this._bounds]).pipe(map(([options, bounds]) => {\n            const combinedOptions = {\n                ...options,\n                bounds: bounds || options.bounds,\n            };\n            return combinedOptions;\n        }));\n    }\n    _watchForOptionsChanges() {\n        this._options.pipe(takeUntil(this._destroyed)).subscribe(options => {\n            this._assertInitialized();\n            this.rectangle.setOptions(options);\n        });\n    }\n    _watchForBoundsChanges() {\n        this._bounds.pipe(takeUntil(this._destroyed)).subscribe(bounds => {\n            if (bounds) {\n                this._assertInitialized();\n                this.rectangle.setBounds(bounds);\n            }\n        });\n    }\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.rectangle) {\n                throw Error('Cannot interact with a Google Map Rectangle before it has been initialized. ' +\n                    'Please wait for the Rectangle to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapRectangle, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapRectangle, isStandalone: true, selector: \"map-rectangle\", inputs: { options: \"options\", bounds: \"bounds\" }, outputs: { boundsChanged: \"boundsChanged\", rectangleClick: \"rectangleClick\", rectangleDblclick: \"rectangleDblclick\", rectangleDrag: \"rectangleDrag\", rectangleDragend: \"rectangleDragend\", rectangleDragstart: \"rectangleDragstart\", rectangleMousedown: \"rectangleMousedown\", rectangleMousemove: \"rectangleMousemove\", rectangleMouseout: \"rectangleMouseout\", rectangleMouseover: \"rectangleMouseover\", rectangleMouseup: \"rectangleMouseup\", rectangleRightclick: \"rectangleRightclick\", rectangleInitialized: \"rectangleInitialized\" }, exportAs: [\"mapRectangle\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapRectangle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-rectangle',\n                    exportAs: 'mapRectangle',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { options: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], boundsChanged: [{\n                type: Output\n            }], rectangleClick: [{\n                type: Output\n            }], rectangleDblclick: [{\n                type: Output\n            }], rectangleDrag: [{\n                type: Output\n            }], rectangleDragend: [{\n                type: Output\n            }], rectangleDragstart: [{\n                type: Output\n            }], rectangleMousedown: [{\n                type: Output\n            }], rectangleMousemove: [{\n                type: Output\n            }], rectangleMouseout: [{\n                type: Output\n            }], rectangleMouseover: [{\n                type: Output\n            }], rectangleMouseup: [{\n                type: Output\n            }], rectangleRightclick: [{\n                type: Output\n            }], rectangleInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Traffic Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TrafficLayer\n */\nclass MapTrafficLayer {\n    /**\n     * Whether the traffic layer refreshes with updated information automatically.\n     */\n    set autoRefresh(autoRefresh) {\n        this._autoRefresh.next(autoRefresh);\n    }\n    constructor(_map, _ngZone) {\n        this._map = _map;\n        this._ngZone = _ngZone;\n        this._autoRefresh = new BehaviorSubject(true);\n        this._destroyed = new Subject();\n        /** Event emitted when the traffic layer is initialized. */\n        this.trafficLayerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            this._combineOptions()\n                .pipe(take(1))\n                .subscribe(options => {\n                if (google.maps.TrafficLayer && this._map.googleMap) {\n                    this._initialize(this._map.googleMap, google.maps.TrafficLayer, options);\n                }\n                else {\n                    this._ngZone.runOutsideAngular(() => {\n                        Promise.all([\n                            this._map._resolveMap(),\n                            importLibrary('maps', 'TrafficLayer'),\n                        ]).then(([map, layerConstructor]) => {\n                            this._initialize(map, layerConstructor, options);\n                        });\n                    });\n                }\n            });\n        }\n    }\n    _initialize(map, layerConstructor, options) {\n        this._ngZone.runOutsideAngular(() => {\n            this.trafficLayer = new layerConstructor(options);\n            this._assertInitialized();\n            this.trafficLayer.setMap(map);\n            this.trafficLayerInitialized.emit(this.trafficLayer);\n            this._watchForAutoRefreshChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.trafficLayer?.setMap(null);\n    }\n    _combineOptions() {\n        return this._autoRefresh.pipe(map(autoRefresh => {\n            const combinedOptions = { autoRefresh };\n            return combinedOptions;\n        }));\n    }\n    _watchForAutoRefreshChanges() {\n        this._combineOptions()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(options => {\n            this._assertInitialized();\n            this.trafficLayer.setOptions(options);\n        });\n    }\n    _assertInitialized() {\n        if (!this.trafficLayer) {\n            throw Error('Cannot interact with a Google Map Traffic Layer before it has been initialized. ' +\n                'Please wait for the Traffic Layer to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapTrafficLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapTrafficLayer, isStandalone: true, selector: \"map-traffic-layer\", inputs: { autoRefresh: \"autoRefresh\" }, outputs: { trafficLayerInitialized: \"trafficLayerInitialized\" }, exportAs: [\"mapTrafficLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapTrafficLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-traffic-layer',\n                    exportAs: 'mapTrafficLayer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { autoRefresh: [{\n                type: Input\n            }], trafficLayerInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular component that renders a Google Maps Transit Layer via the Google Maps JavaScript API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/map#TransitLayer\n */\nclass MapTransitLayer {\n    constructor() {\n        this._map = inject(GoogleMap);\n        this._zone = inject(NgZone);\n        /** Event emitted when the transit layer is initialized. */\n        this.transitLayerInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._map._isBrowser) {\n            if (google.maps.TransitLayer && this._map.googleMap) {\n                this._initialize(this._map.googleMap, google.maps.TransitLayer);\n            }\n            else {\n                this._zone.runOutsideAngular(() => {\n                    Promise.all([\n                        this._map._resolveMap(),\n                        importLibrary('maps', 'TransitLayer'),\n                    ]).then(([map, layerConstructor]) => {\n                        this._initialize(map, layerConstructor);\n                    });\n                });\n            }\n        }\n    }\n    _initialize(map, layerConstructor) {\n        this._zone.runOutsideAngular(() => {\n            this.transitLayer = new layerConstructor();\n            this.transitLayerInitialized.emit(this.transitLayer);\n            this._assertLayerInitialized();\n            this.transitLayer.setMap(map);\n        });\n    }\n    ngOnDestroy() {\n        this.transitLayer?.setMap(null);\n    }\n    _assertLayerInitialized() {\n        if (!this.transitLayer) {\n            throw Error('Cannot interact with a Google Map Transit Layer before it has been initialized. ' +\n                'Please wait for the Transit Layer to load before trying to interact with it.');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapTransitLayer, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapTransitLayer, isStandalone: true, selector: \"map-transit-layer\", outputs: { transitLayerInitialized: \"transitLayerInitialized\" }, exportAs: [\"mapTransitLayer\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapTransitLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-transit-layer',\n                    exportAs: 'mapTransitLayer',\n                    standalone: true,\n                }]\n        }], propDecorators: { transitLayerInitialized: [{\n                type: Output\n            }] } });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular directive that renders a Google Maps heatmap via the Google Maps JavaScript API.\n *\n * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n */\nclass MapHeatmapLayer {\n    /**\n     * Data shown on the heatmap.\n     * See: https://developers.google.com/maps/documentation/javascript/reference/visualization\n     */\n    set data(data) {\n        this._data = data;\n    }\n    /**\n     * Options used to configure the heatmap. See:\n     * developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayerOptions\n     */\n    set options(options) {\n        this._options = options;\n    }\n    constructor(_googleMap, _ngZone) {\n        this._googleMap = _googleMap;\n        this._ngZone = _ngZone;\n        /** Event emitted when the heatmap is initialized. */\n        this.heatmapInitialized = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this._googleMap._isBrowser) {\n            if (!window.google?.maps?.visualization &&\n                !window.google?.maps.importLibrary &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Namespace `google.maps.visualization` not found, cannot construct heatmap. ' +\n                    'Please install the Google Maps JavaScript API with the \"visualization\" library: ' +\n                    'https://developers.google.com/maps/documentation/javascript/visualization');\n            }\n            if (google.maps.visualization?.HeatmapLayer && this._googleMap.googleMap) {\n                this._initialize(this._googleMap.googleMap, google.maps.visualization.HeatmapLayer);\n            }\n            else {\n                this._ngZone.runOutsideAngular(() => {\n                    Promise.all([\n                        this._googleMap._resolveMap(),\n                        importLibrary('visualization', 'HeatmapLayer'),\n                    ]).then(([map, heatmapConstructor]) => {\n                        this._initialize(map, heatmapConstructor);\n                    });\n                });\n            }\n        }\n    }\n    _initialize(map, heatmapConstructor) {\n        // Create the object outside the zone so its events don't trigger change detection.\n        // We'll bring it back in inside the `MapEventManager` only for the events that the\n        // user has subscribed to.\n        this._ngZone.runOutsideAngular(() => {\n            this.heatmap = new heatmapConstructor(this._combineOptions());\n            this._assertInitialized();\n            this.heatmap.setMap(map);\n            this.heatmapInitialized.emit(this.heatmap);\n        });\n    }\n    ngOnChanges(changes) {\n        const { _data, heatmap } = this;\n        if (heatmap) {\n            if (changes['options']) {\n                heatmap.setOptions(this._combineOptions());\n            }\n            if (changes['data'] && _data !== undefined) {\n                heatmap.setData(this._normalizeData(_data));\n            }\n        }\n    }\n    ngOnDestroy() {\n        this.heatmap?.setMap(null);\n    }\n    /**\n     * Gets the data that is currently shown on the heatmap.\n     * See: developers.google.com/maps/documentation/javascript/reference/visualization#HeatmapLayer\n     */\n    getData() {\n        this._assertInitialized();\n        return this.heatmap.getData();\n    }\n    /** Creates a combined options object using the passed-in options and the individual inputs. */\n    _combineOptions() {\n        const options = this._options || {};\n        return {\n            ...options,\n            data: this._normalizeData(this._data || options.data || []),\n            map: this._googleMap.googleMap,\n        };\n    }\n    /**\n     * Most Google Maps APIs support both `LatLng` objects and `LatLngLiteral`. The latter is more\n     * convenient to write out, because the Google Maps API doesn't have to have been loaded in order\n     * to construct them. The `HeatmapLayer` appears to be an exception that only allows a `LatLng`\n     * object, or it throws a runtime error. Since it's more convenient and we expect that Angular\n     * users will load the API asynchronously, we allow them to pass in a `LatLngLiteral` and we\n     * convert it to a `LatLng` object before passing it off to Google Maps.\n     */\n    _normalizeData(data) {\n        const result = [];\n        data.forEach(item => {\n            result.push(isLatLngLiteral(item) ? new google.maps.LatLng(item.lat, item.lng) : item);\n        });\n        return result;\n    }\n    /** Asserts that the heatmap object has been initialized. */\n    _assertInitialized() {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!this.heatmap) {\n                throw Error('Cannot interact with a Google Map HeatmapLayer before it has been ' +\n                    'initialized. Please wait for the heatmap to load before trying to interact with it.');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapHeatmapLayer, deps: [{ token: GoogleMap }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", type: MapHeatmapLayer, isStandalone: true, selector: \"map-heatmap-layer\", inputs: { data: \"data\", options: \"options\" }, outputs: { heatmapInitialized: \"heatmapInitialized\" }, exportAs: [\"mapHeatmapLayer\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapHeatmapLayer, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'map-heatmap-layer',\n                    exportAs: 'mapHeatmapLayer',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: GoogleMap }, { type: i0.NgZone }], propDecorators: { data: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], heatmapInitialized: [{\n                type: Output\n            }] } });\n/** Asserts that an object is a `LatLngLiteral`. */\nfunction isLatLngLiteral(value) {\n    return value && typeof value.lat === 'number' && typeof value.lng === 'number';\n}\n\nconst COMPONENTS = [\n    GoogleMap,\n    MapBaseLayer,\n    MapBicyclingLayer,\n    MapCircle,\n    MapDirectionsRenderer,\n    MapGroundOverlay,\n    MapHeatmapLayer,\n    MapInfoWindow,\n    MapKmlLayer,\n    MapMarker,\n    MapMarkerClusterer,\n    MapPolygon,\n    MapPolyline,\n    MapRectangle,\n    MapTrafficLayer,\n    MapTransitLayer,\n];\nclass GoogleMapsModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: GoogleMapsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: GoogleMapsModule, imports: [GoogleMap,\n            MapBaseLayer,\n            MapBicyclingLayer,\n            MapCircle,\n            MapDirectionsRenderer,\n            MapGroundOverlay,\n            MapHeatmapLayer,\n            MapInfoWindow,\n            MapKmlLayer,\n            MapMarker,\n            MapMarkerClusterer,\n            MapPolygon,\n            MapPolyline,\n            MapRectangle,\n            MapTrafficLayer,\n            MapTransitLayer], exports: [GoogleMap,\n            MapBaseLayer,\n            MapBicyclingLayer,\n            MapCircle,\n            MapDirectionsRenderer,\n            MapGroundOverlay,\n            MapHeatmapLayer,\n            MapInfoWindow,\n            MapKmlLayer,\n            MapMarker,\n            MapMarkerClusterer,\n            MapPolygon,\n            MapPolyline,\n            MapRectangle,\n            MapTrafficLayer,\n            MapTransitLayer] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: GoogleMapsModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: GoogleMapsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: COMPONENTS,\n                    exports: COMPONENTS,\n                }]\n        }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps DirectionsService from the Google Maps JavaScript\n * API.\n *\n * See developers.google.com/maps/documentation/javascript/reference/directions#DirectionsService\n */\nclass MapDirectionsService {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See\n     * developers.google.com/maps/documentation/javascript/reference/directions\n     * #DirectionsService.route\n     */\n    route(request) {\n        return new Observable(observer => {\n            this._getService().then(service => {\n                service.route(request, (result, status) => {\n                    this._ngZone.run(() => {\n                        observer.next({ result: result || undefined, status });\n                        observer.complete();\n                    });\n                });\n            });\n        });\n    }\n    _getService() {\n        if (!this._directionsService) {\n            if (google.maps.DirectionsService) {\n                this._directionsService = new google.maps.DirectionsService();\n            }\n            else {\n                return importLibrary('routes', 'DirectionsService').then(serviceConstructor => {\n                    this._directionsService = new serviceConstructor();\n                    return this._directionsService;\n                });\n            }\n        }\n        return Promise.resolve(this._directionsService);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapDirectionsService, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapDirectionsService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapDirectionsService, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }] });\n\n/// <reference types=\"google.maps\" />\n/**\n * Angular service that wraps the Google Maps Geocoder from the Google Maps JavaScript API.\n * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder\n */\nclass MapGeocoder {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n    }\n    /**\n     * See developers.google.com/maps/documentation/javascript/reference/geocoder#Geocoder.geocode\n     */\n    geocode(request) {\n        return new Observable(observer => {\n            this._getGeocoder().then(geocoder => {\n                geocoder.geocode(request, (results, status) => {\n                    this._ngZone.run(() => {\n                        observer.next({ results: results || [], status });\n                        observer.complete();\n                    });\n                });\n            });\n        });\n    }\n    _getGeocoder() {\n        if (!this._geocoder) {\n            if (google.maps.Geocoder) {\n                this._geocoder = new google.maps.Geocoder();\n            }\n            else {\n                return importLibrary('geocoding', 'Geocoder').then(geocoderConstructor => {\n                    this._geocoder = new geocoderConstructor();\n                    return this._geocoder;\n                });\n            }\n        }\n        return Promise.resolve(this._geocoder);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapGeocoder, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapGeocoder, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.1.0-next.5\", ngImport: i0, type: MapGeocoder, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: () => [{ type: i0.NgZone }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMap, GoogleMapsModule, MapBaseLayer, MapBicyclingLayer, MapCircle, MapDirectionsRenderer, MapDirectionsService, MapEventManager, MapGeocoder, MapGroundOverlay, MapHeatmapLayer, MapInfoWindow, MapKmlLayer, MapMarker, MapMarkerClusterer, MapPolygon, MapPolyline, MapRectangle, MapTrafficLayer, MapTransitLayer };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}