{"ast":null,"code":"import { supportTickitData } from '../data/data/support-tickit/support-tickit';\nimport { BehaviorSubject, Subject, debounceTime, delay, of, switchMap, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst compare = (v1, v2) => v1 < v2 ? -1 : v1 > v2 ? 1 : 0;\nfunction sort(support, column, direction) {\n  if (direction === '' || column === '') {\n    return support;\n  } else {\n    return [...support].sort((a, b) => {\n      const res = compare(a[column], b[column]);\n      return direction === 'asc' ? res : -res;\n    });\n  }\n}\nfunction matches(tickit, term, pipe) {\n  return tickit.name.toLowerCase().includes(term.toLowerCase()) || tickit.position.toLowerCase().includes(term.toLowerCase()) || tickit.office.toLowerCase().includes(term.toLowerCase()) || tickit.email.toLowerCase().includes(term.toLowerCase()) || pipe.transform(tickit.salary).includes(term);\n}\nexport class SupportTicketService {\n  constructor(pipe) {\n    this.pipe = pipe;\n    this._loading$ = new BehaviorSubject(true);\n    this._search$ = new Subject();\n    this._support$ = new BehaviorSubject([]);\n    this._total$ = new BehaviorSubject(0);\n    this._state = {\n      page: 1,\n      pageSize: 10,\n      searchTerm: '',\n      sortColumn: '',\n      sortDirection: ''\n    };\n    this._search$.pipe(tap(() => this._loading$.next(true)), debounceTime(200), switchMap(() => this._search()), delay(200), tap(() => this._loading$.next(false))).subscribe(result => {\n      this._support$.next(result.support);\n      this._total$.next(result.total);\n    });\n    this._search$.next();\n  }\n  get support$() {\n    return this._support$.asObservable();\n  }\n  get total$() {\n    return this._total$.asObservable();\n  }\n  get loading$() {\n    return this._loading$.asObservable();\n  }\n  get page() {\n    return this._state.page;\n  }\n  get pageSize() {\n    return this._state.pageSize;\n  }\n  get searchTerm() {\n    return this._state.searchTerm;\n  }\n  set page(page) {\n    this._set({\n      page\n    });\n  }\n  set pageSize(pageSize) {\n    this._set({\n      pageSize\n    });\n  }\n  set searchTerm(searchTerm) {\n    this._set({\n      searchTerm\n    });\n  }\n  set sortColumn(sortColumn) {\n    this._set({\n      sortColumn\n    });\n  }\n  set sortDirection(sortDirection) {\n    this._set({\n      sortDirection\n    });\n  }\n  _set(patch) {\n    Object.assign(this._state, patch);\n    this._search$.next();\n  }\n  _search() {\n    const {\n      sortColumn,\n      sortDirection,\n      pageSize,\n      page,\n      searchTerm\n    } = this._state;\n    // 1. sort\n    let support = sort(supportTickitData, sortColumn, sortDirection);\n    // 2. filter\n    support = support.filter(country => matches(country, searchTerm, this.pipe));\n    const total = support.length;\n    // 3. paginate\n    support = support.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\n    return of({\n      support,\n      total\n    });\n  }\n  static #_ = this.ɵfac = function SupportTicketService_Factory(t) {\n    return new (t || SupportTicketService)(i0.ɵɵinject(i1.DecimalPipe));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SupportTicketService,\n    factory: SupportTicketService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["supportTickitData","BehaviorSubject","Subject","debounceTime","delay","of","switchMap","tap","compare","v1","v2","sort","support","column","direction","a","b","res","matches","tickit","term","pipe","name","toLowerCase","includes","position","office","email","transform","salary","SupportTicketService","constructor","_loading$","_search$","_support$","_total$","_state","page","pageSize","searchTerm","sortColumn","sortDirection","next","_search","subscribe","result","total","support$","asObservable","total$","loading$","_set","patch","Object","assign","filter","country","length","slice","_","i0","ɵɵinject","i1","DecimalPipe","_2","factory","ɵfac","providedIn"],"sources":["C:\\Repository\\Jupiter\\juno-app\\src\\app\\shared\\services\\support-ticket.service.ts"],"sourcesContent":["import { Injectable, PipeTransform } from '@angular/core';\nimport { supportTickitData, supportDB } from '../data/data/support-tickit/support-tickit';\nimport { SortColumn, SortDirection } from '../directive/support-ticket.directive';\nimport { BehaviorSubject, Observable, Subject, debounceTime, delay, of, switchMap, tap } from 'rxjs';\nimport { DecimalPipe } from '@angular/common';\n\n\ninterface SearchResult {\n\tsupport: supportDB[];\n\ttotal: number;\n}\n\ninterface State {\n\tpage: number;\n\tpageSize: number;\n\tsearchTerm: string;\n\tsortColumn: SortColumn;\n\tsortDirection: SortDirection;\n}\n\nconst compare = (v1: string | number, v2: string | number) => (v1 < v2 ? -1 : v1 > v2 ? 1 : 0);\n\nfunction sort(support: supportDB[], column: SortColumn, direction: string): supportDB[] {\n\tif (direction === '' || column === '') {\n\t\treturn support;\n\t} else {\n\t\treturn [...support].sort((a : any, b : any) => {\n\t\t\tconst res = compare(a[column], b[column]);\n\t\t\treturn direction === 'asc' ? res : -res;\n\t\t});\n\t}\n}\n\nfunction matches(tickit: supportDB, term: string, pipe: PipeTransform) {\n\treturn (\n\t\ttickit.name.toLowerCase().includes(term.toLowerCase()) ||\n    tickit.position.toLowerCase().includes(term.toLowerCase()) ||\n    tickit.office.toLowerCase().includes(term.toLowerCase()) ||\n    tickit.email.toLowerCase().includes(term.toLowerCase()) ||\n\t\tpipe.transform(tickit.salary).includes(term)\n\t);\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SupportTicketService {\n\n  private _loading$ = new BehaviorSubject<boolean>(true);\n  private _search$ = new Subject<void>();\n  private _support$ = new BehaviorSubject<supportDB[]>([]);\n  private _total$ = new BehaviorSubject<number>(0);\n\n  private _state: State = {\n    page: 1,\n    pageSize: 10,\n    searchTerm: '',\n    sortColumn: '',\n    sortDirection: '',\n  };\n\n  constructor( private pipe: DecimalPipe) {\n    this._search$\n        .pipe(\n          tap(() => this._loading$.next(true)),\n          debounceTime(200),\n          switchMap(() => this._search()),\n          delay(200),\n          tap(() => this._loading$.next(false)),\n        )\n        .subscribe((result) => {\n          this._support$.next(result.support);\n          this._total$.next(result.total);\n        });\n  \n      this._search$.next();\n   }\n\n   get support$() {\n    return this._support$.asObservable();\n  }\n  get total$() {\n    return this._total$.asObservable();\n  }\n  get loading$() {\n    return this._loading$.asObservable();\n  }\n  get page() {\n    return this._state.page;\n  }\n  get pageSize() {\n    return this._state.pageSize;\n  }\n  get searchTerm() {\n    return this._state.searchTerm;\n  }\n\n  set page(page: number) {\n    this._set({ page });\n  }\n  set pageSize(pageSize: number) {\n    this._set({ pageSize });\n  }\n  set searchTerm(searchTerm: string) {\n    this._set({ searchTerm });\n  }\n  set sortColumn(sortColumn: SortColumn) {\n    this._set({ sortColumn });\n  }\n  set sortDirection(sortDirection: SortDirection) {\n    this._set({ sortDirection });\n  }\n\n  private _set(patch: Partial<State>) {\n    Object.assign(this._state, patch);\n    this._search$.next();\n  }\n\n  private _search(): Observable<SearchResult> {\n    const { sortColumn, sortDirection, pageSize, page, searchTerm } = this._state;\n\n    // 1. sort\n    let support = sort(supportTickitData, sortColumn, sortDirection);\n\n    // 2. filter\n    support = support.filter((country) => matches(country, searchTerm, this.pipe));\n    const total = support.length;\n\n    // 3. paginate\n    support = support.slice((page - 1) * pageSize, (page - 1) * pageSize + pageSize);\n    return of({ support, total });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}