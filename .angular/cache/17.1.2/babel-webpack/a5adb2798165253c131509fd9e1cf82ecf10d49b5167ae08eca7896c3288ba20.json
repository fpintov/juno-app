{"ast":null,"code":"import _asyncToGenerator from \"C:/Repository/Jupiter/juno-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { Pipe, Injectable, Directive, Input, EventEmitter, Component, Output, ViewChild, HostBinding, HostListener, TemplateRef, ContentChildren, forwardRef, ContentChild, ViewChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { FormControl, FormGroup, NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from 'ng2-material-dropdown';\nimport { Ng2Dropdown, Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { filter as filter$1, map, first as first$1, debounceTime as debounceTime$1 } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport { first, distinctUntilChanged, debounceTime, filter } from 'rxjs/operators';\nconst _c0 = [\"input\"];\nfunction TagComponent_div_1_ng_template_1_Template(rf, ctx) {}\nconst _c1 = (a0, a1) => ({\n  item: a0,\n  index: a1\n});\nfunction TagComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TagComponent_div_1_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"contenteditable\", ctx_r0.editing);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(3, _c1, ctx_r0.model, ctx_r0.index))(\"ngTemplateOutlet\", ctx_r0.template);\n  }\n}\nfunction TagComponent_div_2_delete_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"delete-icon\", 8);\n    i0.ɵɵlistener(\"click\", function TagComponent_div_2_delete_icon_3_Template_delete_icon_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.remove($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TagComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6);\n    i0.ɵɵlistener(\"keydown.enter\", function TagComponent_div_2_Template_div_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.disableEditMode($event));\n    })(\"keydown.escape\", function TagComponent_div_2_Template_div_keydown_escape_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.disableEditMode($event));\n    })(\"click\", function TagComponent_div_2_Template_div_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.editing ? $event.stopPropagation() : undefined);\n    })(\"blur\", function TagComponent_div_2_Template_div_blur_1_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onBlurred($event));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, TagComponent_div_2_delete_icon_3_Template, 1, 0, \"delete-icon\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵattribute(\"contenteditable\", ctx_r1.editing)(\"title\", ctx_r1.getDisplayValue(ctx_r1.model));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getDisplayValue(ctx_r1.model), \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isDeleteIconVisible());\n  }\n}\nfunction TagComponent_tag_ripple_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tag-ripple\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"state\", ctx_r2.rippleState);\n    i0.ɵɵattribute(\"tabindex\", -1);\n  }\n}\nfunction TagInputDropdown_ng2_menu_item_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 6);\n    i0.ɵɵpipe(1, \"highlight\");\n  }\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(1, 1, item_r1[ctx_r4.displayBy], ctx_r4.tagInput.inputForm.value.value), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction TagInputDropdown_ng2_menu_item_2_2_ng_template_0_Template(rf, ctx) {}\nconst _c2 = (a0, a1, a2) => ({\n  item: a0,\n  index: a1,\n  last: a2\n});\nfunction TagInputDropdown_ng2_menu_item_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TagInputDropdown_ng2_menu_item_2_2_ng_template_0_Template, 0, 0, \"ng-template\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    const item_r1 = ctx_r8.$implicit;\n    const index_r2 = ctx_r8.index;\n    const last_r3 = ctx_r8.last;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.templates.first)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(2, _c2, item_r1, index_r2, last_r3));\n  }\n}\nfunction TagInputDropdown_ng2_menu_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng2-menu-item\", 3);\n    i0.ɵɵtemplate(1, TagInputDropdown_ng2_menu_item_2_span_1_Template, 2, 4, \"span\", 4)(2, TagInputDropdown_ng2_menu_item_2_2_Template, 1, 6, null, 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", item_r1)(\"ngSwitch\", !!ctx_r0.templates.length);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngSwitchCase\", false);\n  }\n}\nfunction TagInputComponent_tag_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tag\", 6);\n    i0.ɵɵlistener(\"onSelect\", function TagInputComponent_tag_2_Template_tag_onSelect_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.selectItem(item_r3));\n    })(\"onRemove\", function TagInputComponent_tag_2_Template_tag_onRemove_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r3 = restoredCtx.$implicit;\n      const i_r4 = restoredCtx.index;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onRemoveRequested(item_r3, i_r4));\n    })(\"onKeyDown\", function TagInputComponent_tag_2_Template_tag_onKeyDown_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.handleKeydown($event));\n    })(\"onTagEdited\", function TagInputComponent_tag_2_Template_tag_onTagEdited_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.updateEditedTag($event));\n    })(\"onBlur\", function TagInputComponent_tag_2_Template_tag_onBlur_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onTagBlurred($event, i_r4));\n    })(\"dragstart\", function TagInputComponent_tag_2_Template_tag_dragstart_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const item_r3 = restoredCtx.$implicit;\n      const i_r4 = restoredCtx.index;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.dragZone ? ctx_r11.onDragStarted($event, item_r3, i_r4) : undefined);\n    })(\"drop\", function TagInputComponent_tag_2_Template_tag_drop_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.dragZone ? ctx_r12.onTagDropped($event, i_r4) : undefined);\n    })(\"dragenter\", function TagInputComponent_tag_2_Template_tag_dragenter_0_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.dragZone ? ctx_r13.onDragOver($event) : undefined);\n    })(\"dragover\", function TagInputComponent_tag_2_Template_tag_dragover_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.dragZone ? ctx_r14.onDragOver($event, i_r4) : undefined);\n    })(\"dragleave\", function TagInputComponent_tag_2_Template_tag_dragleave_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.dragZone ? ctx_r15.dragProvider.onDragEnd() : undefined);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate(\"draggable\", ctx_r0.editable);\n    i0.ɵɵproperty(\"canAddTag\", ctx_r0.isTagValid)(\"disabled\", ctx_r0.disable)(\"@animation\", ctx_r0.animationMetadata)(\"hasRipple\", ctx_r0.ripple)(\"index\", i_r4)(\"removable\", ctx_r0.removable)(\"editable\", ctx_r0.editable)(\"displayBy\", ctx_r0.displayBy)(\"identifyBy\", ctx_r0.identifyBy)(\"template\", !!ctx_r0.hasCustomTemplate() ? ctx_r0.templates.first : undefined)(\"draggable\", ctx_r0.dragZone)(\"model\", item_r3);\n    i0.ɵɵattribute(\"tabindex\", 0);\n  }\n}\nfunction TagInputComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction TagInputComponent_div_6_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 10)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const error_r17 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(error_r17);\n  }\n}\nfunction TagInputComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, TagInputComponent_div_6_p_1_Template, 3, 1, \"p\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r2.theme);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.errors);\n  }\n}\nconst _c3 = [\"*\"];\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\nclass HighlightPipe {\n  /**\n   * @name transform\n   * @param value {string}\n   * @param arg {string}\n   */\n  transform(value, arg) {\n    if (!arg.trim()) {\n      return value;\n    }\n    try {\n      const regex = new RegExp(`(${escape(arg)})`, 'i');\n      return value.replace(regex, '<b>$1</b>');\n    } catch (e) {\n      return value;\n    }\n  }\n}\nHighlightPipe.ɵfac = function HighlightPipe_Factory(t) {\n  return new (t || HighlightPipe)();\n};\nHighlightPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"highlight\",\n  type: HighlightPipe,\n  pure: true\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HighlightPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'highlight'\n    }]\n  }], null, null);\n})();\n\n/*\n** constants and default values for <tag-input>\n */\nconst PLACEHOLDER = '+ Tag';\nconst SECONDARY_PLACEHOLDER = 'Enter a new tag';\nconst KEYDOWN = 'keydown';\nconst KEYUP = 'keyup';\nconst FOCUS = 'focus';\nconst MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\nconst ACTIONS_KEYS = {\n  DELETE: 'DELETE',\n  SWITCH_PREV: 'SWITCH_PREV',\n  SWITCH_NEXT: 'SWITCH_NEXT',\n  TAB: 'TAB'\n};\nconst KEY_PRESS_ACTIONS = {\n  8: ACTIONS_KEYS.DELETE,\n  46: ACTIONS_KEYS.DELETE,\n  37: ACTIONS_KEYS.SWITCH_PREV,\n  39: ACTIONS_KEYS.SWITCH_NEXT,\n  9: ACTIONS_KEYS.TAB\n};\nconst DRAG_AND_DROP_KEY = 'Text';\nconst NEXT = 'NEXT';\nconst PREV = 'PREV';\nclass DragProvider {\n  constructor() {\n    this.state = {\n      dragging: false,\n      dropping: false,\n      index: undefined\n    };\n  }\n  /**\n   * @name setDraggedItem\n   * @param event\n   * @param tag\n   */\n  setDraggedItem(event, tag) {\n    if (event && event.dataTransfer) {\n      event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n    }\n  }\n  /**\n   * @name getDraggedItem\n   * @param event\n   */\n  getDraggedItem(event) {\n    if (event && event.dataTransfer) {\n      const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n      try {\n        return JSON.parse(data);\n      } catch {\n        return;\n      }\n    }\n  }\n  /**\n   * @name setSender\n   * @param sender\n   */\n  setSender(sender) {\n    this.sender = sender;\n  }\n  /**\n   * @name setReceiver\n   * @param receiver\n   */\n  setReceiver(receiver) {\n    this.receiver = receiver;\n  }\n  /**\n   * @name onTagDropped\n   * @param tag\n   * @param indexDragged\n   * @param indexDropped\n   */\n  onTagDropped(tag, indexDragged, indexDropped) {\n    this.onDragEnd();\n    this.sender.onRemoveRequested(tag, indexDragged);\n    this.receiver.onAddingRequested(false, tag, indexDropped);\n  }\n  /**\n   * @name setState\n   * @param state\n   */\n  setState(state) {\n    this.state = {\n      ...this.state,\n      ...state\n    };\n  }\n  /**\n   * @name getState\n   * @param key\n   */\n  getState(key) {\n    return key ? this.state[key] : this.state;\n  }\n  /**\n   * @name onDragEnd\n   */\n  onDragEnd() {\n    this.setState({\n      dragging: false,\n      dropping: false,\n      index: undefined\n    });\n  }\n}\nDragProvider.ɵfac = function DragProvider_Factory(t) {\n  return new (t || DragProvider)();\n};\nDragProvider.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DragProvider,\n  factory: DragProvider.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DragProvider, [{\n    type: Injectable\n  }], null, null);\n})();\nconst defaults = {\n  tagInput: {\n    separatorKeys: [],\n    separatorKeyCodes: [],\n    maxItems: Infinity,\n    placeholder: PLACEHOLDER,\n    secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n    validators: [],\n    asyncValidators: [],\n    onlyFromAutocomplete: false,\n    errorMessages: {},\n    theme: '',\n    onTextChangeDebounce: 250,\n    inputId: null,\n    inputClass: '',\n    clearOnBlur: false,\n    hideForm: false,\n    addOnBlur: false,\n    addOnPaste: false,\n    pasteSplitPattern: ',',\n    blinkIfDupe: true,\n    removable: true,\n    editable: false,\n    allowDupes: false,\n    modelAsStrings: false,\n    trimTags: true,\n    ripple: true,\n    tabIndex: '',\n    disable: false,\n    dragZone: '',\n    onRemoving: undefined,\n    onAdding: undefined,\n    displayBy: 'display',\n    identifyBy: 'value',\n    animationDuration: {\n      enter: '250ms',\n      leave: '150ms'\n    }\n  },\n  dropdown: {\n    displayBy: 'display',\n    identifyBy: 'value',\n    appendToBody: true,\n    offset: '50 0',\n    focusFirstElement: false,\n    showDropdownIfEmpty: false,\n    minimumTextLength: 1,\n    limitItemsTo: Infinity,\n    keepOpen: true,\n    dynamicUpdate: true,\n    zIndex: 1000,\n    matchingFn\n  }\n};\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(value, target) {\n  const targetValue = target[this.displayBy].toString();\n  return targetValue && targetValue.toLowerCase().indexOf(value.toLowerCase()) >= 0;\n}\nclass OptionsProvider {\n  setOptions(options) {\n    OptionsProvider.defaults.tagInput = {\n      ...defaults.tagInput,\n      ...options.tagInput\n    };\n    OptionsProvider.defaults.dropdown = {\n      ...defaults.dropdown,\n      ...options.dropdown\n    };\n  }\n}\nOptionsProvider.defaults = defaults;\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\nclass TagInputAccessor {\n  constructor() {\n    this._items = [];\n    /**\n     * @name displayBy\n     */\n    this.displayBy = OptionsProvider.defaults.tagInput.displayBy;\n    /**\n     * @name identifyBy\n     */\n    this.identifyBy = OptionsProvider.defaults.tagInput.identifyBy;\n  }\n  get items() {\n    return this._items;\n  }\n  set items(items) {\n    this._items = items;\n    this._onChangeCallback(this._items);\n  }\n  onTouched() {\n    this._onTouchedCallback();\n  }\n  writeValue(items) {\n    this._items = items || [];\n  }\n  registerOnChange(fn) {\n    this._onChangeCallback = fn;\n  }\n  registerOnTouched(fn) {\n    this._onTouchedCallback = fn;\n  }\n  /**\n   * @name getItemValue\n   * @param item\n   * @param fromDropdown\n   */\n  getItemValue(item, fromDropdown = false) {\n    const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n    return isObject(item) ? item[property] : item;\n  }\n  /**\n   * @name getItemDisplay\n   * @param item\n   * @param fromDropdown\n   */\n  getItemDisplay(item, fromDropdown = false) {\n    const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n    return isObject(item) ? item[property] : item;\n  }\n  /**\n   * @name getItemsWithout\n   * @param index\n   */\n  getItemsWithout(index) {\n    return this.items.filter((item, position) => position !== index);\n  }\n}\nTagInputAccessor.ɵfac = function TagInputAccessor_Factory(t) {\n  return new (t || TagInputAccessor)();\n};\nTagInputAccessor.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TagInputAccessor,\n  inputs: {\n    displayBy: \"displayBy\",\n    identifyBy: \"identifyBy\"\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagInputAccessor, [{\n    type: Directive\n  }], null, {\n    displayBy: [{\n      type: Input\n    }],\n    identifyBy: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nfunction listen(listenerType, action, condition = true) {\n  // if the event provided does not exist, throw an error\n  if (!this.listeners.hasOwnProperty(listenerType)) {\n    throw new Error('The event entered may be wrong');\n  }\n  // if a condition is present and is false, exit early\n  if (!condition) {\n    return;\n  }\n  // fire listener\n  this.listeners[listenerType].push(action);\n}\nclass TagInputForm {\n  constructor() {\n    /**\n     * @name onSubmit\n     */\n    this.onSubmit = new EventEmitter();\n    /**\n     * @name onBlur\n     */\n    this.onBlur = new EventEmitter();\n    /**\n     * @name onFocus\n     */\n    this.onFocus = new EventEmitter();\n    /**\n     * @name onKeyup\n     */\n    this.onKeyup = new EventEmitter();\n    /**\n     * @name onKeydown\n     */\n    this.onKeydown = new EventEmitter();\n    /**\n     * @name inputTextChange\n     */\n    this.inputTextChange = new EventEmitter();\n    /**\n     * @name validators\n     */\n    this.validators = [];\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    this.asyncValidators = [];\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    this.tabindex = '';\n    /**\n     * @name disabled\n     */\n    this.disabled = false;\n    this.item = new FormControl({\n      value: '',\n      disabled: this.disabled\n    });\n  }\n  /**\n   * @name inputText\n   */\n  get inputText() {\n    return this.item.value;\n  }\n  /**\n   * @name inputText\n   * @param text {string}\n   */\n  set inputText(text) {\n    this.item.setValue(text);\n    this.inputTextChange.emit(text);\n  }\n  ngOnInit() {\n    this.item.setValidators(this.validators);\n    this.item.setAsyncValidators(this.asyncValidators);\n    // creating form\n    this.form = new FormGroup({\n      item: this.item\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes.disabled && !changes.disabled.firstChange) {\n      if (changes.disabled.currentValue) {\n        this.form.controls['item'].disable();\n      } else {\n        this.form.controls['item'].enable();\n      }\n    }\n  }\n  /**\n   * @name value\n   */\n  get value() {\n    return this.form.get('item');\n  }\n  /**\n   * @name isInputFocused\n   */\n  isInputFocused() {\n    const doc = typeof document !== 'undefined' ? document : undefined;\n    return doc ? doc.activeElement === this.input.nativeElement : false;\n  }\n  /**\n   * @name getErrorMessages\n   * @param messages\n   */\n  getErrorMessages(messages) {\n    return Object.keys(messages).filter(err => this.value.hasError(err)).map(err => messages[err]);\n  }\n  /**\n   * @name hasErrors\n   */\n  hasErrors() {\n    const {\n      dirty,\n      value,\n      valid\n    } = this.form;\n    return dirty && value.item && !valid;\n  }\n  /**\n   * @name focus\n   */\n  focus() {\n    this.input.nativeElement.focus();\n  }\n  /**\n   * @name blur\n   */\n  blur() {\n    this.input.nativeElement.blur();\n  }\n  /**\n   * @name getElementPosition\n   */\n  getElementPosition() {\n    return this.input.nativeElement.getBoundingClientRect();\n  }\n  /**\n   * - removes input from the component\n   * @name destroy\n   */\n  destroy() {\n    const input = this.input.nativeElement;\n    input.parentElement.removeChild(input);\n  }\n  /**\n   * @name onKeyDown\n   * @param $event\n   */\n  onKeyDown($event) {\n    this.inputText = this.value.value;\n    if ($event.key === 'Enter') {\n      this.submit($event);\n    } else {\n      return this.onKeydown.emit($event);\n    }\n  }\n  /**\n   * @name onKeyUp\n   * @param $event\n   */\n  onKeyUp($event) {\n    this.inputText = this.value.value;\n    return this.onKeyup.emit($event);\n  }\n  /**\n   * @name submit\n   */\n  submit($event) {\n    $event.preventDefault();\n    this.onSubmit.emit($event);\n  }\n}\nTagInputForm.ɵfac = function TagInputForm_Factory(t) {\n  return new (t || TagInputForm)();\n};\nTagInputForm.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TagInputForm,\n  selectors: [[\"tag-input-form\"]],\n  viewQuery: function TagInputForm_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  inputs: {\n    placeholder: \"placeholder\",\n    validators: \"validators\",\n    asyncValidators: \"asyncValidators\",\n    inputId: \"inputId\",\n    inputClass: \"inputClass\",\n    tabindex: \"tabindex\",\n    disabled: \"disabled\",\n    inputText: \"inputText\"\n  },\n  outputs: {\n    onSubmit: \"onSubmit\",\n    onBlur: \"onBlur\",\n    onFocus: \"onFocus\",\n    onKeyup: \"onKeyup\",\n    onKeydown: \"onKeydown\",\n    inputTextChange: \"inputTextChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"minlength\", \"1\", \"formControlName\", \"item\", 1, \"ng2-tag-input__text-input\", 3, \"tabindex\", \"ngClass\", \"focus\", \"blur\", \"keydown\", \"keyup\"], [\"input\", \"\"]],\n  template: function TagInputForm_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function TagInputForm_Template_form_ngSubmit_0_listener($event) {\n        return ctx.submit($event);\n      });\n      i0.ɵɵelementStart(1, \"input\", 1, 2);\n      i0.ɵɵlistener(\"focus\", function TagInputForm_Template_input_focus_1_listener($event) {\n        return ctx.onFocus.emit($event);\n      })(\"blur\", function TagInputForm_Template_input_blur_1_listener($event) {\n        return ctx.onBlur.emit($event);\n      })(\"keydown\", function TagInputForm_Template_input_keydown_1_listener($event) {\n        return ctx.onKeyDown($event);\n      })(\"keyup\", function TagInputForm_Template_input_keyup_1_listener($event) {\n        return ctx.onKeyUp($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance();\n      i0.ɵɵpropertyInterpolate(\"tabindex\", ctx.disabled ? -1 : ctx.tabindex ? ctx.tabindex : 0);\n      i0.ɵɵproperty(\"ngClass\", ctx.inputClass);\n      i0.ɵɵattribute(\"id\", ctx.inputId)(\"placeholder\", ctx.placeholder)(\"aria-label\", ctx.placeholder)(\"tabindex\", ctx.tabindex)(\"disabled\", ctx.disabled ? ctx.disabled : null);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.MinLengthValidator, i1.NgControlStatus, i1.FormControlName, i2.NgClass],\n  styles: [\".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}.ng2-tag-input__text-input[_ngcontent-%COMP%]{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,Helvetica Neue,sans-serif}.ng2-tag-input__text-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input__text-input[disabled=true][_ngcontent-%COMP%]{opacity:.5;background:#fff}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagInputForm, [{\n    type: Component,\n    args: [{\n      selector: 'tag-input-form',\n      template: \"<!-- form -->\\n<form (ngSubmit)=\\\"submit($event)\\\" [formGroup]=\\\"form\\\">\\n    <input #input\\n\\n           type=\\\"text\\\"\\n           class=\\\"ng2-tag-input__text-input\\\"\\n           autocomplete=\\\"off\\\"\\n           tabindex=\\\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\\\"\\n           minlength=\\\"1\\\"\\n           formControlName=\\\"item\\\"\\n\\n           [ngClass]=\\\"inputClass\\\"\\n           [attr.id]=\\\"inputId\\\"\\n           [attr.placeholder]=\\\"placeholder\\\"\\n           [attr.aria-label]=\\\"placeholder\\\"\\n           [attr.tabindex]=\\\"tabindex\\\"\\n           [attr.disabled]=\\\"disabled ? disabled : null\\\"\\n\\n           (focus)=\\\"onFocus.emit($event)\\\"\\n           (blur)=\\\"onBlur.emit($event)\\\"\\n           (keydown)=\\\"onKeyDown($event)\\\"\\n           (keyup)=\\\"onKeyUp($event)\\\"\\n    />\\n</form>\\n\",\n      styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.ng2-tag-input__text-input{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,Helvetica Neue,sans-serif}.ng2-tag-input__text-input:focus{outline:0}.ng2-tag-input__text-input[disabled=true]{opacity:.5;background:#fff}\\n\"]\n    }]\n  }], null, {\n    onSubmit: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onKeyup: [{\n      type: Output\n    }],\n    onKeydown: [{\n      type: Output\n    }],\n    inputTextChange: [{\n      type: Output\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    validators: [{\n      type: Input\n    }],\n    asyncValidators: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    inputText: [{\n      type: Input\n    }]\n  });\n})();\nclass TagRipple {\n  constructor() {\n    this.state = 'none';\n  }\n}\nTagRipple.ɵfac = function TagRipple_Factory(t) {\n  return new (t || TagRipple)();\n};\nTagRipple.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TagRipple,\n  selectors: [[\"tag-ripple\"]],\n  inputs: {\n    state: \"state\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[1, \"tag-ripple\"]],\n  template: function TagRipple_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@ink\", ctx.state);\n    }\n  },\n  styles: [\"[_nghost-%COMP%]{width:100%;height:100%;left:0;overflow:hidden;position:absolute}.tag-ripple[_ngcontent-%COMP%]{background:rgba(0,0,0,.1);top:50%;left:50%;height:100%;transform:translate(-50%,-50%);position:absolute}\"],\n  data: {\n    animation: [trigger('ink', [state('none', style({\n      width: 0,\n      opacity: 0\n    })), transition('none => clicked', [animate(300, keyframes([style({\n      opacity: 1,\n      offset: 0,\n      width: '30%',\n      borderRadius: '100%'\n    }), style({\n      opacity: 1,\n      offset: 0.5,\n      width: '50%'\n    }), style({\n      opacity: 0.5,\n      offset: 1,\n      width: '100%',\n      borderRadius: '16px'\n    })]))])])]\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagRipple, [{\n    type: Component,\n    args: [{\n      selector: 'tag-ripple',\n      styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n      template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n      animations: [trigger('ink', [state('none', style({\n        width: 0,\n        opacity: 0\n      })), transition('none => clicked', [animate(300, keyframes([style({\n        opacity: 1,\n        offset: 0,\n        width: '30%',\n        borderRadius: '100%'\n      }), style({\n        opacity: 1,\n        offset: 0.5,\n        width: '50%'\n      }), style({\n        opacity: 0.5,\n        offset: 1,\n        width: '100%',\n        borderRadius: '16px'\n      })]))])])]\n    }]\n  }], null, {\n    state: [{\n      type: Input\n    }]\n  });\n})();\nclass DeleteIconComponent {}\nDeleteIconComponent.ɵfac = function DeleteIconComponent_Factory(t) {\n  return new (t || DeleteIconComponent)();\n};\nDeleteIconComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DeleteIconComponent,\n  selectors: [[\"delete-icon\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[\"height\", \"16px\", \"viewBox\", \"0 0 32 32\", \"width\", \"16px\"], [\"d\", \"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\", \"fill\", \"#121313\"]],\n  template: function DeleteIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\");\n      i0.ɵɵnamespaceSVG();\n      i0.ɵɵelementStart(1, \"svg\", 0);\n      i0.ɵɵelement(2, \"path\", 1);\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}delete-icon[_nghost-%COMP%]{width:20px;height:16px;transition:all .15s;display:inline-block;text-align:right}delete-icon[_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#444}delete-icon[_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}delete-icon[_nghost-%COMP%]:hover{transform:scale(1.5) translateY(-3px)}.dark[_nghost-%COMP%], .dark   [_nghost-%COMP%]{text-align:right}.dark[_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.dark[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .dark   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}.minimal[_nghost-%COMP%], .minimal   [_nghost-%COMP%]{text-align:right}.minimal[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#444}.minimal[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .minimal   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}.bootstrap[_nghost-%COMP%], .bootstrap   [_nghost-%COMP%]{text-align:right}.bootstrap[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.bootstrap[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .bootstrap   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}tag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%], tag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.dark   tag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   tag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#000}.minimal   tag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   tag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#000}.bootstrap   tag:focus[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   tag:active[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.bootstrap3-info[_nghost-%COMP%], .bootstrap3-info   [_nghost-%COMP%]{height:inherit}.bootstrap3-info[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap3-info   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DeleteIconComponent, [{\n    type: Component,\n    args: [{\n      selector: 'delete-icon',\n      template: \"<span>\\n    <svg\\n        height=\\\"16px\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        width=\\\"16px\\\"\\n    >\\n        <path\\n            d=\\\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\\\"\\n            fill=\\\"#121313\\\"\\n        />\\n    </svg>\\n</span>\",\n      styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}:host(delete-icon){width:20px;height:16px;transition:all .15s;display:inline-block;text-align:right}:host(delete-icon) path{fill:#444}:host(delete-icon) svg{vertical-align:bottom;height:34px}:host(delete-icon):hover{transform:scale(1.5) translateY(-3px)}:host-context(.dark){text-align:right}:host-context(.dark) path{fill:#fff}:host-context(.dark) svg{vertical-align:bottom;height:34px}:host-context(.minimal){text-align:right}:host-context(.minimal) path{fill:#444}:host-context(.minimal) svg{vertical-align:bottom;height:34px}:host-context(.bootstrap){text-align:right}:host-context(.bootstrap) path{fill:#fff}:host-context(.bootstrap) svg{vertical-align:bottom;height:34px}:host-context(tag:focus) path,:host-context(tag:active) path{fill:#fff}:host-context(.dark tag:focus) path,:host-context(.dark tag:active) path{fill:#000}:host-context(.minimal tag:focus) path,:host-context(.minimal tag:active) path{fill:#000}:host-context(.bootstrap tag:focus) path,:host-context(.bootstrap tag:active) path{fill:#fff}:host-context(.bootstrap3-info){height:inherit}:host-context(.bootstrap3-info) path{fill:#fff}\\n\"]\n    }]\n  }], null, null);\n})();\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n  userAgent: 'Chrome',\n  vendor: 'Google Inc'\n};\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\nclass TagComponent {\n  constructor(element, renderer, cdRef) {\n    this.element = element;\n    this.renderer = renderer;\n    this.cdRef = cdRef;\n    /**\n     * @name disabled\n     */\n    this.disabled = false;\n    /**\n     * @name onSelect\n     */\n    this.onSelect = new EventEmitter();\n    /**\n     * @name onRemove\n     */\n    this.onRemove = new EventEmitter();\n    /**\n     * @name onBlur\n     */\n    this.onBlur = new EventEmitter();\n    /**\n     * @name onKeyDown\n     */\n    this.onKeyDown = new EventEmitter();\n    /**\n     * @name onTagEdited\n     */\n    this.onTagEdited = new EventEmitter();\n    /**\n     * @name editing\n     */\n    this.editing = false;\n    /**\n     * @name rippleState\n     */\n    this.rippleState = 'none';\n  }\n  /**\n   * @name readonly {boolean}\n   */\n  get readonly() {\n    return typeof this.model !== 'string' && this.model.readonly === true;\n  }\n  /**\n   * @name select\n   */\n  select($event) {\n    if (this.readonly || this.disabled) {\n      return;\n    }\n    if ($event) {\n      $event.stopPropagation();\n    }\n    this.focus();\n    this.onSelect.emit(this.model);\n  }\n  /**\n   * @name remove\n   */\n  remove($event) {\n    $event.stopPropagation();\n    this.onRemove.emit(this);\n  }\n  /**\n   * @name focus\n   */\n  focus() {\n    this.element.nativeElement.focus();\n  }\n  move() {\n    this.moving = true;\n  }\n  /**\n   * @name keydown\n   * @param event\n   */\n  keydown(event) {\n    if (this.editing) {\n      if (event.keyCode === 13) {\n        return this.disableEditMode(event);\n      }\n    } else {\n      this.onKeyDown.emit({\n        event,\n        model: this.model\n      });\n    }\n  }\n  /**\n   * @name blink\n   */\n  blink() {\n    const classList = this.element.nativeElement.classList;\n    classList.add('blink');\n    setTimeout(() => classList.remove('blink'), 50);\n  }\n  /**\n   * @name toggleEditMode\n   */\n  toggleEditMode() {\n    if (this.editable) {\n      return this.editing ? undefined : this.activateEditMode();\n    }\n  }\n  /**\n   * @name onBlurred\n   * @param event\n   */\n  onBlurred(event) {\n    // Checks if it is editable first before handeling the onBlurred event in order to prevent\n    // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n    if (!this.editable) {\n      return;\n    }\n    this.disableEditMode();\n    const value = event.target.innerText;\n    const result = typeof this.model === 'string' ? value : {\n      ...this.model,\n      [this.displayBy]: value\n    };\n    this.onBlur.emit(result);\n  }\n  /**\n   * @name getDisplayValue\n   * @param item\n   */\n  getDisplayValue(item) {\n    return typeof item === 'string' ? item : item[this.displayBy];\n  }\n  /**\n   * @desc returns whether the ripple is visible or not\n   * only works in Chrome\n   * @name isRippleVisible\n   */\n  get isRippleVisible() {\n    return !this.readonly && !this.editing && isChrome && this.hasRipple;\n  }\n  /**\n   * @name disableEditMode\n   * @param $event\n   */\n  disableEditMode($event) {\n    const classList = this.element.nativeElement.classList;\n    const input = this.getContentEditableText();\n    this.editing = false;\n    classList.remove('tag--editing');\n    if (!input) {\n      this.setContentEditableText(this.model);\n      return;\n    }\n    this.storeNewValue(input);\n    this.cdRef.detectChanges();\n    if ($event) {\n      $event.preventDefault();\n    }\n  }\n  /**\n   * @name isDeleteIconVisible\n   */\n  isDeleteIconVisible() {\n    return !this.readonly && !this.disabled && this.removable && !this.editing;\n  }\n  /**\n   * @name getContentEditableText\n   */\n  getContentEditableText() {\n    const input = this.getContentEditable();\n    return input ? input.innerText.trim() : '';\n  }\n  /**\n   * @name setContentEditableText\n   * @param model\n   */\n  setContentEditableText(model) {\n    const input = this.getContentEditable();\n    const value = this.getDisplayValue(model);\n    input.innerText = value;\n  }\n  /**\n   * @name\n   */\n  activateEditMode() {\n    const classList = this.element.nativeElement.classList;\n    classList.add('tag--editing');\n    this.editing = true;\n  }\n  /**\n   * @name storeNewValue\n   * @param input\n   */\n  storeNewValue(input) {\n    const exists = tag => {\n      return typeof tag === 'string' ? tag === input : tag[this.displayBy] === input;\n    };\n    const hasId = () => {\n      return this.model[this.identifyBy] !== this.model[this.displayBy];\n    };\n    // if the value changed, replace the value in the model\n    if (exists(this.model)) {\n      return;\n    }\n    const model = typeof this.model === 'string' ? input : {\n      index: this.index,\n      [this.identifyBy]: hasId() ? this.model[this.identifyBy] : input,\n      [this.displayBy]: input\n    };\n    if (this.canAddTag(model)) {\n      this.onTagEdited.emit({\n        tag: model,\n        index: this.index\n      });\n    } else {\n      this.setContentEditableText(this.model);\n    }\n  }\n  /**\n   * @name getContentEditable\n   */\n  getContentEditable() {\n    return this.element.nativeElement.querySelector('[contenteditable]');\n  }\n}\nTagComponent.ɵfac = function TagComponent_Factory(t) {\n  return new (t || TagComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTagComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TagComponent,\n  selectors: [[\"tag\"]],\n  viewQuery: function TagComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TagRipple, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TagComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"keydown\", function TagComponent_keydown_HostBindingHandler($event) {\n        return ctx.keydown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"moving\", ctx.moving);\n    }\n  },\n  inputs: {\n    model: \"model\",\n    removable: \"removable\",\n    editable: \"editable\",\n    template: \"template\",\n    displayBy: \"displayBy\",\n    identifyBy: \"identifyBy\",\n    index: \"index\",\n    hasRipple: \"hasRipple\",\n    disabled: \"disabled\",\n    canAddTag: \"canAddTag\"\n  },\n  outputs: {\n    onSelect: \"onSelect\",\n    onRemove: \"onRemove\",\n    onBlur: \"onBlur\",\n    onKeyDown: \"onKeyDown\",\n    onTagEdited: \"onTagEdited\"\n  },\n  decls: 4,\n  vars: 8,\n  consts: [[3, \"ngSwitch\", \"click\", \"dblclick\", \"mousedown\", \"mouseup\"], [4, \"ngSwitchCase\"], [\"class\", \"tag-wrapper\", 4, \"ngSwitchCase\"], [3, \"state\", 4, \"ngIf\"], [3, \"ngTemplateOutletContext\", \"ngTemplateOutlet\"], [1, \"tag-wrapper\"], [\"spellcheck\", \"false\", 1, \"tag__text\", \"inline\", 3, \"keydown.enter\", \"keydown.escape\", \"click\", \"blur\"], [\"aria-label\", \"Remove tag\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"aria-label\", \"Remove tag\", \"role\", \"button\", 3, \"click\"], [3, \"state\"]],\n  template: function TagComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TagComponent_Template_div_click_0_listener($event) {\n        return ctx.select($event);\n      })(\"dblclick\", function TagComponent_Template_div_dblclick_0_listener() {\n        return ctx.toggleEditMode();\n      })(\"mousedown\", function TagComponent_Template_div_mousedown_0_listener() {\n        return ctx.rippleState = \"clicked\";\n      })(\"mouseup\", function TagComponent_Template_div_mouseup_0_listener() {\n        return ctx.rippleState = \"none\";\n      });\n      i0.ɵɵtemplate(1, TagComponent_div_1_Template, 2, 6, \"div\", 1)(2, TagComponent_div_2_Template, 4, 4, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, TagComponent_tag_ripple_3_Template, 1, 2, \"tag-ripple\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      i0.ɵɵproperty(\"ngSwitch\", !!ctx.template);\n      i0.ɵɵattribute(\"tabindex\", -1)(\"aria-label\", ctx.getDisplayValue(ctx.model));\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngSwitchCase\", true);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngSwitchCase\", false);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.isRippleVisible);\n    }\n  },\n  dependencies: [DeleteIconComponent, TagRipple, i2.NgSwitch, i2.NgSwitchCase, i2.NgTemplateOutlet, i2.NgIf],\n  styles: [\"[_nghost-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%]:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}[_nghost-%COMP%]{max-width:400px}.blink[_nghost-%COMP%]{-webkit-animation:_ngcontent-%COMP%_blink .3s normal forwards ease-in-out;animation:_ngcontent-%COMP%_blink .3s normal forwards ease-in-out}@-webkit-keyframes _ngcontent-%COMP%_blink{0%{opacity:.3}}@keyframes _ngcontent-%COMP%_blink{0%{opacity:.3}}[_nghost-%COMP%]   .disabled[_ngcontent-%COMP%]{cursor:not-allowed}[_nghost-%COMP%]   [contenteditable=true][_ngcontent-%COMP%]{outline:0}.tag-wrapper[_ngcontent-%COMP%]{flex-direction:row;display:flex}.tag__text[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tag',\n      template: \"<div (click)=\\\"select($event)\\\"\\n     (dblclick)=\\\"toggleEditMode()\\\"\\n     (mousedown)=\\\"rippleState='clicked'\\\"\\n     (mouseup)=\\\"rippleState='none'\\\"\\n     [ngSwitch]=\\\"!!template\\\"\\n     [class.disabled]=\\\"disabled\\\"\\n     [attr.tabindex]=\\\"-1\\\"\\n     [attr.aria-label]=\\\"getDisplayValue(model)\\\">\\n\\n    <div *ngSwitchCase=\\\"true\\\" [attr.contenteditable]=\\\"editing\\\">\\n        <!-- CUSTOM TEMPLATE -->\\n        <ng-template\\n            [ngTemplateOutletContext]=\\\"{ item: model, index: index }\\\"\\n            [ngTemplateOutlet]=\\\"template\\\">\\n        </ng-template>\\n    </div>\\n\\n    <div *ngSwitchCase=\\\"false\\\" class=\\\"tag-wrapper\\\">\\n        <!-- TAG NAME -->\\n        <div [attr.contenteditable]=\\\"editing\\\"\\n             [attr.title]=\\\"getDisplayValue(model)\\\"\\n             class=\\\"tag__text inline\\\"\\n             spellcheck=\\\"false\\\"\\n             (keydown.enter)=\\\"disableEditMode($event)\\\"\\n             (keydown.escape)=\\\"disableEditMode($event)\\\"\\n             (click)=\\\"editing ? $event.stopPropagation() : undefined\\\"\\n             (blur)=\\\"onBlurred($event)\\\">\\n            {{ getDisplayValue(model) }}\\n        </div>\\n\\n        <!-- 'X' BUTTON -->\\n        <delete-icon\\n            aria-label=\\\"Remove tag\\\"\\n            role=\\\"button\\\"\\n            (click)=\\\"remove($event)\\\"\\n            *ngIf=\\\"isDeleteIconVisible()\\\">\\n        </delete-icon>\\n    </div>\\n</div>\\n\\n<tag-ripple [state]=\\\"rippleState\\\"\\n            [attr.tabindex]=\\\"-1\\\"\\n            *ngIf=\\\"isRippleVisible\\\">\\n</tag-ripple>\\n\",\n      styles: [\":host,:host>div,:host>div:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}:host{max-width:400px}:host.blink{-webkit-animation:blink .3s normal forwards ease-in-out;animation:blink .3s normal forwards ease-in-out}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}:host .disabled{cursor:not-allowed}:host [contenteditable=true]{outline:0}.tag-wrapper{flex-direction:row;display:flex}.tag__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    model: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    displayBy: [{\n      type: Input\n    }],\n    identifyBy: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    hasRipple: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    canAddTag: [{\n      type: Input\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onTagEdited: [{\n      type: Output\n    }],\n    moving: [{\n      type: HostBinding,\n      args: ['class.moving']\n    }],\n    ripple: [{\n      type: ViewChild,\n      args: [TagRipple]\n    }],\n    keydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }]\n  });\n})();\n\n/**\n * @name animations\n */\nconst animations = [trigger('animation', [state('in', style({\n  opacity: 1\n})), state('out', style({\n  opacity: 0\n})), transition(':enter', [animate('{{ enter }}', keyframes([style({\n  opacity: 0,\n  offset: 0,\n  transform: 'translate(0px, 20px)'\n}), style({\n  opacity: 0.3,\n  offset: 0.3,\n  transform: 'translate(0px, -10px)'\n}), style({\n  opacity: 0.5,\n  offset: 0.5,\n  transform: 'translate(0px, 0px)'\n}), style({\n  opacity: 0.75,\n  offset: 0.75,\n  transform: 'translate(0px, 5px)'\n}), style({\n  opacity: 1,\n  offset: 1,\n  transform: 'translate(0px, 0px)'\n})]))]), transition(':leave', [animate('{{ leave }}', keyframes([style({\n  opacity: 1,\n  transform: 'translateX(0)',\n  offset: 0\n}), style({\n  opacity: 1,\n  transform: 'translateX(-15px)',\n  offset: 0.7\n}), style({\n  opacity: 0,\n  transform: 'translateX(100%)',\n  offset: 1.0\n})]))])])];\nclass TagInputDropdown {\n  constructor(injector) {\n    var _this = this;\n    this.injector = injector;\n    /**\n     * @name offset\n     */\n    this.offset = defaults.dropdown.offset;\n    /**\n     * @name focusFirstElement\n     */\n    this.focusFirstElement = defaults.dropdown.focusFirstElement;\n    /**\n     * - show autocomplete dropdown if the value of input is empty\n     * @name showDropdownIfEmpty\n     */\n    this.showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n    /**\n     * - desc minimum text length in order to display the autocomplete dropdown\n     * @name minimumTextLength\n     */\n    this.minimumTextLength = defaults.dropdown.minimumTextLength;\n    /**\n     * - number of items to display in the autocomplete dropdown\n     * @name limitItemsTo\n     */\n    this.limitItemsTo = defaults.dropdown.limitItemsTo;\n    /**\n     * @name displayBy\n     */\n    this.displayBy = defaults.dropdown.displayBy;\n    /**\n     * @name identifyBy\n     */\n    this.identifyBy = defaults.dropdown.identifyBy;\n    /**\n     * @description a function a developer can use to implement custom matching for the autocomplete\n     * @name matchingFn\n     */\n    this.matchingFn = defaults.dropdown.matchingFn;\n    /**\n     * @name appendToBody\n     */\n    this.appendToBody = defaults.dropdown.appendToBody;\n    /**\n     * @name keepOpen\n     * @description option to leave dropdown open when adding a new item\n     */\n    this.keepOpen = defaults.dropdown.keepOpen;\n    /**\n     * @name dynamicUpdate\n     */\n    this.dynamicUpdate = defaults.dropdown.dynamicUpdate;\n    /**\n     * @name zIndex\n     */\n    this.zIndex = defaults.dropdown.zIndex;\n    /**\n     * list of items that match the current value of the input (for autocomplete)\n     * @name items\n     */\n    this.items = [];\n    /**\n     * @name tagInput\n     */\n    this.tagInput = this.injector.get(TagInputComponent);\n    /**\n     * @name _autocompleteItems\n     */\n    this._autocompleteItems = [];\n    /**\n     *\n     * @name show\n     */\n    this.show = () => {\n      const maxItemsReached = this.tagInput.items.length === this.tagInput.maxItems;\n      const value = this.getFormValue();\n      const hasMinimumText = value.trim().length >= this.minimumTextLength;\n      const position = this.calculatePosition();\n      const items = this.getMatchingItems(value);\n      const hasItems = items.length > 0;\n      const isHidden = this.isVisible === false;\n      const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n      const isDisabled = this.tagInput.disable;\n      const shouldShow = isHidden && (hasItems && hasMinimumText || showDropdownIfEmpty);\n      const shouldHide = this.isVisible && !hasItems;\n      if (this.autocompleteObservable && hasMinimumText) {\n        return this.getItemsFromObservable(value);\n      }\n      if (!this.showDropdownIfEmpty && !value || maxItemsReached || isDisabled) {\n        return this.dropdown.hide();\n      }\n      this.setItems(items);\n      if (shouldShow) {\n        this.dropdown.show(position);\n      } else if (shouldHide) {\n        this.hide();\n      }\n    };\n    /**\n     * @name requestAdding\n     * @param item {Ng2MenuItem}\n     */\n    this.requestAdding = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (item) {\n        const tag = _this.createTagModel(item);\n        yield _this.tagInput.onAddingRequested(true, tag).catch(() => {});\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    /**\n     * @name resetItems\n     */\n    this.resetItems = () => {\n      this.items = [];\n    };\n    /**\n     * @name getItemsFromObservable\n     * @param text\n     */\n    this.getItemsFromObservable = text => {\n      this.setLoadingState(true);\n      const subscribeFn = data => {\n        // hide loading animation\n        this.setLoadingState(false)\n        // add items\n        .populateItems(data);\n        this.setItems(this.getMatchingItems(text));\n        if (this.items.length) {\n          this.dropdown.show(this.calculatePosition());\n        } else {\n          this.dropdown.hide();\n        }\n      };\n      this.autocompleteObservable(text).pipe(first()).subscribe(subscribeFn, () => this.setLoadingState(false));\n    };\n  }\n  /**\n   * @name autocompleteItems\n   * @param items\n   */\n  set autocompleteItems(items) {\n    this._autocompleteItems = items;\n  }\n  /**\n   * @name autocompleteItems\n   * @desc array of items that will populate the autocomplete\n   */\n  get autocompleteItems() {\n    const items = this._autocompleteItems;\n    if (!items) {\n      return [];\n    }\n    return items.map(item => {\n      return typeof item === 'string' ? {\n        [this.displayBy]: item,\n        [this.identifyBy]: item\n      } : item;\n    });\n  }\n  /**\n   * @name ngAfterviewInit\n   */\n  ngAfterViewInit() {\n    this.onItemClicked().subscribe(item => {\n      this.requestAdding(item);\n    });\n    // reset itemsMatching array when the dropdown is hidden\n    this.onHide().subscribe(this.resetItems);\n    const DEBOUNCE_TIME = 200;\n    const KEEP_OPEN = this.keepOpen;\n    this.tagInput.onTextChange.asObservable().pipe(distinctUntilChanged(), debounceTime(DEBOUNCE_TIME), filter(value => {\n      if (KEEP_OPEN === false) {\n        return value.length > 0;\n      }\n      return true;\n    })).subscribe(this.show);\n  }\n  /**\n   * @name updatePosition\n   */\n  updatePosition() {\n    const position = this.tagInput.inputForm.getElementPosition();\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n  }\n  /**\n   * @name isVisible\n   */\n  get isVisible() {\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\n  }\n  /**\n   * @name onHide\n   */\n  onHide() {\n    return this.dropdown.onHide;\n  }\n  /**\n   * @name onItemClicked\n   */\n  onItemClicked() {\n    return this.dropdown.onItemClicked;\n  }\n  /**\n   * @name selectedItem\n   */\n  get selectedItem() {\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n  }\n  /**\n   * @name state\n   */\n  get state() {\n    return this.dropdown.menu.dropdownState;\n  }\n  /**\n   * @name hide\n   */\n  hide() {\n    this.resetItems();\n    this.dropdown.hide();\n  }\n  /**\n   * @name scrollListener\n   */\n  scrollListener() {\n    if (!this.isVisible || !this.dynamicUpdate) {\n      return;\n    }\n    this.updatePosition();\n  }\n  /**\n   * @name onWindowBlur\n   */\n  onWindowBlur() {\n    this.dropdown.hide();\n  }\n  /**\n   * @name getFormValue\n   */\n  getFormValue() {\n    const formValue = this.tagInput.formValue;\n    return formValue ? formValue.toString().trim() : '';\n  }\n  /**\n   * @name calculatePosition\n   */\n  calculatePosition() {\n    return this.tagInput.inputForm.getElementPosition();\n  }\n  /**\n   * @name createTagModel\n   * @param item\n   */\n  createTagModel(item) {\n    const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n    const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n    return {\n      ...item.value,\n      [this.tagInput.displayBy]: display,\n      [this.tagInput.identifyBy]: value\n    };\n  }\n  /**\n   *\n   * @param value {string}\n   */\n  getMatchingItems(value) {\n    if (!value && !this.showDropdownIfEmpty) {\n      return [];\n    }\n    const dupesAllowed = this.tagInput.allowDupes;\n    return this.autocompleteItems.filter(item => {\n      const hasValue = dupesAllowed ? false : this.tagInput.tags.some(tag => {\n        const identifyBy = this.tagInput.identifyBy;\n        const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n        return model === item[this.identifyBy];\n      });\n      return this.matchingFn(value, item) && hasValue === false;\n    });\n  }\n  /**\n   * @name setItems\n   */\n  setItems(items) {\n    this.items = items.slice(0, this.limitItemsTo || items.length);\n  }\n  /**\n   * @name populateItems\n   * @param data\n   */\n  populateItems(data) {\n    this.autocompleteItems = data.map(item => {\n      return typeof item === 'string' ? {\n        [this.displayBy]: item,\n        [this.identifyBy]: item\n      } : item;\n    });\n    return this;\n  }\n  /**\n   * @name setLoadingState\n   * @param state\n   */\n  setLoadingState(state) {\n    this.tagInput.isLoading = state;\n    return this;\n  }\n}\nTagInputDropdown.ɵfac = function TagInputDropdown_Factory(t) {\n  return new (t || TagInputDropdown)(i0.ɵɵdirectiveInject(i0.Injector));\n};\nTagInputDropdown.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TagInputDropdown,\n  selectors: [[\"tag-input-dropdown\"]],\n  contentQueries: function TagInputDropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TemplateRef, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function TagInputDropdown_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(Ng2Dropdown, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n    }\n  },\n  hostBindings: function TagInputDropdown_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"scroll\", function TagInputDropdown_scroll_HostBindingHandler() {\n        return ctx.scrollListener();\n      }, false, i0.ɵɵresolveWindow)(\"blur\", function TagInputDropdown_blur_HostBindingHandler() {\n        return ctx.onWindowBlur();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    offset: \"offset\",\n    focusFirstElement: \"focusFirstElement\",\n    showDropdownIfEmpty: \"showDropdownIfEmpty\",\n    autocompleteObservable: \"autocompleteObservable\",\n    minimumTextLength: \"minimumTextLength\",\n    limitItemsTo: \"limitItemsTo\",\n    displayBy: \"displayBy\",\n    identifyBy: \"identifyBy\",\n    matchingFn: \"matchingFn\",\n    appendToBody: \"appendToBody\",\n    keepOpen: \"keepOpen\",\n    dynamicUpdate: \"dynamicUpdate\",\n    zIndex: \"zIndex\",\n    autocompleteItems: \"autocompleteItems\"\n  },\n  decls: 3,\n  vars: 6,\n  consts: [[3, \"dynamicUpdate\"], [3, \"focusFirstElement\", \"zIndex\", \"appendToBody\", \"offset\"], [3, \"value\", \"ngSwitch\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"ngSwitch\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"innerHTML\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function TagInputDropdown_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ng2-dropdown\", 0)(1, \"ng2-dropdown-menu\", 1);\n      i0.ɵɵtemplate(2, TagInputDropdown_ng2_menu_item_2_Template, 3, 3, \"ng2-menu-item\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"dynamicUpdate\", ctx.dynamicUpdate);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"focusFirstElement\", ctx.focusFirstElement)(\"zIndex\", ctx.zIndex)(\"appendToBody\", ctx.appendToBody)(\"offset\", ctx.offset);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  dependencies: [i1$1.Ng2Dropdown, i1$1.Ng2DropdownMenu, i1$1.Ng2MenuItem, i2.NgForOf, i2.NgSwitch, i2.NgSwitchCase, i2.NgSwitchDefault, i2.NgTemplateOutlet, HighlightPipe],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagInputDropdown, [{\n    type: Component,\n    args: [{\n      selector: 'tag-input-dropdown',\n      template: \"<ng2-dropdown [dynamicUpdate]=\\\"dynamicUpdate\\\">\\n    <ng2-dropdown-menu [focusFirstElement]=\\\"focusFirstElement\\\"\\n                       [zIndex]=\\\"zIndex\\\"\\n                       [appendToBody]=\\\"appendToBody\\\"\\n                       [offset]=\\\"offset\\\">\\n        <ng2-menu-item *ngFor=\\\"let item of items; let index = index; let last = last\\\"\\n                       [value]=\\\"item\\\"\\n                       [ngSwitch]=\\\"!!templates.length\\\">\\n\\n            <span *ngSwitchCase=\\\"false\\\"\\n                  [innerHTML]=\\\"item[displayBy] | highlight : tagInput.inputForm.value.value\\\">\\n            </span>\\n\\n            <ng-template *ngSwitchDefault\\n                      [ngTemplateOutlet]=\\\"templates.first\\\"\\n                      [ngTemplateOutletContext]=\\\"{ item: item, index: index, last: last }\\\">\\n            </ng-template>\\n        </ng2-menu-item>\\n    </ng2-dropdown-menu>\\n</ng2-dropdown>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }];\n  }, {\n    dropdown: [{\n      type: ViewChild,\n      args: [Ng2Dropdown]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [TemplateRef]\n    }],\n    offset: [{\n      type: Input\n    }],\n    focusFirstElement: [{\n      type: Input\n    }],\n    showDropdownIfEmpty: [{\n      type: Input\n    }],\n    autocompleteObservable: [{\n      type: Input\n    }],\n    minimumTextLength: [{\n      type: Input\n    }],\n    limitItemsTo: [{\n      type: Input\n    }],\n    displayBy: [{\n      type: Input\n    }],\n    identifyBy: [{\n      type: Input\n    }],\n    matchingFn: [{\n      type: Input\n    }],\n    appendToBody: [{\n      type: Input\n    }],\n    keepOpen: [{\n      type: Input\n    }],\n    dynamicUpdate: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    autocompleteItems: [{\n      type: Input\n    }],\n    scrollListener: [{\n      type: HostListener,\n      args: ['window:scroll']\n    }],\n    onWindowBlur: [{\n      type: HostListener,\n      args: ['window:blur']\n    }]\n  });\n})();\n\n// angular\nconst CUSTOM_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TagInputComponent),\n  multi: true\n};\nclass TagInputComponent extends TagInputAccessor {\n  constructor(renderer, dragProvider) {\n    var _this2;\n    super();\n    _this2 = this;\n    this.renderer = renderer;\n    this.dragProvider = dragProvider;\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    this.separatorKeys = defaults.tagInput.separatorKeys;\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    this.separatorKeyCodes = defaults.tagInput.separatorKeyCodes;\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    this.placeholder = defaults.tagInput.placeholder;\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    this.secondaryPlaceholder = defaults.tagInput.secondaryPlaceholder;\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    this.maxItems = defaults.tagInput.maxItems;\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    this.validators = defaults.tagInput.validators;\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    this.asyncValidators = defaults.tagInput.asyncValidators;\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    this.onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n    /**\n     * @name errorMessages\n     */\n    this.errorMessages = defaults.tagInput.errorMessages;\n    /**\n     * @name theme\n     */\n    this.theme = defaults.tagInput.theme;\n    /**\n     * @name onTextChangeDebounce\n     */\n    this.onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    this.inputId = defaults.tagInput.inputId;\n    /**\n     * - custom class assigned to the input\n     */\n    this.inputClass = defaults.tagInput.inputClass;\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    this.clearOnBlur = defaults.tagInput.clearOnBlur;\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    this.hideForm = defaults.tagInput.hideForm;\n    /**\n     * @name addOnBlur\n     */\n    this.addOnBlur = defaults.tagInput.addOnBlur;\n    /**\n     * @name addOnPaste\n     */\n    this.addOnPaste = defaults.tagInput.addOnPaste;\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    this.pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n    /**\n     * @name blinkIfDupe\n     */\n    this.blinkIfDupe = defaults.tagInput.blinkIfDupe;\n    /**\n     * @name removable\n     */\n    this.removable = defaults.tagInput.removable;\n    /**\n     * @name editable\n     */\n    this.editable = defaults.tagInput.editable;\n    /**\n     * @name allowDupes\n     */\n    this.allowDupes = defaults.tagInput.allowDupes;\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    this.modelAsStrings = defaults.tagInput.modelAsStrings;\n    /**\n     * @name trimTags\n     */\n    this.trimTags = defaults.tagInput.trimTags;\n    /**\n     * @name ripple\n     */\n    this.ripple = defaults.tagInput.ripple;\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    this.tabindex = defaults.tagInput.tabIndex;\n    /**\n     * @name disable\n     */\n    this.disable = defaults.tagInput.disable;\n    /**\n     * @name dragZone\n     */\n    this.dragZone = defaults.tagInput.dragZone;\n    /**\n     * @name onRemoving\n     */\n    this.onRemoving = defaults.tagInput.onRemoving;\n    /**\n     * @name onAdding\n     */\n    this.onAdding = defaults.tagInput.onAdding;\n    /**\n     * @name animationDuration\n     */\n    this.animationDuration = defaults.tagInput.animationDuration;\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    this.onAdd = new EventEmitter();\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    this.onRemove = new EventEmitter();\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    this.onSelect = new EventEmitter();\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    this.onFocus = new EventEmitter();\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    this.onBlur = new EventEmitter();\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    this.onTextChange = new EventEmitter();\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    this.onPaste = new EventEmitter();\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    this.onValidationError = new EventEmitter();\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    this.onTagEdited = new EventEmitter();\n    /**\n     * @name isLoading\n     */\n    this.isLoading = false;\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    this.listeners = {\n      [KEYDOWN]: [],\n      [KEYUP]: []\n    };\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    this.inputTextChange = new EventEmitter();\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    this.inputTextValue = '';\n    this.errors = [];\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    this.appendTag = (tag, index = this.items.length) => {\n      const items = this.items;\n      const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n      this.items = [...items.slice(0, index), model, ...items.slice(index, items.length)];\n    };\n    /**\n     * @name createTag\n     * @param model\n     */\n    this.createTag = model => {\n      const trim = (val, key) => {\n        return typeof val === 'string' ? val.trim() : val[key];\n      };\n      return {\n        ...(typeof model !== 'string' ? model : {}),\n        [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n        [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n      };\n    };\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    this.isTagValid = (tag, fromAutocomplete = false) => {\n      const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n      const value = this.getItemDisplay(tag).trim();\n      if (selectedItem && !fromAutocomplete || !value) {\n        return false;\n      }\n      const dupe = this.findDupe(tag, fromAutocomplete);\n      // if so, give a visual cue and return false\n      if (!this.allowDupes && dupe && this.blinkIfDupe) {\n        const model = this.tags.find(item => {\n          return this.getItemValue(item.model) === this.getItemValue(dupe);\n        });\n        if (model) {\n          model.blink();\n        }\n      }\n      const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n      const assertions = [\n      // 1. there must be no dupe OR dupes are allowed\n      !dupe || this.allowDupes,\n      // 2. check max items has not been reached\n      !this.maxItemsReached,\n      // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n      isFromAutocomplete || !this.onlyFromAutocomplete];\n      return assertions.filter(Boolean).length === assertions.length;\n    };\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    this.onPasteCallback = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (data) {\n        const getText = () => {\n          const isIE = Boolean(window.clipboardData);\n          const clipboardData = isIE ? window.clipboardData : data.clipboardData;\n          const type = isIE ? 'Text' : 'text/plain';\n          return clipboardData === null ? '' : clipboardData.getData(type) || '';\n        };\n        const text = getText();\n        const requests = text.split(_this2.pasteSplitPattern).map(item => {\n          const tag = _this2.createTag(item);\n          _this2.setInputValue(tag[_this2.displayBy]);\n          return _this2.onAddingRequested(false, tag);\n        });\n        const resetInput = () => setTimeout(() => _this2.setInputValue(''), 50);\n        Promise.all(requests).then(() => {\n          _this2.onPaste.emit(text);\n          resetInput();\n        }).catch(resetInput);\n      });\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n  /**\n   * @name inputText\n   */\n  get inputText() {\n    return this.inputTextValue;\n  }\n  /**\n   * @name inputText\n   * @param text\n   */\n  set inputText(text) {\n    this.inputTextValue = text;\n    this.inputTextChange.emit(text);\n  }\n  /**\n   * @desc removes the tab index if it is set - it will be passed through to the input\n   * @name tabindexAttr\n   */\n  get tabindexAttr() {\n    return this.tabindex !== '' ? '-1' : '';\n  }\n  /**\n   * @name ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    // set up listeners\n    this.setUpKeypressListeners();\n    this.setupSeparatorKeysListener();\n    this.setUpInputKeydownListeners();\n    if (this.onTextChange.observers.length) {\n      this.setUpTextChangeSubscriber();\n    }\n    // if clear on blur is set to true, subscribe to the event and clear the text's form\n    if (this.clearOnBlur || this.addOnBlur) {\n      this.setUpOnBlurSubscriber();\n    }\n    // if addOnPaste is set to true, register the handler and add items\n    if (this.addOnPaste) {\n      this.setUpOnPasteListener();\n    }\n    const statusChanges$ = this.inputForm.form.statusChanges;\n    statusChanges$.pipe(filter$1(status => status !== 'PENDING')).subscribe(() => {\n      this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n    });\n    this.isProgressBarVisible$ = statusChanges$.pipe(map(status => {\n      return status === 'PENDING' || this.isLoading;\n    }));\n    // if hideForm is set to true, remove the input\n    if (this.hideForm) {\n      this.inputForm.destroy();\n    }\n  }\n  /**\n   * @name ngOnInit\n   */\n  ngOnInit() {\n    // if the number of items specified in the model is > of the value of maxItems\n    // degrade gracefully and let the max number of items to be the number of items in the model\n    // though, warn the user.\n    const hasReachedMaxItems = this.maxItems !== undefined && this.items && this.items.length > this.maxItems;\n    if (hasReachedMaxItems) {\n      this.maxItems = this.items.length;\n      console.warn(MAX_ITEMS_WARNING);\n    }\n    // Setting editable to false to fix problem with tags in IE still being editable when\n    // onlyFromAutocomplete is true\n    this.editable = this.onlyFromAutocomplete ? false : this.editable;\n    this.setAnimationMetadata();\n  }\n  /**\n   * @name onRemoveRequested\n   * @param tag\n   * @param index\n   */\n  onRemoveRequested(tag, index) {\n    return new Promise(resolve => {\n      const subscribeFn = model => {\n        this.removeItem(model, index);\n        resolve(tag);\n      };\n      this.onRemoving ? this.onRemoving(tag).pipe(first$1()).subscribe(subscribeFn) : subscribeFn(tag);\n    });\n  }\n  /**\n   * @name onAddingRequested\n   * @param fromAutocomplete {boolean}\n   * @param tag {TagModel}\n   * @param index? {number}\n   * @param giveupFocus? {boolean}\n   */\n  onAddingRequested(fromAutocomplete, tag, index, giveupFocus) {\n    return new Promise((resolve, reject) => {\n      const subscribeFn = model => {\n        return this.addItem(fromAutocomplete, model, index, giveupFocus).then(resolve).catch(reject);\n      };\n      return this.onAdding ? this.onAdding(tag).pipe(first$1()).subscribe(subscribeFn, reject) : subscribeFn(tag);\n    });\n  }\n  /**\n   * @name selectItem\n   * @desc selects item passed as parameter as the selected tag\n   * @param item\n   * @param emit\n   */\n  selectItem(item, emit = true) {\n    const isReadonly = item && typeof item !== 'string' && item.readonly;\n    if (isReadonly || this.selectedTag === item) {\n      return;\n    }\n    this.selectedTag = item;\n    if (emit) {\n      this.onSelect.emit(item);\n    }\n  }\n  /**\n   * @name fireEvents\n   * @desc goes through the list of the events for a given eventName, and fires each of them\n   * @param eventName\n   * @param $event\n   */\n  fireEvents(eventName, $event) {\n    this.listeners[eventName].forEach(listener => listener.call(this, $event));\n  }\n  /**\n   * @name handleKeydown\n   * @desc handles action when the user hits a keyboard key\n   * @param data\n   */\n  handleKeydown(data) {\n    const event = data.event;\n    const key = event.keyCode || event.which;\n    const shiftKey = event.shiftKey || false;\n    switch (KEY_PRESS_ACTIONS[key]) {\n      case ACTIONS_KEYS.DELETE:\n        if (this.selectedTag && this.removable) {\n          const index = this.items.indexOf(this.selectedTag);\n          this.onRemoveRequested(this.selectedTag, index);\n        }\n        break;\n      case ACTIONS_KEYS.SWITCH_PREV:\n        this.moveToTag(data.model, PREV);\n        break;\n      case ACTIONS_KEYS.SWITCH_NEXT:\n        this.moveToTag(data.model, NEXT);\n        break;\n      case ACTIONS_KEYS.TAB:\n        if (shiftKey) {\n          if (this.isFirstTag(data.model)) {\n            return;\n          }\n          this.moveToTag(data.model, PREV);\n        } else {\n          if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n            return;\n          }\n          this.moveToTag(data.model, NEXT);\n        }\n        break;\n      default:\n        return;\n    }\n    // prevent default behaviour\n    event.preventDefault();\n  }\n  onFormSubmit() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this3.onAddingRequested(false, _this3.formValue);\n      } catch {\n        return;\n      }\n    })();\n  }\n  /**\n   * @name setInputValue\n   * @param value\n   */\n  setInputValue(value, emitEvent = true) {\n    const control = this.getControl();\n    // update form value with the transformed item\n    control.setValue(value, {\n      emitEvent\n    });\n  }\n  /**\n   * @name getControl\n   */\n  getControl() {\n    return this.inputForm.value;\n  }\n  /**\n   * @name focus\n   * @param applyFocus\n   * @param displayAutocomplete\n   */\n  focus(applyFocus = false, displayAutocomplete = false) {\n    if (this.dragProvider.getState('dragging')) {\n      return;\n    }\n    this.selectItem(undefined, false);\n    if (applyFocus) {\n      this.inputForm.focus();\n      this.onFocus.emit(this.formValue);\n    }\n  }\n  /**\n   * @name blur\n   */\n  blur() {\n    this.onTouched();\n    this.onBlur.emit(this.formValue);\n  }\n  /**\n   * @name hasErrors\n   */\n  hasErrors() {\n    return !!this.inputForm && this.inputForm.hasErrors();\n  }\n  /**\n   * @name isInputFocused\n   */\n  isInputFocused() {\n    return !!this.inputForm && this.inputForm.isInputFocused();\n  }\n  /**\n   * - this is the one way I found to tell if the template has been passed and it is not\n   * the template for the menu item\n   * @name hasCustomTemplate\n   */\n  hasCustomTemplate() {\n    const template = this.templates ? this.templates.first : undefined;\n    const menuTemplate = this.dropdown && this.dropdown.templates ? this.dropdown.templates.first : undefined;\n    return Boolean(template && template !== menuTemplate);\n  }\n  /**\n   * @name maxItemsReached\n   */\n  get maxItemsReached() {\n    return this.maxItems !== undefined && this.items.length >= this.maxItems;\n  }\n  /**\n   * @name formValue\n   */\n  get formValue() {\n    const form = this.inputForm.value;\n    return form ? form.value : '';\n  }\n  /**3\n   * @name onDragStarted\n   * @param event\n   * @param index\n   */\n  onDragStarted(event, tag, index) {\n    event.stopPropagation();\n    const item = {\n      zone: this.dragZone,\n      tag,\n      index\n    };\n    this.dragProvider.setSender(this);\n    this.dragProvider.setDraggedItem(event, item);\n    this.dragProvider.setState({\n      dragging: true,\n      index\n    });\n  }\n  /**\n   * @name onDragOver\n   * @param event\n   */\n  onDragOver(event, index) {\n    this.dragProvider.setState({\n      dropping: true\n    });\n    this.dragProvider.setReceiver(this);\n    event.preventDefault();\n  }\n  /**\n   * @name onTagDropped\n   * @param event\n   * @param index\n   */\n  onTagDropped(event, index) {\n    const item = this.dragProvider.getDraggedItem(event);\n    if (!item || item.zone !== this.dragZone) {\n      return;\n    }\n    this.dragProvider.onTagDropped(item.tag, item.index, index);\n    event.preventDefault();\n    event.stopPropagation();\n  }\n  /**\n   * @name isDropping\n   */\n  isDropping() {\n    const isReceiver = this.dragProvider.receiver === this;\n    const isDropping = this.dragProvider.getState('dropping');\n    return Boolean(isReceiver && isDropping);\n  }\n  /**\n   * @name onTagBlurred\n   * @param changedElement {TagModel}\n   * @param index {number}\n   */\n  onTagBlurred(changedElement, index) {\n    this.items[index] = changedElement;\n    this.blur();\n  }\n  /**\n   * @name trackBy\n   * @param items\n   */\n  trackBy(index, item) {\n    return item[this.identifyBy];\n  }\n  /**\n   * @name updateEditedTag\n   * @param tag\n   */\n  updateEditedTag(tag) {\n    this.onTagEdited.emit(tag);\n  }\n  /**\n   * @name moveToTag\n   * @param item\n   * @param direction\n   */\n  moveToTag(item, direction) {\n    const isLast = this.isLastTag(item);\n    const isFirst = this.isFirstTag(item);\n    const stopSwitch = direction === NEXT && isLast || direction === PREV && isFirst;\n    if (stopSwitch) {\n      this.focus(true);\n      return;\n    }\n    const offset = direction === NEXT ? 1 : -1;\n    const index = this.getTagIndex(item) + offset;\n    const tag = this.getTagAtIndex(index);\n    return tag.select.call(tag);\n  }\n  /**\n   * @name isFirstTag\n   * @param item {TagModel}\n   */\n  isFirstTag(item) {\n    return this.tags.first.model === item;\n  }\n  /**\n   * @name isLastTag\n   * @param item {TagModel}\n   */\n  isLastTag(item) {\n    return this.tags.last.model === item;\n  }\n  /**\n   * @name getTagIndex\n   * @param item\n   */\n  getTagIndex(item) {\n    const tags = this.tags.toArray();\n    return tags.findIndex(tag => tag.model === item);\n  }\n  /**\n   * @name getTagAtIndex\n   * @param index\n   */\n  getTagAtIndex(index) {\n    const tags = this.tags.toArray();\n    return tags[index];\n  }\n  /**\n   * @name removeItem\n   * @desc removes an item from the array of the model\n   * @param tag {TagModel}\n   * @param index {number}\n   */\n  removeItem(tag, index) {\n    this.items = this.getItemsWithout(index);\n    // if the removed tag was selected, set it as undefined\n    if (this.selectedTag === tag) {\n      this.selectItem(undefined, false);\n    }\n    // focus input\n    this.focus(true, false);\n    // emit remove event\n    this.onRemove.emit(tag);\n  }\n  /**\n   * @name addItem\n   * @desc adds the current text model to the items array\n   * @param fromAutocomplete {boolean}\n   * @param item {TagModel}\n   * @param index? {number}\n   * @param giveupFocus? {boolean}\n   */\n  addItem(fromAutocomplete = false, item, index, giveupFocus) {\n    const display = this.getItemDisplay(item);\n    const tag = this.createTag(item);\n    if (fromAutocomplete) {\n      this.setInputValue(this.getItemValue(item, true));\n    }\n    return new Promise((resolve, reject) => {\n      /**\n       * @name reset\n       */\n      const reset = () => {\n        // reset control and focus input\n        this.setInputValue('');\n        if (giveupFocus) {\n          this.focus(false, false);\n        } else {\n          // focus input\n          this.focus(true, false);\n        }\n        resolve(display);\n      };\n      const appendItem = () => {\n        this.appendTag(tag, index);\n        // emit event\n        this.onAdd.emit(tag);\n        if (!this.dropdown) {\n          return;\n        }\n        this.dropdown.hide();\n        if (this.dropdown.showDropdownIfEmpty) {\n          this.dropdown.show();\n        }\n      };\n      const status = this.inputForm.form.status;\n      const isTagValid = this.isTagValid(tag, fromAutocomplete);\n      const onValidationError = () => {\n        this.onValidationError.emit(tag);\n        return reject();\n      };\n      if (status === 'VALID' && isTagValid) {\n        appendItem();\n        return reset();\n      }\n      if (status === 'INVALID' || !isTagValid) {\n        reset();\n        return onValidationError();\n      }\n      if (status === 'PENDING') {\n        const statusUpdate$ = this.inputForm.form.statusChanges;\n        return statusUpdate$.pipe(filter$1(statusUpdate => statusUpdate !== 'PENDING'), first$1()).subscribe(statusUpdate => {\n          if (statusUpdate === 'VALID' && isTagValid) {\n            appendItem();\n            return reset();\n          } else {\n            reset();\n            return onValidationError();\n          }\n        });\n      }\n    });\n  }\n  /**\n   * @name setupSeparatorKeysListener\n   */\n  setupSeparatorKeysListener() {\n    const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n    const listener = $event => {\n      const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n      const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n      // the keyCode of keydown event is 229 when IME is processing the key event.\n      const isIMEProcessing = $event.keyCode === 229;\n      if (hasKeyCode || hasKey && !isIMEProcessing) {\n        $event.preventDefault();\n        this.onAddingRequested(false, this.formValue).catch(() => {});\n      }\n    };\n    listen.call(this, KEYDOWN, listener, useSeparatorKeys);\n  }\n  /**\n   * @name setUpKeypressListeners\n   */\n  setUpKeypressListeners() {\n    const listener = $event => {\n      const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n      if (isCorrectKey && !this.formValue && this.items.length) {\n        this.tags.last.select.call(this.tags.last);\n      }\n    };\n    // setting up the keypress listeners\n    listen.call(this, KEYDOWN, listener);\n  }\n  /**\n   * @name setUpKeydownListeners\n   */\n  setUpInputKeydownListeners() {\n    this.inputForm.onKeydown.subscribe(event => {\n      if (event.key === 'Backspace' && this.formValue.trim() === '') {\n        event.preventDefault();\n      }\n    });\n  }\n  /**\n   * @name setUpOnPasteListener\n   */\n  setUpOnPasteListener() {\n    const input = this.inputForm.input.nativeElement;\n    // attach listener to input\n    this.renderer.listen(input, 'paste', event => {\n      this.onPasteCallback(event);\n      event.preventDefault();\n      return true;\n    });\n  }\n  /**\n   * @name setUpTextChangeSubscriber\n   */\n  setUpTextChangeSubscriber() {\n    this.inputForm.form.valueChanges.pipe(debounceTime$1(this.onTextChangeDebounce)).subscribe(value => {\n      this.onTextChange.emit(value.item);\n    });\n  }\n  /**\n   * @name setUpOnBlurSubscriber\n   */\n  setUpOnBlurSubscriber() {\n    const filterFn = () => {\n      const isVisible = this.dropdown && this.dropdown.isVisible;\n      return !isVisible && !!this.formValue;\n    };\n    this.inputForm.onBlur.pipe(debounceTime$1(100), filter$1(filterFn)).subscribe(() => {\n      const reset = () => this.setInputValue('');\n      if (this.addOnBlur) {\n        return this.onAddingRequested(false, this.formValue, undefined, true).then(reset).catch(reset);\n      }\n      reset();\n    });\n  }\n  /**\n   * @name findDupe\n   * @param tag\n   * @param isFromAutocomplete\n   */\n  findDupe(tag, isFromAutocomplete) {\n    const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n    const id = tag[identifyBy];\n    return this.items.find(item => this.getItemValue(item) === id);\n  }\n  /**\n   * @name setAnimationMetadata\n   */\n  setAnimationMetadata() {\n    this.animationMetadata = {\n      value: 'in',\n      params: {\n        ...this.animationDuration\n      }\n    };\n  }\n}\nTagInputComponent.ɵfac = function TagInputComponent_Factory(t) {\n  return new (t || TagInputComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(DragProvider));\n};\nTagInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TagInputComponent,\n  selectors: [[\"tag-input\"]],\n  contentQueries: function TagInputComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TagInputDropdown, 5);\n      i0.ɵɵcontentQuery(dirIndex, TemplateRef, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function TagInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TagInputForm, 5);\n      i0.ɵɵviewQuery(TagComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputForm = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tags = _t);\n    }\n  },\n  hostVars: 1,\n  hostBindings: function TagInputComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"tabindex\", ctx.tabindexAttr);\n    }\n  },\n  inputs: {\n    separatorKeys: \"separatorKeys\",\n    separatorKeyCodes: \"separatorKeyCodes\",\n    placeholder: \"placeholder\",\n    secondaryPlaceholder: \"secondaryPlaceholder\",\n    maxItems: \"maxItems\",\n    validators: \"validators\",\n    asyncValidators: \"asyncValidators\",\n    onlyFromAutocomplete: \"onlyFromAutocomplete\",\n    errorMessages: \"errorMessages\",\n    theme: \"theme\",\n    onTextChangeDebounce: \"onTextChangeDebounce\",\n    inputId: \"inputId\",\n    inputClass: \"inputClass\",\n    clearOnBlur: \"clearOnBlur\",\n    hideForm: \"hideForm\",\n    addOnBlur: \"addOnBlur\",\n    addOnPaste: \"addOnPaste\",\n    pasteSplitPattern: \"pasteSplitPattern\",\n    blinkIfDupe: \"blinkIfDupe\",\n    removable: \"removable\",\n    editable: \"editable\",\n    allowDupes: \"allowDupes\",\n    modelAsStrings: \"modelAsStrings\",\n    trimTags: \"trimTags\",\n    inputText: \"inputText\",\n    ripple: \"ripple\",\n    tabindex: \"tabindex\",\n    disable: \"disable\",\n    dragZone: \"dragZone\",\n    onRemoving: \"onRemoving\",\n    onAdding: \"onAdding\",\n    animationDuration: \"animationDuration\"\n  },\n  outputs: {\n    onAdd: \"onAdd\",\n    onRemove: \"onRemove\",\n    onSelect: \"onSelect\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onTextChange: \"onTextChange\",\n    onPaste: \"onPaste\",\n    onValidationError: \"onValidationError\",\n    onTagEdited: \"onTagEdited\",\n    inputTextChange: \"inputTextChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([CUSTOM_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c3,\n  decls: 8,\n  vars: 27,\n  consts: [[1, \"ng2-tag-input\", 3, \"ngClass\", \"click\", \"drop\", \"dragenter\", \"dragover\", \"dragend\"], [1, \"ng2-tags-container\"], [3, \"draggable\", \"canAddTag\", \"disabled\", \"hasRipple\", \"index\", \"removable\", \"editable\", \"displayBy\", \"identifyBy\", \"template\", \"model\", \"onSelect\", \"onRemove\", \"onKeyDown\", \"onTagEdited\", \"onBlur\", \"dragstart\", \"drop\", \"dragenter\", \"dragover\", \"dragleave\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"inputText\", \"disabled\", \"validators\", \"asyncValidators\", \"hidden\", \"placeholder\", \"inputClass\", \"inputId\", \"tabindex\", \"onSubmit\", \"onBlur\", \"click\", \"onKeydown\", \"onKeyup\"], [\"class\", \"progress-bar\", 4, \"ngIf\"], [\"class\", \"error-messages\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"draggable\", \"canAddTag\", \"disabled\", \"hasRipple\", \"index\", \"removable\", \"editable\", \"displayBy\", \"identifyBy\", \"template\", \"model\", \"onSelect\", \"onRemove\", \"onKeyDown\", \"onTagEdited\", \"onBlur\", \"dragstart\", \"drop\", \"dragenter\", \"dragover\", \"dragleave\"], [1, \"progress-bar\"], [1, \"error-messages\", 3, \"ngClass\"], [\"class\", \"error-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"error-message\"]],\n  template: function TagInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"click\", function TagInputComponent_Template_div_click_0_listener() {\n        return ctx.focus(true, false);\n      })(\"drop\", function TagInputComponent_Template_div_drop_0_listener($event) {\n        return ctx.dragZone ? ctx.onTagDropped($event, undefined) : undefined;\n      })(\"dragenter\", function TagInputComponent_Template_div_dragenter_0_listener($event) {\n        return ctx.dragZone ? ctx.onDragOver($event) : undefined;\n      })(\"dragover\", function TagInputComponent_Template_div_dragover_0_listener($event) {\n        return ctx.dragZone ? ctx.onDragOver($event) : undefined;\n      })(\"dragend\", function TagInputComponent_Template_div_dragend_0_listener() {\n        return ctx.dragZone ? ctx.dragProvider.onDragEnd() : undefined;\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, TagInputComponent_tag_2_Template, 1, 14, \"tag\", 2);\n      i0.ɵɵelementStart(3, \"tag-input-form\", 3);\n      i0.ɵɵlistener(\"onSubmit\", function TagInputComponent_Template_tag_input_form_onSubmit_3_listener() {\n        return ctx.onFormSubmit();\n      })(\"onBlur\", function TagInputComponent_Template_tag_input_form_onBlur_3_listener() {\n        return ctx.blur();\n      })(\"click\", function TagInputComponent_Template_tag_input_form_click_3_listener() {\n        return ctx.dropdown ? ctx.dropdown.show() : undefined;\n      })(\"onKeydown\", function TagInputComponent_Template_tag_input_form_onKeydown_3_listener($event) {\n        return ctx.fireEvents(\"keydown\", $event);\n      })(\"onKeyup\", function TagInputComponent_Template_tag_input_form_onKeyup_3_listener($event) {\n        return ctx.fireEvents(\"keyup\", $event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(4, TagInputComponent_div_4_Template, 1, 0, \"div\", 4);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, TagInputComponent_div_6_Template, 2, 2, \"div\", 5);\n      i0.ɵɵprojection(7);\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ng2-tag-input--dropping\", ctx.isDropping())(\"ng2-tag-input--disabled\", ctx.disable)(\"ng2-tag-input--loading\", ctx.isLoading)(\"ng2-tag-input--invalid\", ctx.hasErrors())(\"ng2-tag-input--focused\", ctx.isInputFocused());\n      i0.ɵɵproperty(\"ngClass\", ctx.theme);\n      i0.ɵɵattribute(\"tabindex\", -1);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.items)(\"ngForTrackBy\", ctx.trackBy);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"inputText\", ctx.inputText)(\"disabled\", ctx.disable)(\"validators\", ctx.validators)(\"asyncValidators\", ctx.asyncValidators)(\"hidden\", ctx.maxItemsReached)(\"placeholder\", ctx.items.length ? ctx.placeholder : ctx.secondaryPlaceholder)(\"inputClass\", ctx.inputClass)(\"inputId\", ctx.inputId)(\"tabindex\", ctx.tabindex);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(5, 25, ctx.isProgressBarVisible$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasErrors());\n    }\n  },\n  dependencies: [TagComponent, TagInputForm, i2.NgClass, i2.NgForOf, i2.NgIf, i2.AsyncPipe],\n  styles: [\".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}.progress-bar[_ngcontent-%COMP%], .progress-bar[_ngcontent-%COMP%]:before{height:2px;width:100%;margin:0}.progress-bar[_ngcontent-%COMP%]{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar[_ngcontent-%COMP%]:before{background-color:#82c4f8;content:\\\"\\\";-webkit-animation:_ngcontent-%COMP%_running-progress 2s cubic-bezier(.4,0,.2,1) infinite;animation:_ngcontent-%COMP%_running-progress 2s cubic-bezier(.4,0,.2,1) infinite}@-webkit-keyframes _ngcontent-%COMP%_running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}@keyframes _ngcontent-%COMP%_running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,Helvetica Neue,sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:all .3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#2196F3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:#000;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly[_ngcontent-%COMP%]{cursor:default}tag.readonly[_ngcontent-%COMP%]:focus, tag[_ngcontent-%COMP%]:focus{outline:0}tag.tag--editing[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:#000;color:initial}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#d0d0d0;color:#000;color:initial}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.minimal[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.minimal[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.dark[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.dark[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#025aa5}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.bootstrap[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.bootstrap[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#28a1c5}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.bootstrap3-info[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}[_nghost-%COMP%]{display:block}\"],\n  data: {\n    animation: animations\n  }\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tag-input',\n      providers: [CUSTOM_ACCESSOR],\n      animations: animations,\n      template: \"<div\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"ng2-tag-input\\\"\\n    (click)=\\\"focus(true, false)\\\"\\n    [attr.tabindex]=\\\"-1\\\"\\n    (drop)=\\\"dragZone ? onTagDropped($event, undefined) : undefined\\\"\\n    (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragover)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragend)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n    [class.ng2-tag-input--dropping]=\\\"isDropping()\\\"\\n    [class.ng2-tag-input--disabled]=\\\"disable\\\"\\n    [class.ng2-tag-input--loading]=\\\"isLoading\\\"\\n    [class.ng2-tag-input--invalid]=\\\"hasErrors()\\\"\\n    [class.ng2-tag-input--focused]=\\\"isInputFocused()\\\"\\n>\\n\\n    <!-- TAGS -->\\n    <div class=\\\"ng2-tags-container\\\">\\n        <tag\\n            *ngFor=\\\"let item of items; let i = index; trackBy: trackBy\\\"\\n            (onSelect)=\\\"selectItem(item)\\\"\\n            (onRemove)=\\\"onRemoveRequested(item, i)\\\"\\n            (onKeyDown)=\\\"handleKeydown($event)\\\"\\n            (onTagEdited)=\\\"updateEditedTag($event)\\\"\\n            (onBlur)=\\\"onTagBlurred($event, i)\\\"\\n            draggable=\\\"{{ editable }}\\\"\\n            (dragstart)=\\\"dragZone ? onDragStarted($event, item, i) : undefined\\\"\\n            (drop)=\\\"dragZone ? onTagDropped($event, i) : undefined\\\"\\n            (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n            (dragover)=\\\"dragZone ? onDragOver($event, i) : undefined\\\"\\n            (dragleave)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n            [canAddTag]=\\\"isTagValid\\\"\\n            [attr.tabindex]=\\\"0\\\"\\n            [disabled]=\\\"disable\\\"\\n            [@animation]=\\\"animationMetadata\\\"\\n            [hasRipple]=\\\"ripple\\\"\\n            [index]=\\\"i\\\"\\n            [removable]=\\\"removable\\\"\\n            [editable]=\\\"editable\\\"\\n            [displayBy]=\\\"displayBy\\\"\\n            [identifyBy]=\\\"identifyBy\\\"\\n            [template]=\\\"!!hasCustomTemplate() ? templates.first : undefined\\\"\\n            [draggable]=\\\"dragZone\\\"\\n            [model]=\\\"item\\\"\\n        >\\n        </tag>\\n\\n        <tag-input-form\\n            (onSubmit)=\\\"onFormSubmit()\\\"\\n            (onBlur)=\\\"blur()\\\"\\n            (click)=\\\"dropdown ? dropdown.show() : undefined\\\"\\n            (onKeydown)=\\\"fireEvents('keydown', $event)\\\"\\n            (onKeyup)=\\\"fireEvents('keyup', $event)\\\"\\n            [inputText]=\\\"inputText\\\"\\n            [disabled]=\\\"disable\\\"\\n            [validators]=\\\"validators\\\"\\n            [asyncValidators]=\\\"asyncValidators\\\"\\n            [hidden]=\\\"maxItemsReached\\\"\\n            [placeholder]=\\\"items.length ? placeholder : secondaryPlaceholder\\\"\\n            [inputClass]=\\\"inputClass\\\"\\n            [inputId]=\\\"inputId\\\"\\n            [tabindex]=\\\"tabindex\\\"\\n        >\\n        </tag-input-form>\\n    </div>\\n\\n    <div\\n        class=\\\"progress-bar\\\"\\n        *ngIf=\\\"isProgressBarVisible$ | async\\\"\\n    ></div>\\n</div>\\n\\n<!-- ERRORS -->\\n<div\\n    *ngIf=\\\"hasErrors()\\\"\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"error-messages\\\"\\n>\\n    <p\\n        *ngFor=\\\"let error of errors\\\"\\n        class=\\\"error-message\\\"\\n    >\\n        <span>{{ error }}</span>\\n    </p>\\n</div>\\n<ng-content></ng-content>\\n\",\n      styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.progress-bar,.progress-bar:before{height:2px;width:100%;margin:0}.progress-bar{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar:before{background-color:#82c4f8;content:\\\"\\\";-webkit-animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite;animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,Helvetica Neue,sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:all .3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag:not(.readonly):not(.tag--editing):focus{background:#2196F3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:#000;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly{cursor:default}tag.readonly:focus,tag:focus{outline:0}tag.tag--editing{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal tag{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal tag:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(.readonly):not(.tag--editing):active{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal tag.readonly{cursor:default}.minimal tag.readonly:focus,.minimal tag:focus{outline:0}.minimal tag.tag--editing{cursor:text}.dark tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark tag:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark tag.readonly{cursor:default}.dark tag.readonly:focus,.dark tag:focus{outline:0}.dark tag.tag--editing{cursor:text}.bootstrap tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap tag:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap tag:not(.readonly):not(.tag--editing):active{background:#025aa5}.bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap tag.readonly{cursor:default}.bootstrap tag.readonly:focus,.bootstrap tag:focus{outline:0}.bootstrap tag.tag--editing{cursor:text}.bootstrap3-info tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info tag:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info tag:not(.readonly):not(.tag--editing):active{background:#28a1c5}.bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info tag.readonly{cursor:default}.bootstrap3-info tag.readonly:focus,.bootstrap3-info tag:focus{outline:0}.bootstrap3-info tag.tag--editing{cursor:text}:host{display:block}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: DragProvider\n    }];\n  }, {\n    separatorKeys: [{\n      type: Input\n    }],\n    separatorKeyCodes: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    secondaryPlaceholder: [{\n      type: Input\n    }],\n    maxItems: [{\n      type: Input\n    }],\n    validators: [{\n      type: Input\n    }],\n    asyncValidators: [{\n      type: Input\n    }],\n    onlyFromAutocomplete: [{\n      type: Input\n    }],\n    errorMessages: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    onTextChangeDebounce: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    clearOnBlur: [{\n      type: Input\n    }],\n    hideForm: [{\n      type: Input\n    }],\n    addOnBlur: [{\n      type: Input\n    }],\n    addOnPaste: [{\n      type: Input\n    }],\n    pasteSplitPattern: [{\n      type: Input\n    }],\n    blinkIfDupe: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    allowDupes: [{\n      type: Input\n    }],\n    modelAsStrings: [{\n      type: Input\n    }],\n    trimTags: [{\n      type: Input\n    }],\n    inputText: [{\n      type: Input\n    }],\n    ripple: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    disable: [{\n      type: Input\n    }],\n    dragZone: [{\n      type: Input\n    }],\n    onRemoving: [{\n      type: Input\n    }],\n    onAdding: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    onAdd: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onTextChange: [{\n      type: Output\n    }],\n    onPaste: [{\n      type: Output\n    }],\n    onValidationError: [{\n      type: Output\n    }],\n    onTagEdited: [{\n      type: Output\n    }],\n    dropdown: [{\n      type: ContentChild,\n      args: [TagInputDropdown]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [TemplateRef, {\n        descendants: false\n      }]\n    }],\n    inputForm: [{\n      type: ViewChild,\n      args: [TagInputForm]\n    }],\n    tags: [{\n      type: ViewChildren,\n      args: [TagComponent]\n    }],\n    inputTextChange: [{\n      type: Output\n    }],\n    tabindexAttr: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }]\n  });\n})();\nconst optionsProvider = new OptionsProvider();\nclass TagInputModule {\n  /**\n   * @name withDefaults\n   * @param options {Options}\n   */\n  static withDefaults(options) {\n    optionsProvider.setOptions(options);\n  }\n}\nTagInputModule.ɵfac = function TagInputModule_Factory(t) {\n  return new (t || TagInputModule)();\n};\nTagInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TagInputModule\n});\nTagInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DragProvider, {\n    provide: COMPOSITION_BUFFER_MODE,\n    useValue: false\n  }],\n  imports: [[CommonModule, ReactiveFormsModule, FormsModule, Ng2DropdownModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TagInputModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ReactiveFormsModule, FormsModule, Ng2DropdownModule],\n      declarations: [TagInputComponent, DeleteIconComponent, TagInputForm, TagComponent, HighlightPipe, TagInputDropdown, TagRipple],\n      exports: [TagInputComponent, DeleteIconComponent, TagInputForm, TagComponent, HighlightPipe, TagInputDropdown, TagRipple],\n      providers: [DragProvider, {\n        provide: COMPOSITION_BUFFER_MODE,\n        useValue: false\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DeleteIconComponent, HighlightPipe, TagComponent, TagInputComponent, TagInputDropdown, TagInputForm, TagInputModule, TagRipple };","map":{"version":3,"names":["i0","Pipe","Injectable","Directive","Input","EventEmitter","Component","Output","ViewChild","HostBinding","HostListener","TemplateRef","ContentChildren","forwardRef","ContentChild","ViewChildren","NgModule","i1","FormControl","FormGroup","NG_VALUE_ACCESSOR","ReactiveFormsModule","FormsModule","COMPOSITION_BUFFER_MODE","i2","CommonModule","i1$1","Ng2Dropdown","Ng2DropdownModule","filter","filter$1","map","first","first$1","debounceTime","debounceTime$1","trigger","state","style","transition","animate","keyframes","distinctUntilChanged","_c0","TagComponent_div_1_ng_template_1_Template","rf","ctx","_c1","a0","a1","item","index","TagComponent_div_1_Template","ɵɵelementStart","ɵɵtemplate","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵattribute","editing","ɵɵadvance","ɵɵproperty","ɵɵpureFunction2","model","template","TagComponent_div_2_delete_icon_3_Template","_r6","ɵɵgetCurrentView","ɵɵlistener","TagComponent_div_2_delete_icon_3_Template_delete_icon_click_0_listener","$event","ɵɵrestoreView","ctx_r5","ɵɵresetView","remove","TagComponent_div_2_Template","_r8","TagComponent_div_2_Template_div_keydown_enter_1_listener","ctx_r7","disableEditMode","TagComponent_div_2_Template_div_keydown_escape_1_listener","ctx_r9","TagComponent_div_2_Template_div_click_1_listener","ctx_r10","stopPropagation","undefined","TagComponent_div_2_Template_div_blur_1_listener","ctx_r11","onBlurred","ɵɵtext","ctx_r1","getDisplayValue","ɵɵtextInterpolate1","isDeleteIconVisible","TagComponent_tag_ripple_3_Template","ɵɵelement","ctx_r2","rippleState","TagInputDropdown_ng2_menu_item_2_span_1_Template","ɵɵpipe","item_r1","$implicit","ctx_r4","ɵɵpipeBind2","displayBy","tagInput","inputForm","value","ɵɵsanitizeHtml","TagInputDropdown_ng2_menu_item_2_2_ng_template_0_Template","_c2","a2","last","TagInputDropdown_ng2_menu_item_2_2_Template","ctx_r8","index_r2","last_r3","templates","ɵɵpureFunction3","TagInputDropdown_ng2_menu_item_2_Template","length","TagInputComponent_tag_2_Template","TagInputComponent_tag_2_Template_tag_onSelect_0_listener","restoredCtx","item_r3","selectItem","TagInputComponent_tag_2_Template_tag_onRemove_0_listener","i_r4","onRemoveRequested","TagInputComponent_tag_2_Template_tag_onKeyDown_0_listener","handleKeydown","TagInputComponent_tag_2_Template_tag_onTagEdited_0_listener","updateEditedTag","TagInputComponent_tag_2_Template_tag_onBlur_0_listener","onTagBlurred","TagInputComponent_tag_2_Template_tag_dragstart_0_listener","dragZone","onDragStarted","TagInputComponent_tag_2_Template_tag_drop_0_listener","ctx_r12","onTagDropped","TagInputComponent_tag_2_Template_tag_dragenter_0_listener","ctx_r13","onDragOver","TagInputComponent_tag_2_Template_tag_dragover_0_listener","ctx_r14","TagInputComponent_tag_2_Template_tag_dragleave_0_listener","ctx_r15","dragProvider","onDragEnd","ɵɵpropertyInterpolate","editable","isTagValid","disable","animationMetadata","ripple","removable","identifyBy","hasCustomTemplate","TagInputComponent_div_4_Template","TagInputComponent_div_6_p_1_Template","error_r17","ɵɵtextInterpolate","TagInputComponent_div_6_Template","theme","errors","_c3","escape","s","replace","HighlightPipe","transform","arg","trim","regex","RegExp","e","ɵfac","HighlightPipe_Factory","t","ɵpipe","ɵɵdefinePipe","name","type","pure","ngDevMode","ɵsetClassMetadata","args","PLACEHOLDER","SECONDARY_PLACEHOLDER","KEYDOWN","KEYUP","FOCUS","MAX_ITEMS_WARNING","ACTIONS_KEYS","DELETE","SWITCH_PREV","SWITCH_NEXT","TAB","KEY_PRESS_ACTIONS","DRAG_AND_DROP_KEY","NEXT","PREV","DragProvider","constructor","dragging","dropping","setDraggedItem","event","tag","dataTransfer","setData","JSON","stringify","getDraggedItem","data","getData","parse","setSender","sender","setReceiver","receiver","indexDragged","indexDropped","onAddingRequested","setState","getState","key","DragProvider_Factory","ɵprov","ɵɵdefineInjectable","token","factory","defaults","separatorKeys","separatorKeyCodes","maxItems","Infinity","placeholder","secondaryPlaceholder","validators","asyncValidators","onlyFromAutocomplete","errorMessages","onTextChangeDebounce","inputId","inputClass","clearOnBlur","hideForm","addOnBlur","addOnPaste","pasteSplitPattern","blinkIfDupe","allowDupes","modelAsStrings","trimTags","tabIndex","onRemoving","onAdding","animationDuration","enter","leave","dropdown","appendToBody","offset","focusFirstElement","showDropdownIfEmpty","minimumTextLength","limitItemsTo","keepOpen","dynamicUpdate","zIndex","matchingFn","target","targetValue","toString","toLowerCase","indexOf","OptionsProvider","setOptions","options","isObject","obj","Object","TagInputAccessor","_items","items","_onChangeCallback","onTouched","_onTouchedCallback","writeValue","registerOnChange","fn","registerOnTouched","getItemValue","fromDropdown","property","getItemDisplay","getItemsWithout","position","TagInputAccessor_Factory","ɵdir","ɵɵdefineDirective","inputs","listen","listenerType","action","condition","listeners","hasOwnProperty","Error","push","TagInputForm","onSubmit","onBlur","onFocus","onKeyup","onKeydown","inputTextChange","tabindex","disabled","inputText","text","setValue","emit","ngOnInit","setValidators","setAsyncValidators","form","ngOnChanges","changes","firstChange","currentValue","controls","enable","get","isInputFocused","doc","document","activeElement","input","nativeElement","getErrorMessages","messages","keys","err","hasError","hasErrors","dirty","valid","focus","blur","getElementPosition","getBoundingClientRect","destroy","parentElement","removeChild","onKeyDown","submit","onKeyUp","preventDefault","TagInputForm_Factory","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","TagInputForm_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","TagInputForm_Template","TagInputForm_Template_form_ngSubmit_0_listener","TagInputForm_Template_input_focus_1_listener","TagInputForm_Template_input_blur_1_listener","TagInputForm_Template_input_keydown_1_listener","TagInputForm_Template_input_keyup_1_listener","dependencies","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","DefaultValueAccessor","MinLengthValidator","NgControlStatus","FormControlName","NgClass","styles","selector","TagRipple","TagRipple_Factory","TagRipple_Template","animation","width","opacity","borderRadius","animations","DeleteIconComponent","DeleteIconComponent_Factory","DeleteIconComponent_Template","ɵɵnamespaceSVG","navigator","window","userAgent","vendor","isChrome","test","TagComponent","element","renderer","cdRef","onSelect","onRemove","onTagEdited","readonly","select","move","moving","keydown","keyCode","blink","classList","add","setTimeout","toggleEditMode","activateEditMode","innerText","result","isRippleVisible","hasRipple","getContentEditableText","setContentEditableText","storeNewValue","detectChanges","getContentEditable","exists","hasId","canAddTag","querySelector","TagComponent_Factory","ɵɵdirectiveInject","ElementRef","Renderer2","ChangeDetectorRef","TagComponent_Query","hostVars","hostBindings","TagComponent_HostBindings","TagComponent_keydown_HostBindingHandler","ɵɵclassProp","TagComponent_Template","TagComponent_Template_div_click_0_listener","TagComponent_Template_div_dblclick_0_listener","TagComponent_Template_div_mousedown_0_listener","TagComponent_Template_div_mouseup_0_listener","NgSwitch","NgSwitchCase","NgTemplateOutlet","NgIf","TagInputDropdown","injector","_this","TagInputComponent","_autocompleteItems","show","maxItemsReached","getFormValue","hasMinimumText","calculatePosition","getMatchingItems","hasItems","isHidden","isVisible","isDisabled","shouldShow","shouldHide","autocompleteObservable","getItemsFromObservable","hide","setItems","requestAdding","_ref","_asyncToGenerator","createTagModel","catch","_x","apply","arguments","resetItems","setLoadingState","subscribeFn","populateItems","pipe","subscribe","autocompleteItems","ngAfterViewInit","onItemClicked","onHide","DEBOUNCE_TIME","KEEP_OPEN","onTextChange","asObservable","updatePosition","menu","dropdownState","menuState","selectedItem","scrollListener","onWindowBlur","formValue","display","dupesAllowed","hasValue","tags","some","slice","isLoading","TagInputDropdown_Factory","Injector","contentQueries","TagInputDropdown_ContentQueries","dirIndex","ɵɵcontentQuery","TagInputDropdown_Query","TagInputDropdown_HostBindings","TagInputDropdown_scroll_HostBindingHandler","ɵɵresolveWindow","TagInputDropdown_blur_HostBindingHandler","TagInputDropdown_Template","Ng2DropdownMenu","Ng2MenuItem","NgForOf","NgSwitchDefault","encapsulation","CUSTOM_ACCESSOR","provide","useExisting","multi","_this2","this","onAdd","onPaste","onValidationError","inputTextValue","appendTag","createTag","val","fromAutocomplete","dupe","findDupe","find","isFromAutocomplete","assertions","Boolean","onPasteCallback","_ref2","getText","isIE","clipboardData","requests","split","setInputValue","resetInput","Promise","all","then","_x2","tabindexAttr","setUpKeypressListeners","setupSeparatorKeysListener","setUpInputKeydownListeners","observers","setUpTextChangeSubscriber","setUpOnBlurSubscriber","setUpOnPasteListener","statusChanges$","statusChanges","status","isProgressBarVisible$","hasReachedMaxItems","console","warn","setAnimationMetadata","resolve","removeItem","giveupFocus","reject","addItem","isReadonly","selectedTag","fireEvents","eventName","forEach","listener","call","which","shiftKey","moveToTag","isFirstTag","isLastTag","onFormSubmit","_this3","emitEvent","control","getControl","applyFocus","displayAutocomplete","menuTemplate","zone","isDropping","isReceiver","changedElement","trackBy","direction","isLast","isFirst","stopSwitch","getTagIndex","getTagAtIndex","toArray","findIndex","reset","appendItem","statusUpdate$","statusUpdate","useSeparatorKeys","hasKeyCode","hasKey","isIMEProcessing","isCorrectKey","valueChanges","filterFn","id","params","TagInputComponent_Factory","TagInputComponent_ContentQueries","TagInputComponent_Query","TagInputComponent_HostBindings","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ngContentSelectors","TagInputComponent_Template","ɵɵprojectionDef","TagInputComponent_Template_div_click_0_listener","TagInputComponent_Template_div_drop_0_listener","TagInputComponent_Template_div_dragenter_0_listener","TagInputComponent_Template_div_dragover_0_listener","TagInputComponent_Template_div_dragend_0_listener","TagInputComponent_Template_tag_input_form_onSubmit_3_listener","TagInputComponent_Template_tag_input_form_onBlur_3_listener","TagInputComponent_Template_tag_input_form_click_3_listener","TagInputComponent_Template_tag_input_form_onKeydown_3_listener","TagInputComponent_Template_tag_input_form_onKeyup_3_listener","ɵɵprojection","ɵɵpipeBind1","AsyncPipe","providers","descendants","optionsProvider","TagInputModule","withDefaults","TagInputModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","useValue","imports","declarations","exports"],"sources":["C:/Repository/Jupiter/juno-app/node_modules/ngx-chips/fesm2020/ngx-chips.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Pipe, Injectable, Directive, Input, EventEmitter, Component, Output, ViewChild, HostBinding, HostListener, TemplateRef, ContentChildren, forwardRef, ContentChild, ViewChildren, NgModule } from '@angular/core';\nimport * as i1 from '@angular/forms';\nimport { FormControl, FormGroup, NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from 'ng2-material-dropdown';\nimport { Ng2Dropdown, Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { filter as filter$1, map, first as first$1, debounceTime as debounceTime$1 } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport { first, distinctUntilChanged, debounceTime, filter } from 'rxjs/operators';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\nclass HighlightPipe {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    transform(value, arg) {\n        if (!arg.trim()) {\n            return value;\n        }\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        }\n        catch (e) {\n            return value;\n        }\n    }\n}\nHighlightPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: HighlightPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });\nHighlightPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: HighlightPipe, name: \"highlight\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: HighlightPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'highlight'\n                }]\n        }] });\n\n/*\n** constants and default values for <tag-input>\n */\nconst PLACEHOLDER = '+ Tag';\nconst SECONDARY_PLACEHOLDER = 'Enter a new tag';\nconst KEYDOWN = 'keydown';\nconst KEYUP = 'keyup';\nconst FOCUS = 'focus';\nconst MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\nconst ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\nconst KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    46: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\nconst DRAG_AND_DROP_KEY = 'Text';\nconst NEXT = 'NEXT';\nconst PREV = 'PREV';\n\nclass DragProvider {\n    constructor() {\n        this.state = {\n            dragging: false,\n            dropping: false,\n            index: undefined\n        };\n    }\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    setDraggedItem(event, tag) {\n        if (event && event.dataTransfer) {\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n        }\n    }\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    getDraggedItem(event) {\n        if (event && event.dataTransfer) {\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n            try {\n                return JSON.parse(data);\n            }\n            catch {\n                return;\n            }\n        }\n    }\n    /**\n     * @name setSender\n     * @param sender\n     */\n    setSender(sender) {\n        this.sender = sender;\n    }\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    setReceiver(receiver) {\n        this.receiver = receiver;\n    }\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    onTagDropped(tag, indexDragged, indexDropped) {\n        this.onDragEnd();\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n    /**\n     * @name setState\n     * @param state\n     */\n    setState(state) {\n        this.state = { ...this.state, ...state };\n    }\n    /**\n     * @name getState\n     * @param key\n     */\n    getState(key) {\n        return key ? this.state[key] : this.state;\n    }\n    /**\n     * @name onDragEnd\n     */\n    onDragEnd() {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\nDragProvider.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DragProvider, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nDragProvider.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DragProvider });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DragProvider, decorators: [{\n            type: Injectable\n        }] });\n\nconst defaults = {\n    tagInput: {\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: {\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(value, target) {\n    const targetValue = target[this.displayBy].toString();\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n\nclass OptionsProvider {\n    setOptions(options) {\n        OptionsProvider.defaults.tagInput = { ...defaults.tagInput, ...options.tagInput };\n        OptionsProvider.defaults.dropdown = { ...defaults.dropdown, ...options.dropdown };\n    }\n}\nOptionsProvider.defaults = defaults;\n\nfunction isObject(obj) {\n    return obj === Object(obj);\n}\nclass TagInputAccessor {\n    constructor() {\n        this._items = [];\n        /**\n         * @name displayBy\n         */\n        this.displayBy = OptionsProvider.defaults.tagInput.displayBy;\n        /**\n         * @name identifyBy\n         */\n        this.identifyBy = OptionsProvider.defaults.tagInput.identifyBy;\n    }\n    get items() {\n        return this._items;\n    }\n    set items(items) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n    onTouched() {\n        this._onTouchedCallback();\n    }\n    writeValue(items) {\n        this._items = items || [];\n    }\n    registerOnChange(fn) {\n        this._onChangeCallback = fn;\n    }\n    registerOnTouched(fn) {\n        this._onTouchedCallback = fn;\n    }\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    getItemValue(item, fromDropdown = false) {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    getItemDisplay(item, fromDropdown = false) {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    getItemsWithout(index) {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\nTagInputAccessor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputAccessor, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nTagInputAccessor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagInputAccessor, inputs: { displayBy: \"displayBy\", identifyBy: \"identifyBy\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputAccessor, decorators: [{\n            type: Directive\n        }], propDecorators: { displayBy: [{\n                type: Input\n            }], identifyBy: [{\n                type: Input\n            }] } });\n\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nfunction listen(listenerType, action, condition = true) {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n\nclass TagInputForm {\n    constructor() {\n        /**\n         * @name onSubmit\n         */\n        this.onSubmit = new EventEmitter();\n        /**\n         * @name onBlur\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @name onFocus\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * @name onKeyup\n         */\n        this.onKeyup = new EventEmitter();\n        /**\n         * @name onKeydown\n         */\n        this.onKeydown = new EventEmitter();\n        /**\n         * @name inputTextChange\n         */\n        this.inputTextChange = new EventEmitter();\n        /**\n         * @name validators\n         */\n        this.validators = [];\n        /**\n         * @name asyncValidators\n         * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n         */\n        this.asyncValidators = [];\n        /**\n         * @name tabindex\n         * @desc pass through the specified tabindex to the input\n         */\n        this.tabindex = '';\n        /**\n         * @name disabled\n         */\n        this.disabled = false;\n        this.item = new FormControl({ value: '', disabled: this.disabled });\n    }\n    /**\n     * @name inputText\n     */\n    get inputText() {\n        return this.item.value;\n    }\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    set inputText(text) {\n        this.item.setValue(text);\n        this.inputTextChange.emit(text);\n    }\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            }\n            else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n    /**\n     * @name value\n     */\n    get value() {\n        return this.form.get('item');\n    }\n    /**\n     * @name isInputFocused\n     */\n    isInputFocused() {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    getErrorMessages(messages) {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n    /**\n     * @name hasErrors\n     */\n    hasErrors() {\n        const { dirty, value, valid } = this.form;\n        return dirty && value.item && !valid;\n    }\n    /**\n     * @name focus\n     */\n    focus() {\n        this.input.nativeElement.focus();\n    }\n    /**\n     * @name blur\n     */\n    blur() {\n        this.input.nativeElement.blur();\n    }\n    /**\n     * @name getElementPosition\n     */\n    getElementPosition() {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    destroy() {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n        }\n        else {\n            return this.onKeydown.emit($event);\n        }\n    }\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n    /**\n     * @name submit\n     */\n    submit($event) {\n        $event.preventDefault();\n        this.onSubmit.emit($event);\n    }\n}\nTagInputForm.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputForm, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTagInputForm.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagInputForm, selector: \"tag-input-form\", inputs: { placeholder: \"placeholder\", validators: \"validators\", asyncValidators: \"asyncValidators\", inputId: \"inputId\", inputClass: \"inputClass\", tabindex: \"tabindex\", disabled: \"disabled\", inputText: \"inputText\" }, outputs: { onSubmit: \"onSubmit\", onBlur: \"onBlur\", onFocus: \"onFocus\", onKeyup: \"onKeyup\", onKeydown: \"onKeydown\", inputTextChange: \"inputTextChange\" }, viewQueries: [{ propertyName: \"input\", first: true, predicate: [\"input\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<!-- form -->\\n<form (ngSubmit)=\\\"submit($event)\\\" [formGroup]=\\\"form\\\">\\n    <input #input\\n\\n           type=\\\"text\\\"\\n           class=\\\"ng2-tag-input__text-input\\\"\\n           autocomplete=\\\"off\\\"\\n           tabindex=\\\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\\\"\\n           minlength=\\\"1\\\"\\n           formControlName=\\\"item\\\"\\n\\n           [ngClass]=\\\"inputClass\\\"\\n           [attr.id]=\\\"inputId\\\"\\n           [attr.placeholder]=\\\"placeholder\\\"\\n           [attr.aria-label]=\\\"placeholder\\\"\\n           [attr.tabindex]=\\\"tabindex\\\"\\n           [attr.disabled]=\\\"disabled ? disabled : null\\\"\\n\\n           (focus)=\\\"onFocus.emit($event)\\\"\\n           (blur)=\\\"onBlur.emit($event)\\\"\\n           (keydown)=\\\"onKeyDown($event)\\\"\\n           (keyup)=\\\"onKeyUp($event)\\\"\\n    />\\n</form>\\n\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.ng2-tag-input__text-input{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,Helvetica Neue,sans-serif}.ng2-tag-input__text-input:focus{outline:0}.ng2-tag-input__text-input[disabled=true]{opacity:.5;background:#fff}\\n\"], directives: [{ type: i1.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { type: i1.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { type: i1.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { type: i1.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { type: i1.MinLengthValidator, selector: \"[minlength][formControlName],[minlength][formControl],[minlength][ngModel]\", inputs: [\"minlength\"] }, { type: i1.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { type: i1.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputForm, decorators: [{\n            type: Component,\n            args: [{ selector: 'tag-input-form', template: \"<!-- form -->\\n<form (ngSubmit)=\\\"submit($event)\\\" [formGroup]=\\\"form\\\">\\n    <input #input\\n\\n           type=\\\"text\\\"\\n           class=\\\"ng2-tag-input__text-input\\\"\\n           autocomplete=\\\"off\\\"\\n           tabindex=\\\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\\\"\\n           minlength=\\\"1\\\"\\n           formControlName=\\\"item\\\"\\n\\n           [ngClass]=\\\"inputClass\\\"\\n           [attr.id]=\\\"inputId\\\"\\n           [attr.placeholder]=\\\"placeholder\\\"\\n           [attr.aria-label]=\\\"placeholder\\\"\\n           [attr.tabindex]=\\\"tabindex\\\"\\n           [attr.disabled]=\\\"disabled ? disabled : null\\\"\\n\\n           (focus)=\\\"onFocus.emit($event)\\\"\\n           (blur)=\\\"onBlur.emit($event)\\\"\\n           (keydown)=\\\"onKeyDown($event)\\\"\\n           (keyup)=\\\"onKeyUp($event)\\\"\\n    />\\n</form>\\n\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.ng2-tag-input__text-input{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,Helvetica Neue,sans-serif}.ng2-tag-input__text-input:focus{outline:0}.ng2-tag-input__text-input[disabled=true]{opacity:.5;background:#fff}\\n\"] }]\n        }], propDecorators: { onSubmit: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onKeyup: [{\n                type: Output\n            }], onKeydown: [{\n                type: Output\n            }], inputTextChange: [{\n                type: Output\n            }], placeholder: [{\n                type: Input\n            }], validators: [{\n                type: Input\n            }], asyncValidators: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], input: [{\n                type: ViewChild,\n                args: ['input']\n            }], inputText: [{\n                type: Input\n            }] } });\n\nclass TagRipple {\n    constructor() {\n        this.state = 'none';\n    }\n}\nTagRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagRipple, deps: [], target: i0.ɵɵFactoryTarget.Component });\nTagRipple.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagRipple, selector: \"tag-ripple\", inputs: { state: \"state\" }, ngImport: i0, template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `, isInline: true, styles: [\":host{width:100%;height:100%;left:0;overflow:hidden;position:absolute}.tag-ripple{background:rgba(0,0,0,.1);top:50%;left:50%;height:100%;transform:translate(-50%,-50%);position:absolute}\\n\"], animations: [\n        trigger('ink', [\n            state('none', style({ width: 0, opacity: 0 })),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({ opacity: 1, offset: 0, width: '30%', borderRadius: '100%' }),\n                    style({ opacity: 1, offset: 0.5, width: '50%' }),\n                    style({ opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px' })\n                ]))\n            ])\n        ])\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagRipple, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'tag-ripple',\n                    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n                    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n                    animations: [\n                        trigger('ink', [\n                            state('none', style({ width: 0, opacity: 0 })),\n                            transition('none => clicked', [\n                                animate(300, keyframes([\n                                    style({ opacity: 1, offset: 0, width: '30%', borderRadius: '100%' }),\n                                    style({ opacity: 1, offset: 0.5, width: '50%' }),\n                                    style({ opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px' })\n                                ]))\n                            ])\n                        ])\n                    ]\n                }]\n        }], propDecorators: { state: [{\n                type: Input\n            }] } });\n\nclass DeleteIconComponent {\n}\nDeleteIconComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DeleteIconComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nDeleteIconComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: DeleteIconComponent, selector: \"delete-icon\", ngImport: i0, template: \"<span>\\n    <svg\\n        height=\\\"16px\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        width=\\\"16px\\\"\\n    >\\n        <path\\n            d=\\\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\\\"\\n            fill=\\\"#121313\\\"\\n        />\\n    </svg>\\n</span>\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}:host(delete-icon){width:20px;height:16px;transition:all .15s;display:inline-block;text-align:right}:host(delete-icon) path{fill:#444}:host(delete-icon) svg{vertical-align:bottom;height:34px}:host(delete-icon):hover{transform:scale(1.5) translateY(-3px)}:host-context(.dark){text-align:right}:host-context(.dark) path{fill:#fff}:host-context(.dark) svg{vertical-align:bottom;height:34px}:host-context(.minimal){text-align:right}:host-context(.minimal) path{fill:#444}:host-context(.minimal) svg{vertical-align:bottom;height:34px}:host-context(.bootstrap){text-align:right}:host-context(.bootstrap) path{fill:#fff}:host-context(.bootstrap) svg{vertical-align:bottom;height:34px}:host-context(tag:focus) path,:host-context(tag:active) path{fill:#fff}:host-context(.dark tag:focus) path,:host-context(.dark tag:active) path{fill:#000}:host-context(.minimal tag:focus) path,:host-context(.minimal tag:active) path{fill:#000}:host-context(.bootstrap tag:focus) path,:host-context(.bootstrap tag:active) path{fill:#fff}:host-context(.bootstrap3-info){height:inherit}:host-context(.bootstrap3-info) path{fill:#fff}\\n\"] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: DeleteIconComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'delete-icon', template: \"<span>\\n    <svg\\n        height=\\\"16px\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        width=\\\"16px\\\"\\n    >\\n        <path\\n            d=\\\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\\\"\\n            fill=\\\"#121313\\\"\\n        />\\n    </svg>\\n</span>\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}:host(delete-icon){width:20px;height:16px;transition:all .15s;display:inline-block;text-align:right}:host(delete-icon) path{fill:#444}:host(delete-icon) svg{vertical-align:bottom;height:34px}:host(delete-icon):hover{transform:scale(1.5) translateY(-3px)}:host-context(.dark){text-align:right}:host-context(.dark) path{fill:#fff}:host-context(.dark) svg{vertical-align:bottom;height:34px}:host-context(.minimal){text-align:right}:host-context(.minimal) path{fill:#444}:host-context(.minimal) svg{vertical-align:bottom;height:34px}:host-context(.bootstrap){text-align:right}:host-context(.bootstrap) path{fill:#fff}:host-context(.bootstrap) svg{vertical-align:bottom;height:34px}:host-context(tag:focus) path,:host-context(tag:active) path{fill:#fff}:host-context(.dark tag:focus) path,:host-context(.dark tag:active) path{fill:#000}:host-context(.minimal tag:focus) path,:host-context(.minimal tag:active) path{fill:#000}:host-context(.bootstrap tag:focus) path,:host-context(.bootstrap tag:active) path{fill:#fff}:host-context(.bootstrap3-info){height:inherit}:host-context(.bootstrap3-info) path{fill:#fff}\\n\"] }]\n        }] });\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\nclass TagComponent {\n    constructor(element, renderer, cdRef) {\n        this.element = element;\n        this.renderer = renderer;\n        this.cdRef = cdRef;\n        /**\n         * @name disabled\n         */\n        this.disabled = false;\n        /**\n         * @name onSelect\n         */\n        this.onSelect = new EventEmitter();\n        /**\n         * @name onRemove\n         */\n        this.onRemove = new EventEmitter();\n        /**\n         * @name onBlur\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @name onKeyDown\n         */\n        this.onKeyDown = new EventEmitter();\n        /**\n         * @name onTagEdited\n         */\n        this.onTagEdited = new EventEmitter();\n        /**\n         * @name editing\n         */\n        this.editing = false;\n        /**\n         * @name rippleState\n         */\n        this.rippleState = 'none';\n    }\n    /**\n     * @name readonly {boolean}\n     */\n    get readonly() {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    }\n    /**\n     * @name select\n     */\n    select($event) {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n        if ($event) {\n            $event.stopPropagation();\n        }\n        this.focus();\n        this.onSelect.emit(this.model);\n    }\n    /**\n     * @name remove\n     */\n    remove($event) {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n    /**\n     * @name focus\n     */\n    focus() {\n        this.element.nativeElement.focus();\n    }\n    move() {\n        this.moving = true;\n    }\n    /**\n     * @name keydown\n     * @param event\n     */\n    keydown(event) {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event);\n            }\n        }\n        else {\n            this.onKeyDown.emit({ event, model: this.model });\n        }\n    }\n    /**\n     * @name blink\n     */\n    blink() {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n    /**\n     * @name toggleEditMode\n     */\n    toggleEditMode() {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    onBlurred(event) {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n        this.disableEditMode();\n        const value = event.target.innerText;\n        const result = typeof this.model === 'string'\n            ? value\n            : { ...this.model, [this.displayBy]: value };\n        this.onBlur.emit(result);\n    }\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    getDisplayValue(item) {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    get isRippleVisible() {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    disableEditMode($event) {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n        this.editing = false;\n        classList.remove('tag--editing');\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n    /**\n     * @name isDeleteIconVisible\n     */\n    isDeleteIconVisible() {\n        return (!this.readonly && !this.disabled && this.removable && !this.editing);\n    }\n    /**\n     * @name getContentEditableText\n     */\n    getContentEditableText() {\n        const input = this.getContentEditable();\n        return input ? input.innerText.trim() : '';\n    }\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    setContentEditableText(model) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n        input.innerText = value;\n    }\n    /**\n     * @name\n     */\n    activateEditMode() {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n        this.editing = true;\n    }\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    storeNewValue(input) {\n        const exists = (tag) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n        const model = typeof this.model === 'string'\n            ? input\n            : {\n                index: this.index,\n                [this.identifyBy]: hasId()\n                    ? this.model[this.identifyBy]\n                    : input,\n                [this.displayBy]: input\n            };\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        }\n        else {\n            this.setContentEditableText(this.model);\n        }\n    }\n    /**\n     * @name getContentEditable\n     */\n    getContentEditable() {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\nTagComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTagComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagComponent, selector: \"tag\", inputs: { model: \"model\", removable: \"removable\", editable: \"editable\", template: \"template\", displayBy: \"displayBy\", identifyBy: \"identifyBy\", index: \"index\", hasRipple: \"hasRipple\", disabled: \"disabled\", canAddTag: \"canAddTag\" }, outputs: { onSelect: \"onSelect\", onRemove: \"onRemove\", onBlur: \"onBlur\", onKeyDown: \"onKeyDown\", onTagEdited: \"onTagEdited\" }, host: { listeners: { \"keydown\": \"keydown($event)\" }, properties: { \"class.moving\": \"this.moving\" } }, viewQueries: [{ propertyName: \"ripple\", first: true, predicate: TagRipple, descendants: true }], ngImport: i0, template: \"<div (click)=\\\"select($event)\\\"\\n     (dblclick)=\\\"toggleEditMode()\\\"\\n     (mousedown)=\\\"rippleState='clicked'\\\"\\n     (mouseup)=\\\"rippleState='none'\\\"\\n     [ngSwitch]=\\\"!!template\\\"\\n     [class.disabled]=\\\"disabled\\\"\\n     [attr.tabindex]=\\\"-1\\\"\\n     [attr.aria-label]=\\\"getDisplayValue(model)\\\">\\n\\n    <div *ngSwitchCase=\\\"true\\\" [attr.contenteditable]=\\\"editing\\\">\\n        <!-- CUSTOM TEMPLATE -->\\n        <ng-template\\n            [ngTemplateOutletContext]=\\\"{ item: model, index: index }\\\"\\n            [ngTemplateOutlet]=\\\"template\\\">\\n        </ng-template>\\n    </div>\\n\\n    <div *ngSwitchCase=\\\"false\\\" class=\\\"tag-wrapper\\\">\\n        <!-- TAG NAME -->\\n        <div [attr.contenteditable]=\\\"editing\\\"\\n             [attr.title]=\\\"getDisplayValue(model)\\\"\\n             class=\\\"tag__text inline\\\"\\n             spellcheck=\\\"false\\\"\\n             (keydown.enter)=\\\"disableEditMode($event)\\\"\\n             (keydown.escape)=\\\"disableEditMode($event)\\\"\\n             (click)=\\\"editing ? $event.stopPropagation() : undefined\\\"\\n             (blur)=\\\"onBlurred($event)\\\">\\n            {{ getDisplayValue(model) }}\\n        </div>\\n\\n        <!-- 'X' BUTTON -->\\n        <delete-icon\\n            aria-label=\\\"Remove tag\\\"\\n            role=\\\"button\\\"\\n            (click)=\\\"remove($event)\\\"\\n            *ngIf=\\\"isDeleteIconVisible()\\\">\\n        </delete-icon>\\n    </div>\\n</div>\\n\\n<tag-ripple [state]=\\\"rippleState\\\"\\n            [attr.tabindex]=\\\"-1\\\"\\n            *ngIf=\\\"isRippleVisible\\\">\\n</tag-ripple>\\n\", styles: [\":host,:host>div,:host>div:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}:host{max-width:400px}:host.blink{-webkit-animation:blink .3s normal forwards ease-in-out;animation:blink .3s normal forwards ease-in-out}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}:host .disabled{cursor:not-allowed}:host [contenteditable=true]{outline:0}.tag-wrapper{flex-direction:row;display:flex}.tag__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\\n\"], components: [{ type: DeleteIconComponent, selector: \"delete-icon\" }, { type: TagRipple, selector: \"tag-ripple\", inputs: [\"state\"] }], directives: [{ type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'tag', template: \"<div (click)=\\\"select($event)\\\"\\n     (dblclick)=\\\"toggleEditMode()\\\"\\n     (mousedown)=\\\"rippleState='clicked'\\\"\\n     (mouseup)=\\\"rippleState='none'\\\"\\n     [ngSwitch]=\\\"!!template\\\"\\n     [class.disabled]=\\\"disabled\\\"\\n     [attr.tabindex]=\\\"-1\\\"\\n     [attr.aria-label]=\\\"getDisplayValue(model)\\\">\\n\\n    <div *ngSwitchCase=\\\"true\\\" [attr.contenteditable]=\\\"editing\\\">\\n        <!-- CUSTOM TEMPLATE -->\\n        <ng-template\\n            [ngTemplateOutletContext]=\\\"{ item: model, index: index }\\\"\\n            [ngTemplateOutlet]=\\\"template\\\">\\n        </ng-template>\\n    </div>\\n\\n    <div *ngSwitchCase=\\\"false\\\" class=\\\"tag-wrapper\\\">\\n        <!-- TAG NAME -->\\n        <div [attr.contenteditable]=\\\"editing\\\"\\n             [attr.title]=\\\"getDisplayValue(model)\\\"\\n             class=\\\"tag__text inline\\\"\\n             spellcheck=\\\"false\\\"\\n             (keydown.enter)=\\\"disableEditMode($event)\\\"\\n             (keydown.escape)=\\\"disableEditMode($event)\\\"\\n             (click)=\\\"editing ? $event.stopPropagation() : undefined\\\"\\n             (blur)=\\\"onBlurred($event)\\\">\\n            {{ getDisplayValue(model) }}\\n        </div>\\n\\n        <!-- 'X' BUTTON -->\\n        <delete-icon\\n            aria-label=\\\"Remove tag\\\"\\n            role=\\\"button\\\"\\n            (click)=\\\"remove($event)\\\"\\n            *ngIf=\\\"isDeleteIconVisible()\\\">\\n        </delete-icon>\\n    </div>\\n</div>\\n\\n<tag-ripple [state]=\\\"rippleState\\\"\\n            [attr.tabindex]=\\\"-1\\\"\\n            *ngIf=\\\"isRippleVisible\\\">\\n</tag-ripple>\\n\", styles: [\":host,:host>div,:host>div:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}:host{max-width:400px}:host.blink{-webkit-animation:blink .3s normal forwards ease-in-out;animation:blink .3s normal forwards ease-in-out}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}:host .disabled{cursor:not-allowed}:host [contenteditable=true]{outline:0}.tag-wrapper{flex-direction:row;display:flex}.tag__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], template: [{\n                type: Input\n            }], displayBy: [{\n                type: Input\n            }], identifyBy: [{\n                type: Input\n            }], index: [{\n                type: Input\n            }], hasRipple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], canAddTag: [{\n                type: Input\n            }], onSelect: [{\n                type: Output\n            }], onRemove: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onKeyDown: [{\n                type: Output\n            }], onTagEdited: [{\n                type: Output\n            }], moving: [{\n                type: HostBinding,\n                args: ['class.moving']\n            }], ripple: [{\n                type: ViewChild,\n                args: [TagRipple]\n            }], keydown: [{\n                type: HostListener,\n                args: ['keydown', ['$event']]\n            }] } });\n\n/**\n * @name animations\n */\nconst animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate('{{ enter }}', keyframes([\n                style({ opacity: 0, offset: 0, transform: 'translate(0px, 20px)' }),\n                style({ opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)' }),\n                style({ opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)' }),\n                style({ opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)' }),\n                style({ opacity: 1, offset: 1, transform: 'translate(0px, 0px)' })\n            ]))\n        ]),\n        transition(':leave', [\n            animate('{{ leave }}', keyframes([\n                style({ opacity: 1, transform: 'translateX(0)', offset: 0 }),\n                style({ opacity: 1, transform: 'translateX(-15px)', offset: 0.7 }),\n                style({ opacity: 0, transform: 'translateX(100%)', offset: 1.0 })\n            ]))\n        ])\n    ])\n];\n\nclass TagInputDropdown {\n    constructor(injector) {\n        this.injector = injector;\n        /**\n         * @name offset\n         */\n        this.offset = defaults.dropdown.offset;\n        /**\n         * @name focusFirstElement\n         */\n        this.focusFirstElement = defaults.dropdown.focusFirstElement;\n        /**\n         * - show autocomplete dropdown if the value of input is empty\n         * @name showDropdownIfEmpty\n         */\n        this.showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n        /**\n         * - desc minimum text length in order to display the autocomplete dropdown\n         * @name minimumTextLength\n         */\n        this.minimumTextLength = defaults.dropdown.minimumTextLength;\n        /**\n         * - number of items to display in the autocomplete dropdown\n         * @name limitItemsTo\n         */\n        this.limitItemsTo = defaults.dropdown.limitItemsTo;\n        /**\n         * @name displayBy\n         */\n        this.displayBy = defaults.dropdown.displayBy;\n        /**\n         * @name identifyBy\n         */\n        this.identifyBy = defaults.dropdown.identifyBy;\n        /**\n         * @description a function a developer can use to implement custom matching for the autocomplete\n         * @name matchingFn\n         */\n        this.matchingFn = defaults.dropdown.matchingFn;\n        /**\n         * @name appendToBody\n         */\n        this.appendToBody = defaults.dropdown.appendToBody;\n        /**\n         * @name keepOpen\n         * @description option to leave dropdown open when adding a new item\n         */\n        this.keepOpen = defaults.dropdown.keepOpen;\n        /**\n         * @name dynamicUpdate\n         */\n        this.dynamicUpdate = defaults.dropdown.dynamicUpdate;\n        /**\n         * @name zIndex\n         */\n        this.zIndex = defaults.dropdown.zIndex;\n        /**\n         * list of items that match the current value of the input (for autocomplete)\n         * @name items\n         */\n        this.items = [];\n        /**\n         * @name tagInput\n         */\n        this.tagInput = this.injector.get(TagInputComponent);\n        /**\n         * @name _autocompleteItems\n         */\n        this._autocompleteItems = [];\n        /**\n         *\n         * @name show\n         */\n        this.show = () => {\n            const maxItemsReached = this.tagInput.items.length === this.tagInput.maxItems;\n            const value = this.getFormValue();\n            const hasMinimumText = value.trim().length >= this.minimumTextLength;\n            const position = this.calculatePosition();\n            const items = this.getMatchingItems(value);\n            const hasItems = items.length > 0;\n            const isHidden = this.isVisible === false;\n            const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n            const isDisabled = this.tagInput.disable;\n            const shouldShow = isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n            const shouldHide = this.isVisible && !hasItems;\n            if (this.autocompleteObservable && hasMinimumText) {\n                return this.getItemsFromObservable(value);\n            }\n            if ((!this.showDropdownIfEmpty && !value) ||\n                maxItemsReached ||\n                isDisabled) {\n                return this.dropdown.hide();\n            }\n            this.setItems(items);\n            if (shouldShow) {\n                this.dropdown.show(position);\n            }\n            else if (shouldHide) {\n                this.hide();\n            }\n        };\n        /**\n         * @name requestAdding\n         * @param item {Ng2MenuItem}\n         */\n        this.requestAdding = async (item) => {\n            const tag = this.createTagModel(item);\n            await this.tagInput.onAddingRequested(true, tag).catch(() => { });\n        };\n        /**\n         * @name resetItems\n         */\n        this.resetItems = () => {\n            this.items = [];\n        };\n        /**\n         * @name getItemsFromObservable\n         * @param text\n         */\n        this.getItemsFromObservable = (text) => {\n            this.setLoadingState(true);\n            const subscribeFn = (data) => {\n                // hide loading animation\n                this.setLoadingState(false)\n                    // add items\n                    .populateItems(data);\n                this.setItems(this.getMatchingItems(text));\n                if (this.items.length) {\n                    this.dropdown.show(this.calculatePosition());\n                }\n                else {\n                    this.dropdown.hide();\n                }\n            };\n            this.autocompleteObservable(text)\n                .pipe(first())\n                .subscribe(subscribeFn, () => this.setLoadingState(false));\n        };\n    }\n    /**\n     * @name autocompleteItems\n     * @param items\n     */\n    set autocompleteItems(items) {\n        this._autocompleteItems = items;\n    }\n    /**\n     * @name autocompleteItems\n     * @desc array of items that will populate the autocomplete\n     */\n    get autocompleteItems() {\n        const items = this._autocompleteItems;\n        if (!items) {\n            return [];\n        }\n        return items.map((item) => {\n            return typeof item === 'string'\n                ? {\n                    [this.displayBy]: item,\n                    [this.identifyBy]: item\n                }\n                : item;\n        });\n    }\n    /**\n     * @name ngAfterviewInit\n     */\n    ngAfterViewInit() {\n        this.onItemClicked().subscribe((item) => {\n            this.requestAdding(item);\n        });\n        // reset itemsMatching array when the dropdown is hidden\n        this.onHide().subscribe(this.resetItems);\n        const DEBOUNCE_TIME = 200;\n        const KEEP_OPEN = this.keepOpen;\n        this.tagInput.onTextChange\n            .asObservable()\n            .pipe(distinctUntilChanged(), debounceTime(DEBOUNCE_TIME), filter((value) => {\n            if (KEEP_OPEN === false) {\n                return value.length > 0;\n            }\n            return true;\n        }))\n            .subscribe(this.show);\n    }\n    /**\n     * @name updatePosition\n     */\n    updatePosition() {\n        const position = this.tagInput.inputForm.getElementPosition();\n        this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n    }\n    /**\n     * @name isVisible\n     */\n    get isVisible() {\n        return this.dropdown.menu.dropdownState.menuState.isVisible;\n    }\n    /**\n     * @name onHide\n     */\n    onHide() {\n        return this.dropdown.onHide;\n    }\n    /**\n     * @name onItemClicked\n     */\n    onItemClicked() {\n        return this.dropdown.onItemClicked;\n    }\n    /**\n     * @name selectedItem\n     */\n    get selectedItem() {\n        return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n    }\n    /**\n     * @name state\n     */\n    get state() {\n        return this.dropdown.menu.dropdownState;\n    }\n    /**\n     * @name hide\n     */\n    hide() {\n        this.resetItems();\n        this.dropdown.hide();\n    }\n    /**\n     * @name scrollListener\n     */\n    scrollListener() {\n        if (!this.isVisible || !this.dynamicUpdate) {\n            return;\n        }\n        this.updatePosition();\n    }\n    /**\n     * @name onWindowBlur\n     */\n    onWindowBlur() {\n        this.dropdown.hide();\n    }\n    /**\n     * @name getFormValue\n     */\n    getFormValue() {\n        const formValue = this.tagInput.formValue;\n        return formValue ? formValue.toString().trim() : '';\n    }\n    /**\n     * @name calculatePosition\n     */\n    calculatePosition() {\n        return this.tagInput.inputForm.getElementPosition();\n    }\n    /**\n     * @name createTagModel\n     * @param item\n     */\n    createTagModel(item) {\n        const display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n        const value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n        return {\n            ...item.value,\n            [this.tagInput.displayBy]: display,\n            [this.tagInput.identifyBy]: value\n        };\n    }\n    /**\n     *\n     * @param value {string}\n     */\n    getMatchingItems(value) {\n        if (!value && !this.showDropdownIfEmpty) {\n            return [];\n        }\n        const dupesAllowed = this.tagInput.allowDupes;\n        return this.autocompleteItems.filter((item) => {\n            const hasValue = dupesAllowed\n                ? false\n                : this.tagInput.tags.some(tag => {\n                    const identifyBy = this.tagInput.identifyBy;\n                    const model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n                    return model === item[this.identifyBy];\n                });\n            return this.matchingFn(value, item) && hasValue === false;\n        });\n    }\n    /**\n     * @name setItems\n     */\n    setItems(items) {\n        this.items = items.slice(0, this.limitItemsTo || items.length);\n    }\n    /**\n     * @name populateItems\n     * @param data\n     */\n    populateItems(data) {\n        this.autocompleteItems = data.map(item => {\n            return typeof item === 'string'\n                ? {\n                    [this.displayBy]: item,\n                    [this.identifyBy]: item\n                }\n                : item;\n        });\n        return this;\n    }\n    /**\n     * @name setLoadingState\n     * @param state\n     */\n    setLoadingState(state) {\n        this.tagInput.isLoading = state;\n        return this;\n    }\n}\nTagInputDropdown.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputDropdown, deps: [{ token: i0.Injector }], target: i0.ɵɵFactoryTarget.Component });\nTagInputDropdown.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagInputDropdown, selector: \"tag-input-dropdown\", inputs: { offset: \"offset\", focusFirstElement: \"focusFirstElement\", showDropdownIfEmpty: \"showDropdownIfEmpty\", autocompleteObservable: \"autocompleteObservable\", minimumTextLength: \"minimumTextLength\", limitItemsTo: \"limitItemsTo\", displayBy: \"displayBy\", identifyBy: \"identifyBy\", matchingFn: \"matchingFn\", appendToBody: \"appendToBody\", keepOpen: \"keepOpen\", dynamicUpdate: \"dynamicUpdate\", zIndex: \"zIndex\", autocompleteItems: \"autocompleteItems\" }, host: { listeners: { \"window:scroll\": \"scrollListener()\", \"window:blur\": \"onWindowBlur()\" } }, queries: [{ propertyName: \"templates\", predicate: TemplateRef }], viewQueries: [{ propertyName: \"dropdown\", first: true, predicate: Ng2Dropdown, descendants: true }], ngImport: i0, template: \"<ng2-dropdown [dynamicUpdate]=\\\"dynamicUpdate\\\">\\n    <ng2-dropdown-menu [focusFirstElement]=\\\"focusFirstElement\\\"\\n                       [zIndex]=\\\"zIndex\\\"\\n                       [appendToBody]=\\\"appendToBody\\\"\\n                       [offset]=\\\"offset\\\">\\n        <ng2-menu-item *ngFor=\\\"let item of items; let index = index; let last = last\\\"\\n                       [value]=\\\"item\\\"\\n                       [ngSwitch]=\\\"!!templates.length\\\">\\n\\n            <span *ngSwitchCase=\\\"false\\\"\\n                  [innerHTML]=\\\"item[displayBy] | highlight : tagInput.inputForm.value.value\\\">\\n            </span>\\n\\n            <ng-template *ngSwitchDefault\\n                      [ngTemplateOutlet]=\\\"templates.first\\\"\\n                      [ngTemplateOutletContext]=\\\"{ item: item, index: index, last: last }\\\">\\n            </ng-template>\\n        </ng2-menu-item>\\n    </ng2-dropdown-menu>\\n</ng2-dropdown>\\n\", components: [{ type: i1$1.Ng2Dropdown, selector: \"ng2-dropdown\", inputs: [\"dynamicUpdate\"], outputs: [\"onItemClicked\", \"onItemSelected\", \"onShow\", \"onHide\"] }, { type: i1$1.Ng2DropdownMenu, selector: \"ng2-dropdown-menu\", inputs: [\"width\", \"focusFirstElement\", \"offset\", \"appendToBody\", \"zIndex\"] }, { type: i1$1.Ng2MenuItem, selector: \"ng2-menu-item\", inputs: [\"preventClose\", \"value\"] }], directives: [{ type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i2.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i2.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }], pipes: { \"highlight\": HighlightPipe } });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputDropdown, decorators: [{\n            type: Component,\n            args: [{ selector: 'tag-input-dropdown', template: \"<ng2-dropdown [dynamicUpdate]=\\\"dynamicUpdate\\\">\\n    <ng2-dropdown-menu [focusFirstElement]=\\\"focusFirstElement\\\"\\n                       [zIndex]=\\\"zIndex\\\"\\n                       [appendToBody]=\\\"appendToBody\\\"\\n                       [offset]=\\\"offset\\\">\\n        <ng2-menu-item *ngFor=\\\"let item of items; let index = index; let last = last\\\"\\n                       [value]=\\\"item\\\"\\n                       [ngSwitch]=\\\"!!templates.length\\\">\\n\\n            <span *ngSwitchCase=\\\"false\\\"\\n                  [innerHTML]=\\\"item[displayBy] | highlight : tagInput.inputForm.value.value\\\">\\n            </span>\\n\\n            <ng-template *ngSwitchDefault\\n                      [ngTemplateOutlet]=\\\"templates.first\\\"\\n                      [ngTemplateOutletContext]=\\\"{ item: item, index: index, last: last }\\\">\\n            </ng-template>\\n        </ng2-menu-item>\\n    </ng2-dropdown-menu>\\n</ng2-dropdown>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }]; }, propDecorators: { dropdown: [{\n                type: ViewChild,\n                args: [Ng2Dropdown]\n            }], templates: [{\n                type: ContentChildren,\n                args: [TemplateRef]\n            }], offset: [{\n                type: Input\n            }], focusFirstElement: [{\n                type: Input\n            }], showDropdownIfEmpty: [{\n                type: Input\n            }], autocompleteObservable: [{\n                type: Input\n            }], minimumTextLength: [{\n                type: Input\n            }], limitItemsTo: [{\n                type: Input\n            }], displayBy: [{\n                type: Input\n            }], identifyBy: [{\n                type: Input\n            }], matchingFn: [{\n                type: Input\n            }], appendToBody: [{\n                type: Input\n            }], keepOpen: [{\n                type: Input\n            }], dynamicUpdate: [{\n                type: Input\n            }], zIndex: [{\n                type: Input\n            }], autocompleteItems: [{\n                type: Input\n            }], scrollListener: [{\n                type: HostListener,\n                args: ['window:scroll']\n            }], onWindowBlur: [{\n                type: HostListener,\n                args: ['window:blur']\n            }] } });\n\n// angular\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\nclass TagInputComponent extends TagInputAccessor {\n    constructor(renderer, dragProvider) {\n        super();\n        this.renderer = renderer;\n        this.dragProvider = dragProvider;\n        /**\n         * @name separatorKeys\n         * @desc keyboard keys with which a user can separate items\n         */\n        this.separatorKeys = defaults.tagInput.separatorKeys;\n        /**\n         * @name separatorKeyCodes\n         * @desc keyboard key codes with which a user can separate items\n         */\n        this.separatorKeyCodes = defaults.tagInput.separatorKeyCodes;\n        /**\n         * @name placeholder\n         * @desc the placeholder of the input text\n         */\n        this.placeholder = defaults.tagInput.placeholder;\n        /**\n         * @name secondaryPlaceholder\n         * @desc placeholder to appear when the input is empty\n         */\n        this.secondaryPlaceholder = defaults.tagInput.secondaryPlaceholder;\n        /**\n         * @name maxItems\n         * @desc maximum number of items that can be added\n         */\n        this.maxItems = defaults.tagInput.maxItems;\n        /**\n         * @name validators\n         * @desc array of Validators that are used to validate the tag before it gets appended to the list\n         */\n        this.validators = defaults.tagInput.validators;\n        /**\n         * @name asyncValidators\n         * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n         */\n        this.asyncValidators = defaults.tagInput.asyncValidators;\n        /**\n        * - if set to true, it will only possible to add items from the autocomplete\n        * @name onlyFromAutocomplete\n        */\n        this.onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n        /**\n         * @name errorMessages\n         */\n        this.errorMessages = defaults.tagInput.errorMessages;\n        /**\n         * @name theme\n         */\n        this.theme = defaults.tagInput.theme;\n        /**\n         * @name onTextChangeDebounce\n         */\n        this.onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n        /**\n         * - custom id assigned to the input\n         * @name id\n         */\n        this.inputId = defaults.tagInput.inputId;\n        /**\n         * - custom class assigned to the input\n         */\n        this.inputClass = defaults.tagInput.inputClass;\n        /**\n         * - option to clear text input when the form is blurred\n         * @name clearOnBlur\n         */\n        this.clearOnBlur = defaults.tagInput.clearOnBlur;\n        /**\n         * - hideForm\n         * @name clearOnBlur\n         */\n        this.hideForm = defaults.tagInput.hideForm;\n        /**\n         * @name addOnBlur\n         */\n        this.addOnBlur = defaults.tagInput.addOnBlur;\n        /**\n         * @name addOnPaste\n         */\n        this.addOnPaste = defaults.tagInput.addOnPaste;\n        /**\n         * - pattern used with the native method split() to separate patterns in the string pasted\n         * @name pasteSplitPattern\n         */\n        this.pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n        /**\n         * @name blinkIfDupe\n         */\n        this.blinkIfDupe = defaults.tagInput.blinkIfDupe;\n        /**\n         * @name removable\n         */\n        this.removable = defaults.tagInput.removable;\n        /**\n         * @name editable\n         */\n        this.editable = defaults.tagInput.editable;\n        /**\n         * @name allowDupes\n         */\n        this.allowDupes = defaults.tagInput.allowDupes;\n        /**\n         * @description if set to true, the newly added tags will be added as strings, and not objects\n         * @name modelAsStrings\n         */\n        this.modelAsStrings = defaults.tagInput.modelAsStrings;\n        /**\n         * @name trimTags\n         */\n        this.trimTags = defaults.tagInput.trimTags;\n        /**\n         * @name ripple\n         */\n        this.ripple = defaults.tagInput.ripple;\n        /**\n         * @name tabindex\n         * @desc pass through the specified tabindex to the input\n         */\n        this.tabindex = defaults.tagInput.tabIndex;\n        /**\n         * @name disable\n         */\n        this.disable = defaults.tagInput.disable;\n        /**\n         * @name dragZone\n         */\n        this.dragZone = defaults.tagInput.dragZone;\n        /**\n         * @name onRemoving\n         */\n        this.onRemoving = defaults.tagInput.onRemoving;\n        /**\n         * @name onAdding\n         */\n        this.onAdding = defaults.tagInput.onAdding;\n        /**\n         * @name animationDuration\n         */\n        this.animationDuration = defaults.tagInput.animationDuration;\n        /**\n         * @name onAdd\n         * @desc event emitted when adding a new item\n         */\n        this.onAdd = new EventEmitter();\n        /**\n         * @name onRemove\n         * @desc event emitted when removing an existing item\n         */\n        this.onRemove = new EventEmitter();\n        /**\n         * @name onSelect\n         * @desc event emitted when selecting an item\n         */\n        this.onSelect = new EventEmitter();\n        /**\n         * @name onFocus\n         * @desc event emitted when the input is focused\n         */\n        this.onFocus = new EventEmitter();\n        /**\n         * @name onFocus\n         * @desc event emitted when the input is blurred\n         */\n        this.onBlur = new EventEmitter();\n        /**\n         * @name onTextChange\n         * @desc event emitted when the input value changes\n         */\n        this.onTextChange = new EventEmitter();\n        /**\n         * - output triggered when text is pasted in the form\n         * @name onPaste\n         */\n        this.onPaste = new EventEmitter();\n        /**\n         * - output triggered when tag entered is not valid\n         * @name onValidationError\n         */\n        this.onValidationError = new EventEmitter();\n        /**\n         * - output triggered when tag is edited\n         * @name onTagEdited\n         */\n        this.onTagEdited = new EventEmitter();\n        /**\n         * @name isLoading\n         */\n        this.isLoading = false;\n        /**\n         * @name listeners\n         * @desc array of events that get fired using @fireEvents\n         */\n        this.listeners = {\n            [KEYDOWN]: [],\n            [KEYUP]: []\n        };\n        /**\n         * @description emitter for the 2-way data binding inputText value\n         * @name inputTextChange\n         */\n        this.inputTextChange = new EventEmitter();\n        /**\n         * @description private variable to bind get/set\n         * @name inputTextValue\n         */\n        this.inputTextValue = '';\n        this.errors = [];\n        /**\n         * @name appendTag\n         * @param tag {TagModel}\n         */\n        this.appendTag = (tag, index = this.items.length) => {\n            const items = this.items;\n            const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n            this.items = [\n                ...items.slice(0, index),\n                model,\n                ...items.slice(index, items.length)\n            ];\n        };\n        /**\n         * @name createTag\n         * @param model\n         */\n        this.createTag = (model) => {\n            const trim = (val, key) => {\n                return typeof val === 'string' ? val.trim() : val[key];\n            };\n            return {\n                ...typeof model !== 'string' ? model : {},\n                [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n                [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n            };\n        };\n        /**\n         *\n         * @param tag\n         * @param isFromAutocomplete\n         */\n        this.isTagValid = (tag, fromAutocomplete = false) => {\n            const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n            const value = this.getItemDisplay(tag).trim();\n            if (selectedItem && !fromAutocomplete || !value) {\n                return false;\n            }\n            const dupe = this.findDupe(tag, fromAutocomplete);\n            // if so, give a visual cue and return false\n            if (!this.allowDupes && dupe && this.blinkIfDupe) {\n                const model = this.tags.find(item => {\n                    return this.getItemValue(item.model) === this.getItemValue(dupe);\n                });\n                if (model) {\n                    model.blink();\n                }\n            }\n            const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n            const assertions = [\n                // 1. there must be no dupe OR dupes are allowed\n                !dupe || this.allowDupes,\n                // 2. check max items has not been reached\n                !this.maxItemsReached,\n                // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n                ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n            ];\n            return assertions.filter(Boolean).length === assertions.length;\n        };\n        /**\n         * @name onPasteCallback\n         * @param data\n         */\n        this.onPasteCallback = async (data) => {\n            const getText = () => {\n                const isIE = Boolean(window.clipboardData);\n                const clipboardData = isIE ? (window.clipboardData) : data.clipboardData;\n                const type = isIE ? 'Text' : 'text/plain';\n                return clipboardData === null ? '' : clipboardData.getData(type) || '';\n            };\n            const text = getText();\n            const requests = text\n                .split(this.pasteSplitPattern)\n                .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n            const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n            Promise.all(requests).then(() => {\n                this.onPaste.emit(text);\n                resetInput();\n            })\n                .catch(resetInput);\n        };\n    }\n    /**\n     * @name inputText\n     */\n    get inputText() {\n        return this.inputTextValue;\n    }\n    /**\n     * @name inputText\n     * @param text\n     */\n    set inputText(text) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    get tabindexAttr() {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n    /**\n     * @name ngAfterViewInit\n     */\n    ngAfterViewInit() {\n        // set up listeners\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n        const statusChanges$ = this.inputForm.form.statusChanges;\n        statusChanges$.pipe(filter$1((status) => status !== 'PENDING')).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n        this.isProgressBarVisible$ = statusChanges$.pipe(map((status) => {\n            return status === 'PENDING' || this.isLoading;\n        }));\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n    /**\n     * @name ngOnInit\n     */\n    ngOnInit() {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(MAX_ITEMS_WARNING);\n        }\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n        this.setAnimationMetadata();\n    }\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    onRemoveRequested(tag, index) {\n        return new Promise(resolve => {\n            const subscribeFn = (model) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first$1())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    onAddingRequested(fromAutocomplete, tag, index, giveupFocus) {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model) => {\n                return this\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\n                    .then(resolve)\n                    .catch(reject);\n            };\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first$1())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    selectItem(item, emit = true) {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n        this.selectedTag = item;\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    fireEvents(eventName, $event) {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    handleKeydown(data) {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n        switch (KEY_PRESS_ACTIONS[key]) {\n            case ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n            case ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, PREV);\n                break;\n            case ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, NEXT);\n                break;\n            case ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n                    this.moveToTag(data.model, PREV);\n                }\n                else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n                    this.moveToTag(data.model, NEXT);\n                }\n                break;\n            default:\n                return;\n        }\n        // prevent default behaviour\n        event.preventDefault();\n    }\n    async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        }\n        catch {\n            return;\n        }\n    }\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    setInputValue(value, emitEvent = true) {\n        const control = this.getControl();\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n    /**\n     * @name getControl\n     */\n    getControl() {\n        return this.inputForm.value;\n    }\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    focus(applyFocus = false, displayAutocomplete = false) {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n        this.selectItem(undefined, false);\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n    /**\n     * @name blur\n     */\n    blur() {\n        this.onTouched();\n        this.onBlur.emit(this.formValue);\n    }\n    /**\n     * @name hasErrors\n     */\n    hasErrors() {\n        return !!this.inputForm && this.inputForm.hasErrors();\n    }\n    /**\n     * @name isInputFocused\n     */\n    isInputFocused() {\n        return !!this.inputForm && this.inputForm.isInputFocused();\n    }\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    hasCustomTemplate() {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n        return Boolean(template && template !== menuTemplate);\n    }\n    /**\n     * @name maxItemsReached\n     */\n    get maxItemsReached() {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n    /**\n     * @name formValue\n     */\n    get formValue() {\n        const form = this.inputForm.value;\n        return form ? form.value : '';\n    }\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    onDragStarted(event, tag, index) {\n        event.stopPropagation();\n        const item = { zone: this.dragZone, tag, index };\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({ dragging: true, index });\n    }\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    onDragOver(event, index) {\n        this.dragProvider.setState({ dropping: true });\n        this.dragProvider.setReceiver(this);\n        event.preventDefault();\n    }\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    onTagDropped(event, index) {\n        const item = this.dragProvider.getDraggedItem(event);\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @name isDropping\n     */\n    isDropping() {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n        return Boolean(isReceiver && isDropping);\n    }\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    onTagBlurred(changedElement, index) {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n    /**\n     * @name trackBy\n     * @param items\n     */\n    trackBy(index, item) {\n        return item[this.identifyBy];\n    }\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    updateEditedTag(tag) {\n        this.onTagEdited.emit(tag);\n    }\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    moveToTag(item, direction) {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === NEXT && isLast) ||\n            (direction === PREV && isFirst);\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n        const offset = direction === NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n        return tag.select.call(tag);\n    }\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    isFirstTag(item) {\n        return this.tags.first.model === item;\n    }\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    isLastTag(item) {\n        return this.tags.last.model === item;\n    }\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    getTagIndex(item) {\n        const tags = this.tags.toArray();\n        return tags.findIndex(tag => tag.model === item);\n    }\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    getTagAtIndex(index) {\n        const tags = this.tags.toArray();\n        return tags[index];\n    }\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    removeItem(tag, index) {\n        this.items = this.getItemsWithout(index);\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n        // focus input\n        this.focus(true, false);\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    addItem(fromAutocomplete = false, item, index, giveupFocus) {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = () => {\n                // reset control and focus input\n                this.setInputValue('');\n                if (giveupFocus) {\n                    this.focus(false, false);\n                }\n                else {\n                    // focus input\n                    this.focus(true, false);\n                }\n                resolve(display);\n            };\n            const appendItem = () => {\n                this.appendTag(tag, index);\n                // emit event\n                this.onAdd.emit(tag);\n                if (!this.dropdown) {\n                    return;\n                }\n                this.dropdown.hide();\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n                return statusUpdate$\n                    .pipe(filter$1(statusUpdate => statusUpdate !== 'PENDING'), first$1())\n                    .subscribe((statusUpdate) => {\n                    if (statusUpdate === 'VALID' && isTagValid) {\n                        appendItem();\n                        return reset();\n                    }\n                    else {\n                        reset();\n                        return onValidationError();\n                    }\n                });\n            }\n        });\n    }\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    setupSeparatorKeysListener() {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => { });\n            }\n        };\n        listen.call(this, KEYDOWN, listener, useSeparatorKeys);\n    }\n    /**\n     * @name setUpKeypressListeners\n     */\n    setUpKeypressListeners() {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n        // setting up the keypress listeners\n        listen.call(this, KEYDOWN, listener);\n    }\n    /**\n     * @name setUpKeydownListeners\n     */\n    setUpInputKeydownListeners() {\n        this.inputForm.onKeydown.subscribe(event => {\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n    /**\n     * @name setUpOnPasteListener\n     */\n    setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n            event.preventDefault();\n            return true;\n        });\n    }\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    setUpTextChangeSubscriber() {\n        this.inputForm.form\n            .valueChanges\n            .pipe(debounceTime$1(this.onTextChangeDebounce))\n            .subscribe((value) => {\n            this.onTextChange.emit(value.item);\n        });\n    }\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    setUpOnBlurSubscriber() {\n        const filterFn = () => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n        this.inputForm\n            .onBlur\n            .pipe(debounceTime$1(100), filter$1(filterFn))\n            .subscribe(() => {\n            const reset = () => this.setInputValue('');\n            if (this.addOnBlur) {\n                return this\n                    .onAddingRequested(false, this.formValue, undefined, true)\n                    .then(reset)\n                    .catch(reset);\n            }\n            reset();\n        });\n    }\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    findDupe(tag, isFromAutocomplete) {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n    /**\n     * @name setAnimationMetadata\n     */\n    setAnimationMetadata() {\n        this.animationMetadata = {\n            value: 'in',\n            params: { ...this.animationDuration }\n        };\n    }\n}\nTagInputComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputComponent, deps: [{ token: i0.Renderer2 }, { token: DragProvider }], target: i0.ɵɵFactoryTarget.Component });\nTagInputComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.3\", type: TagInputComponent, selector: \"tag-input\", inputs: { separatorKeys: \"separatorKeys\", separatorKeyCodes: \"separatorKeyCodes\", placeholder: \"placeholder\", secondaryPlaceholder: \"secondaryPlaceholder\", maxItems: \"maxItems\", validators: \"validators\", asyncValidators: \"asyncValidators\", onlyFromAutocomplete: \"onlyFromAutocomplete\", errorMessages: \"errorMessages\", theme: \"theme\", onTextChangeDebounce: \"onTextChangeDebounce\", inputId: \"inputId\", inputClass: \"inputClass\", clearOnBlur: \"clearOnBlur\", hideForm: \"hideForm\", addOnBlur: \"addOnBlur\", addOnPaste: \"addOnPaste\", pasteSplitPattern: \"pasteSplitPattern\", blinkIfDupe: \"blinkIfDupe\", removable: \"removable\", editable: \"editable\", allowDupes: \"allowDupes\", modelAsStrings: \"modelAsStrings\", trimTags: \"trimTags\", inputText: \"inputText\", ripple: \"ripple\", tabindex: \"tabindex\", disable: \"disable\", dragZone: \"dragZone\", onRemoving: \"onRemoving\", onAdding: \"onAdding\", animationDuration: \"animationDuration\" }, outputs: { onAdd: \"onAdd\", onRemove: \"onRemove\", onSelect: \"onSelect\", onFocus: \"onFocus\", onBlur: \"onBlur\", onTextChange: \"onTextChange\", onPaste: \"onPaste\", onValidationError: \"onValidationError\", onTagEdited: \"onTagEdited\", inputTextChange: \"inputTextChange\" }, host: { properties: { \"attr.tabindex\": \"this.tabindexAttr\" } }, providers: [CUSTOM_ACCESSOR], queries: [{ propertyName: \"dropdown\", first: true, predicate: TagInputDropdown, descendants: true }, { propertyName: \"templates\", predicate: TemplateRef }], viewQueries: [{ propertyName: \"inputForm\", first: true, predicate: TagInputForm, descendants: true }, { propertyName: \"tags\", predicate: TagComponent, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"ng2-tag-input\\\"\\n    (click)=\\\"focus(true, false)\\\"\\n    [attr.tabindex]=\\\"-1\\\"\\n    (drop)=\\\"dragZone ? onTagDropped($event, undefined) : undefined\\\"\\n    (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragover)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragend)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n    [class.ng2-tag-input--dropping]=\\\"isDropping()\\\"\\n    [class.ng2-tag-input--disabled]=\\\"disable\\\"\\n    [class.ng2-tag-input--loading]=\\\"isLoading\\\"\\n    [class.ng2-tag-input--invalid]=\\\"hasErrors()\\\"\\n    [class.ng2-tag-input--focused]=\\\"isInputFocused()\\\"\\n>\\n\\n    <!-- TAGS -->\\n    <div class=\\\"ng2-tags-container\\\">\\n        <tag\\n            *ngFor=\\\"let item of items; let i = index; trackBy: trackBy\\\"\\n            (onSelect)=\\\"selectItem(item)\\\"\\n            (onRemove)=\\\"onRemoveRequested(item, i)\\\"\\n            (onKeyDown)=\\\"handleKeydown($event)\\\"\\n            (onTagEdited)=\\\"updateEditedTag($event)\\\"\\n            (onBlur)=\\\"onTagBlurred($event, i)\\\"\\n            draggable=\\\"{{ editable }}\\\"\\n            (dragstart)=\\\"dragZone ? onDragStarted($event, item, i) : undefined\\\"\\n            (drop)=\\\"dragZone ? onTagDropped($event, i) : undefined\\\"\\n            (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n            (dragover)=\\\"dragZone ? onDragOver($event, i) : undefined\\\"\\n            (dragleave)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n            [canAddTag]=\\\"isTagValid\\\"\\n            [attr.tabindex]=\\\"0\\\"\\n            [disabled]=\\\"disable\\\"\\n            [@animation]=\\\"animationMetadata\\\"\\n            [hasRipple]=\\\"ripple\\\"\\n            [index]=\\\"i\\\"\\n            [removable]=\\\"removable\\\"\\n            [editable]=\\\"editable\\\"\\n            [displayBy]=\\\"displayBy\\\"\\n            [identifyBy]=\\\"identifyBy\\\"\\n            [template]=\\\"!!hasCustomTemplate() ? templates.first : undefined\\\"\\n            [draggable]=\\\"dragZone\\\"\\n            [model]=\\\"item\\\"\\n        >\\n        </tag>\\n\\n        <tag-input-form\\n            (onSubmit)=\\\"onFormSubmit()\\\"\\n            (onBlur)=\\\"blur()\\\"\\n            (click)=\\\"dropdown ? dropdown.show() : undefined\\\"\\n            (onKeydown)=\\\"fireEvents('keydown', $event)\\\"\\n            (onKeyup)=\\\"fireEvents('keyup', $event)\\\"\\n            [inputText]=\\\"inputText\\\"\\n            [disabled]=\\\"disable\\\"\\n            [validators]=\\\"validators\\\"\\n            [asyncValidators]=\\\"asyncValidators\\\"\\n            [hidden]=\\\"maxItemsReached\\\"\\n            [placeholder]=\\\"items.length ? placeholder : secondaryPlaceholder\\\"\\n            [inputClass]=\\\"inputClass\\\"\\n            [inputId]=\\\"inputId\\\"\\n            [tabindex]=\\\"tabindex\\\"\\n        >\\n        </tag-input-form>\\n    </div>\\n\\n    <div\\n        class=\\\"progress-bar\\\"\\n        *ngIf=\\\"isProgressBarVisible$ | async\\\"\\n    ></div>\\n</div>\\n\\n<!-- ERRORS -->\\n<div\\n    *ngIf=\\\"hasErrors()\\\"\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"error-messages\\\"\\n>\\n    <p\\n        *ngFor=\\\"let error of errors\\\"\\n        class=\\\"error-message\\\"\\n    >\\n        <span>{{ error }}</span>\\n    </p>\\n</div>\\n<ng-content></ng-content>\\n\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.progress-bar,.progress-bar:before{height:2px;width:100%;margin:0}.progress-bar{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar:before{background-color:#82c4f8;content:\\\"\\\";-webkit-animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite;animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,Helvetica Neue,sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:all .3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag:not(.readonly):not(.tag--editing):focus{background:#2196F3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:#000;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly{cursor:default}tag.readonly:focus,tag:focus{outline:0}tag.tag--editing{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal tag{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal tag:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(.readonly):not(.tag--editing):active{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal tag.readonly{cursor:default}.minimal tag.readonly:focus,.minimal tag:focus{outline:0}.minimal tag.tag--editing{cursor:text}.dark tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark tag:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark tag.readonly{cursor:default}.dark tag.readonly:focus,.dark tag:focus{outline:0}.dark tag.tag--editing{cursor:text}.bootstrap tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap tag:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap tag:not(.readonly):not(.tag--editing):active{background:#025aa5}.bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap tag.readonly{cursor:default}.bootstrap tag.readonly:focus,.bootstrap tag:focus{outline:0}.bootstrap tag.tag--editing{cursor:text}.bootstrap3-info tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info tag:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info tag:not(.readonly):not(.tag--editing):active{background:#28a1c5}.bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info tag.readonly{cursor:default}.bootstrap3-info tag.readonly:focus,.bootstrap3-info tag:focus{outline:0}.bootstrap3-info tag.tag--editing{cursor:text}:host{display:block}\\n\"], components: [{ type: TagComponent, selector: \"tag\", inputs: [\"model\", \"removable\", \"editable\", \"template\", \"displayBy\", \"identifyBy\", \"index\", \"hasRipple\", \"disabled\", \"canAddTag\"], outputs: [\"onSelect\", \"onRemove\", \"onBlur\", \"onKeyDown\", \"onTagEdited\"] }, { type: TagInputForm, selector: \"tag-input-form\", inputs: [\"placeholder\", \"validators\", \"asyncValidators\", \"inputId\", \"inputClass\", \"tabindex\", \"disabled\", \"inputText\"], outputs: [\"onSubmit\", \"onBlur\", \"onFocus\", \"onKeyup\", \"onKeydown\", \"inputTextChange\"] }], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i2.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], pipes: { \"async\": i2.AsyncPipe }, animations: animations });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'tag-input', providers: [CUSTOM_ACCESSOR], animations: animations, template: \"<div\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"ng2-tag-input\\\"\\n    (click)=\\\"focus(true, false)\\\"\\n    [attr.tabindex]=\\\"-1\\\"\\n    (drop)=\\\"dragZone ? onTagDropped($event, undefined) : undefined\\\"\\n    (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragover)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragend)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n    [class.ng2-tag-input--dropping]=\\\"isDropping()\\\"\\n    [class.ng2-tag-input--disabled]=\\\"disable\\\"\\n    [class.ng2-tag-input--loading]=\\\"isLoading\\\"\\n    [class.ng2-tag-input--invalid]=\\\"hasErrors()\\\"\\n    [class.ng2-tag-input--focused]=\\\"isInputFocused()\\\"\\n>\\n\\n    <!-- TAGS -->\\n    <div class=\\\"ng2-tags-container\\\">\\n        <tag\\n            *ngFor=\\\"let item of items; let i = index; trackBy: trackBy\\\"\\n            (onSelect)=\\\"selectItem(item)\\\"\\n            (onRemove)=\\\"onRemoveRequested(item, i)\\\"\\n            (onKeyDown)=\\\"handleKeydown($event)\\\"\\n            (onTagEdited)=\\\"updateEditedTag($event)\\\"\\n            (onBlur)=\\\"onTagBlurred($event, i)\\\"\\n            draggable=\\\"{{ editable }}\\\"\\n            (dragstart)=\\\"dragZone ? onDragStarted($event, item, i) : undefined\\\"\\n            (drop)=\\\"dragZone ? onTagDropped($event, i) : undefined\\\"\\n            (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n            (dragover)=\\\"dragZone ? onDragOver($event, i) : undefined\\\"\\n            (dragleave)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n            [canAddTag]=\\\"isTagValid\\\"\\n            [attr.tabindex]=\\\"0\\\"\\n            [disabled]=\\\"disable\\\"\\n            [@animation]=\\\"animationMetadata\\\"\\n            [hasRipple]=\\\"ripple\\\"\\n            [index]=\\\"i\\\"\\n            [removable]=\\\"removable\\\"\\n            [editable]=\\\"editable\\\"\\n            [displayBy]=\\\"displayBy\\\"\\n            [identifyBy]=\\\"identifyBy\\\"\\n            [template]=\\\"!!hasCustomTemplate() ? templates.first : undefined\\\"\\n            [draggable]=\\\"dragZone\\\"\\n            [model]=\\\"item\\\"\\n        >\\n        </tag>\\n\\n        <tag-input-form\\n            (onSubmit)=\\\"onFormSubmit()\\\"\\n            (onBlur)=\\\"blur()\\\"\\n            (click)=\\\"dropdown ? dropdown.show() : undefined\\\"\\n            (onKeydown)=\\\"fireEvents('keydown', $event)\\\"\\n            (onKeyup)=\\\"fireEvents('keyup', $event)\\\"\\n            [inputText]=\\\"inputText\\\"\\n            [disabled]=\\\"disable\\\"\\n            [validators]=\\\"validators\\\"\\n            [asyncValidators]=\\\"asyncValidators\\\"\\n            [hidden]=\\\"maxItemsReached\\\"\\n            [placeholder]=\\\"items.length ? placeholder : secondaryPlaceholder\\\"\\n            [inputClass]=\\\"inputClass\\\"\\n            [inputId]=\\\"inputId\\\"\\n            [tabindex]=\\\"tabindex\\\"\\n        >\\n        </tag-input-form>\\n    </div>\\n\\n    <div\\n        class=\\\"progress-bar\\\"\\n        *ngIf=\\\"isProgressBarVisible$ | async\\\"\\n    ></div>\\n</div>\\n\\n<!-- ERRORS -->\\n<div\\n    *ngIf=\\\"hasErrors()\\\"\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"error-messages\\\"\\n>\\n    <p\\n        *ngFor=\\\"let error of errors\\\"\\n        class=\\\"error-message\\\"\\n    >\\n        <span>{{ error }}</span>\\n    </p>\\n</div>\\n<ng-content></ng-content>\\n\", styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:none;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px #0006;border:1px solid #ccc}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:all .25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196F3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px #00000013;border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.progress-bar,.progress-bar:before{height:2px;width:100%;margin:0}.progress-bar{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar:before{background-color:#82c4f8;content:\\\"\\\";-webkit-animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite;animation:running-progress 2s cubic-bezier(.4,0,.2,1) infinite}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}to{margin-left:100%;margin-right:0}}tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,Helvetica Neue,sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:all .3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag:not(.readonly):not(.tag--editing):focus{background:#2196F3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:#000;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly{cursor:default}tag.readonly:focus,tag:focus{outline:0}tag.tag--editing{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal tag{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal tag:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(.readonly):not(.tag--editing):active{background:#d0d0d0;color:#000;color:initial}.minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal tag.readonly{cursor:default}.minimal tag.readonly:focus,.minimal tag:focus{outline:0}.minimal tag.tag--editing{cursor:text}.dark tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark tag:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark tag.readonly{cursor:default}.dark tag.readonly:focus,.dark tag:focus{outline:0}.dark tag.tag--editing{cursor:text}.bootstrap tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap tag:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap tag:not(.readonly):not(.tag--editing):active{background:#025aa5}.bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap tag.readonly{cursor:default}.bootstrap tag.readonly:focus,.bootstrap tag:focus{outline:0}.bootstrap tag.tag--editing{cursor:text}.bootstrap3-info tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info tag:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info tag:not(.readonly):not(.tag--editing):active{background:#28a1c5}.bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info tag.readonly{cursor:default}.bootstrap3-info tag.readonly:focus,.bootstrap3-info tag:focus{outline:0}.bootstrap3-info tag.tag--editing{cursor:text}:host{display:block}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: DragProvider }]; }, propDecorators: { separatorKeys: [{\n                type: Input\n            }], separatorKeyCodes: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], secondaryPlaceholder: [{\n                type: Input\n            }], maxItems: [{\n                type: Input\n            }], validators: [{\n                type: Input\n            }], asyncValidators: [{\n                type: Input\n            }], onlyFromAutocomplete: [{\n                type: Input\n            }], errorMessages: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], onTextChangeDebounce: [{\n                type: Input\n            }], inputId: [{\n                type: Input\n            }], inputClass: [{\n                type: Input\n            }], clearOnBlur: [{\n                type: Input\n            }], hideForm: [{\n                type: Input\n            }], addOnBlur: [{\n                type: Input\n            }], addOnPaste: [{\n                type: Input\n            }], pasteSplitPattern: [{\n                type: Input\n            }], blinkIfDupe: [{\n                type: Input\n            }], removable: [{\n                type: Input\n            }], editable: [{\n                type: Input\n            }], allowDupes: [{\n                type: Input\n            }], modelAsStrings: [{\n                type: Input\n            }], trimTags: [{\n                type: Input\n            }], inputText: [{\n                type: Input\n            }], ripple: [{\n                type: Input\n            }], tabindex: [{\n                type: Input\n            }], disable: [{\n                type: Input\n            }], dragZone: [{\n                type: Input\n            }], onRemoving: [{\n                type: Input\n            }], onAdding: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], onAdd: [{\n                type: Output\n            }], onRemove: [{\n                type: Output\n            }], onSelect: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], onTextChange: [{\n                type: Output\n            }], onPaste: [{\n                type: Output\n            }], onValidationError: [{\n                type: Output\n            }], onTagEdited: [{\n                type: Output\n            }], dropdown: [{\n                type: ContentChild,\n                args: [TagInputDropdown]\n            }], templates: [{\n                type: ContentChildren,\n                args: [TemplateRef, { descendants: false }]\n            }], inputForm: [{\n                type: ViewChild,\n                args: [TagInputForm]\n            }], tags: [{\n                type: ViewChildren,\n                args: [TagComponent]\n            }], inputTextChange: [{\n                type: Output\n            }], tabindexAttr: [{\n                type: HostBinding,\n                args: ['attr.tabindex']\n            }] } });\n\nconst optionsProvider = new OptionsProvider();\nclass TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    static withDefaults(options) {\n        optionsProvider.setOptions(options);\n    }\n}\nTagInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTagInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputModule, declarations: [TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple], imports: [CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule], exports: [TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple] });\nTagInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputModule, providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ], imports: [[\n            CommonModule,\n            ReactiveFormsModule,\n            FormsModule,\n            Ng2DropdownModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.3\", ngImport: i0, type: TagInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                        FormsModule,\n                        Ng2DropdownModule\n                    ],\n                    declarations: [\n                        TagInputComponent,\n                        DeleteIconComponent,\n                        TagInputForm,\n                        TagComponent,\n                        HighlightPipe,\n                        TagInputDropdown,\n                        TagRipple\n                    ],\n                    exports: [\n                        TagInputComponent,\n                        DeleteIconComponent,\n                        TagInputForm,\n                        TagComponent,\n                        HighlightPipe,\n                        TagInputDropdown,\n                        TagRipple\n                    ],\n                    providers: [\n                        DragProvider,\n                        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n                    ]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DeleteIconComponent, HighlightPipe, TagComponent, TagInputComponent, TagInputDropdown, TagInputForm, TagInputModule, TagRipple };\n"],"mappings":";AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,IAAI,EAAEC,UAAU,EAAEC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,SAAS,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,EAAEC,eAAe,EAAEC,UAAU,EAAEC,YAAY,EAAEC,YAAY,EAAEC,QAAQ,QAAQ,eAAe;AACzN,OAAO,KAAKC,EAAE,MAAM,gBAAgB;AACpC,SAASC,WAAW,EAAEC,SAAS,EAAEC,iBAAiB,EAAEC,mBAAmB,EAAEC,WAAW,EAAEC,uBAAuB,QAAQ,gBAAgB;AACrI,OAAO,KAAKC,EAAE,MAAM,iBAAiB;AACrC,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,OAAO,KAAKC,IAAI,MAAM,uBAAuB;AAC7C,SAASC,WAAW,EAAEC,iBAAiB,QAAQ,uBAAuB;AACtE,SAASC,MAAM,IAAIC,QAAQ,EAAEC,GAAG,EAAEC,KAAK,IAAIC,OAAO,EAAEC,YAAY,IAAIC,cAAc,QAAQ,MAAM;AAChG,SAASC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,UAAU,EAAEC,OAAO,EAAEC,SAAS,QAAQ,qBAAqB;AAC3F,SAAST,KAAK,EAAEU,oBAAoB,EAAER,YAAY,EAAEL,MAAM,QAAQ,gBAAgB;AAAC,MAAAc,GAAA;AAAA,SAAAC,0CAAAC,EAAA,EAAAC,GAAA;AAAA,MAAAC,GAAA,GAAAA,CAAAC,EAAA,EAAAC,EAAA;EAAAC,IAAA,EAAAF,EAAA;EAAAG,KAAA,EAAAF;AAAA;AAAA,SAAAG,4BAAAP,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAsBa7C,EAAE,CAAAqD,cAAA,SAsxBo9B,CAAC;IAtxBv9BrD,EAAE,CAAAsD,UAAA,IAAAV,yCAAA,wBAsxB2pC,CAAC;IAtxB9pC5C,EAAE,CAAAuD,YAAA,CAsxBuqC,CAAC;EAAA;EAAA,IAAAV,EAAA;IAAA,MAAAW,MAAA,GAtxB1qCxD,EAAE,CAAAyD,aAAA;IAAFzD,EAAE,CAAA0D,WAAA,oBAAAF,MAAA,CAAAG,OAsxBm9B,CAAC;IAtxBt9B3D,EAAE,CAAA4D,SAAA,CAsxBqlC,CAAC;IAtxBxlC5D,EAAE,CAAA6D,UAAA,4BAAF7D,EAAE,CAAA8D,eAAA,IAAAf,GAAA,EAAAS,MAAA,CAAAO,KAAA,EAAAP,MAAA,CAAAL,KAAA,CAsxBqlC,CAAC,qBAAAK,MAAA,CAAAQ,QAAD,CAAC;EAAA;AAAA;AAAA,SAAAC,0CAAApB,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqB,GAAA,GAtxBxlClE,EAAE,CAAAmE,gBAAA;IAAFnE,EAAE,CAAAqD,cAAA,oBAsxBm6D,CAAC;IAtxBt6DrD,EAAE,CAAAoE,UAAA,mBAAAC,uEAAAC,MAAA;MAAFtE,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAAM,MAAA,GAAFxE,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAsxBs2DD,MAAA,CAAAE,MAAA,CAAAJ,MAAa,EAAC;IAAA,CAAC,CAAC;IAtxBx3DtE,EAAE,CAAAuD,YAAA,CAsxB27D,CAAC;EAAA;AAAA;AAAA,SAAAoB,4BAAA9B,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAA+B,GAAA,GAtxB97D5E,EAAE,CAAAmE,gBAAA;IAAFnE,EAAE,CAAAqD,cAAA,YAsxBkuC,CAAC,YAAD,CAAC;IAtxBruCrD,EAAE,CAAAoE,UAAA,2BAAAS,yDAAAP,MAAA;MAAFtE,EAAE,CAAAuE,aAAA,CAAAK,GAAA;MAAA,MAAAE,MAAA,GAAF9E,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAsxBk9CK,MAAA,CAAAC,eAAA,CAAAT,MAAsB,EAAC;IAAA,CAAC,CAAC,4BAAAU,0DAAAV,MAAA;MAtxB7+CtE,EAAE,CAAAuE,aAAA,CAAAK,GAAA;MAAA,MAAAK,MAAA,GAAFjF,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAsxB6gDQ,MAAA,CAAAF,eAAA,CAAAT,MAAsB,EAAC;IAAA,CAA1D,CAAC,mBAAAY,iDAAAZ,MAAA;MAtxB7+CtE,EAAE,CAAAuE,aAAA,CAAAK,GAAA;MAAA,MAAAO,OAAA,GAAFnF,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAAAU,OAAA,CAAAxB,OAAA,GAsxBykDW,MAAA,CAAAc,eAAA,CAAuB,CAAC,GAAGC,SAAQ,CAAC;IAAA,CAAnI,CAAC,kBAAAC,gDAAAhB,MAAA;MAtxB7+CtE,EAAE,CAAAuE,aAAA,CAAAK,GAAA;MAAA,MAAAW,OAAA,GAAFvF,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAsxBuoDc,OAAA,CAAAC,SAAA,CAAAlB,MAAgB,EAAC;IAAA,CAA9K,CAAC;IAtxB7+CtE,EAAE,CAAAyF,MAAA,EAsxB8sD,CAAC;IAtxBjtDzF,EAAE,CAAAuD,YAAA,CAsxBotD,CAAC;IAtxBvtDvD,EAAE,CAAAsD,UAAA,IAAAW,yCAAA,wBAsxB27D,CAAC;IAtxB97DjE,EAAE,CAAAuD,YAAA,CAsxBu8D,CAAC;EAAA;EAAA,IAAAV,EAAA;IAAA,MAAA6C,MAAA,GAtxB18D1F,EAAE,CAAAyD,aAAA;IAAFzD,EAAE,CAAA4D,SAAA,CAsxB8yC,CAAC;IAtxBjzC5D,EAAE,CAAA0D,WAAA,oBAAAgC,MAAA,CAAA/B,OAsxB8yC,CAAC,UAAA+B,MAAA,CAAAC,eAAA,CAAAD,MAAA,CAAA3B,KAAA,CAAD,CAAC;IAtxBjzC/D,EAAE,CAAA4D,SAAA,CAsxB8sD,CAAC;IAtxBjtD5D,EAAE,CAAA4F,kBAAA,MAAAF,MAAA,CAAAC,eAAA,CAAAD,MAAA,CAAA3B,KAAA,MAsxB8sD,CAAC;IAtxBjtD/D,EAAE,CAAA4D,SAAA,CAsxBg6D,CAAC;IAtxBn6D5D,EAAE,CAAA6D,UAAA,SAAA6B,MAAA,CAAAG,mBAAA,EAsxBg6D,CAAC;EAAA;AAAA;AAAA,SAAAC,mCAAAjD,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtxBn6D7C,EAAE,CAAA+F,SAAA,mBAsxBilE,CAAC;EAAA;EAAA,IAAAlD,EAAA;IAAA,MAAAmD,MAAA,GAtxBplEhG,EAAE,CAAAyD,aAAA;IAAFzD,EAAE,CAAA6D,UAAA,UAAAmC,MAAA,CAAAC,WAsxBs/D,CAAC;IAtxBz/DjG,EAAE,CAAA0D,WAAA,eAsxB0hE,CAAC;EAAA;AAAA;AAAA,SAAAwC,iDAAArD,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAtxB7hE7C,EAAE,CAAA+F,SAAA,aAkqCs3C,CAAC;IAlqCz3C/F,EAAE,CAAAmG,MAAA;EAAA;EAAA,IAAAtD,EAAA;IAAA,MAAAuD,OAAA,GAAFpG,EAAE,CAAAyD,aAAA,GAAA4C,SAAA;IAAA,MAAAC,MAAA,GAAFtG,EAAE,CAAAyD,aAAA;IAAFzD,EAAE,CAAA6D,UAAA,cAAF7D,EAAE,CAAAuG,WAAA,OAAAH,OAAA,CAAAE,MAAA,CAAAE,SAAA,GAAAF,MAAA,CAAAG,QAAA,CAAAC,SAAA,CAAAC,KAAA,CAAAA,KAAA,GAAF3G,EAAE,CAAA4G,cAkqCg2C,CAAC;EAAA;AAAA;AAAA,SAAAC,0DAAAhE,EAAA,EAAAC,GAAA;AAAA,MAAAgE,GAAA,GAAAA,CAAA9D,EAAA,EAAAC,EAAA,EAAA8D,EAAA;EAAA7D,IAAA,EAAAF,EAAA;EAAAG,KAAA,EAAAF,EAAA;EAAA+D,IAAA,EAAAD;AAAA;AAAA,SAAAE,4CAAApE,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlqCn2C7C,EAAE,CAAAsD,UAAA,IAAAuD,yDAAA,wBAkqC4lD,CAAC;EAAA;EAAA,IAAAhE,EAAA;IAAA,MAAAqE,MAAA,GAlqC/lDlH,EAAE,CAAAyD,aAAA;IAAA,MAAA2C,OAAA,GAAAc,MAAA,CAAAb,SAAA;IAAA,MAAAc,QAAA,GAAAD,MAAA,CAAA/D,KAAA;IAAA,MAAAiE,OAAA,GAAAF,MAAA,CAAAF,IAAA;IAAA,MAAAxC,MAAA,GAAFxE,EAAE,CAAAyD,aAAA;IAAFzD,EAAE,CAAA6D,UAAA,qBAAAW,MAAA,CAAA6C,SAAA,CAAArF,KAkqCi+C,CAAC,4BAlqCp+ChC,EAAE,CAAAsH,eAAA,IAAAR,GAAA,EAAAV,OAAA,EAAAe,QAAA,EAAAC,OAAA,CAkqCi+C,CAAC;EAAA;AAAA;AAAA,SAAAG,0CAAA1E,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAlqCp+C7C,EAAE,CAAAqD,cAAA,sBAkqCmtC,CAAC;IAlqCttCrD,EAAE,CAAAsD,UAAA,IAAA4C,gDAAA,iBAkqCs3C,CAAC,IAAAe,2CAAA,eAAD,CAAC;IAlqCz3CjH,EAAE,CAAAuD,YAAA,CAkqCsnD,CAAC;EAAA;EAAA,IAAAV,EAAA;IAAA,MAAAuD,OAAA,GAAAtD,GAAA,CAAAuD,SAAA;IAAA,MAAA7C,MAAA,GAlqCznDxD,EAAE,CAAAyD,aAAA;IAAFzD,EAAE,CAAA6D,UAAA,UAAAuC,OAkqCwpC,CAAC,eAAA5C,MAAA,CAAA6D,SAAA,CAAAG,MAAD,CAAC;IAlqC3pCxH,EAAE,CAAA4D,SAAA,CAkqC8vC,CAAC;IAlqCjwC5D,EAAE,CAAA6D,UAAA,sBAkqC8vC,CAAC;EAAA;AAAA;AAAA,SAAA4D,iCAAA5E,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IAAA,MAAAqB,GAAA,GAlqCjwClE,EAAE,CAAAmE,gBAAA;IAAFnE,EAAE,CAAAqD,cAAA,YA2jE0nH,CAAC;IA3jE7nHrD,EAAE,CAAAoE,UAAA,sBAAAsD,yDAAA;MAAA,MAAAC,WAAA,GAAF3H,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAA0D,OAAA,GAAAD,WAAA,CAAAtB,SAAA;MAAA,MAAA7B,MAAA,GAAFxE,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CA2jE49ED,MAAA,CAAAqD,UAAA,CAAAD,OAAe,EAAC;IAAA,CAAC,CAAC,sBAAAE,yDAAA;MAAA,MAAAH,WAAA,GA3jEh/E3H,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAA0D,OAAA,GAAAD,WAAA,CAAAtB,SAAA;MAAA,MAAA0B,IAAA,GAAAJ,WAAA,CAAAxE,KAAA;MAAA,MAAA2B,MAAA,GAAF9E,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CA2jEygFK,MAAA,CAAAkD,iBAAA,CAAAJ,OAAA,EAAAG,IAAyB,EAAC;IAAA,CAAtD,CAAC,uBAAAE,0DAAA3D,MAAA;MA3jEh/EtE,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAAgD,MAAA,GAAFlH,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CA2jEikFyC,MAAA,CAAAgB,aAAA,CAAA5D,MAAoB,EAAC;IAAA,CAAzG,CAAC,yBAAA6D,4DAAA7D,MAAA;MA3jEh/EtE,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAAe,MAAA,GAAFjF,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CA2jEsnFQ,MAAA,CAAAmD,eAAA,CAAA9D,MAAsB,EAAC;IAAA,CAAhK,CAAC,oBAAA+D,uDAAA/D,MAAA;MAAA,MAAAqD,WAAA,GA3jEh/E3H,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAA6D,IAAA,GAAAJ,WAAA,CAAAxE,KAAA;MAAA,MAAAgC,OAAA,GAAFnF,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CA2jEwqFU,OAAA,CAAAmD,YAAA,CAAAhE,MAAA,EAAAyD,IAAsB,EAAC;IAAA,CAAlN,CAAC,uBAAAQ,0DAAAjE,MAAA;MAAA,MAAAqD,WAAA,GA3jEh/E3H,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAA0D,OAAA,GAAAD,WAAA,CAAAtB,SAAA;MAAA,MAAA0B,IAAA,GAAAJ,WAAA,CAAAxE,KAAA;MAAA,MAAAoC,OAAA,GAAFvF,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAAAc,OAAA,CAAAiD,QAAA,GA2jEkxFjD,OAAA,CAAAkD,aAAA,CAAAnE,MAAA,EAAAsD,OAAA,EAAAG,IAA6B,CAAC,GAAG1C,SAAQ,CAAC;IAAA,CAA/U,CAAC,kBAAAqD,qDAAApE,MAAA;MAAA,MAAAqD,WAAA,GA3jEh/E3H,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAA6D,IAAA,GAAAJ,WAAA,CAAAxE,KAAA;MAAA,MAAAwF,OAAA,GAAF3I,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAAAkE,OAAA,CAAAH,QAAA,GA2jEg2FG,OAAA,CAAAC,YAAA,CAAAtE,MAAA,EAAAyD,IAAsB,CAAC,GAAG1C,SAAQ,CAAC;IAAA,CAAtZ,CAAC,uBAAAwD,0DAAAvE,MAAA;MA3jEh/EtE,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAA4E,OAAA,GAAF9I,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAAAqE,OAAA,CAAAN,QAAA,GA2jE46FM,OAAA,CAAAC,UAAA,CAAAzE,MAAiB,CAAC,GAAGe,SAAQ,CAAC;IAAA,CAA7d,CAAC,sBAAA2D,yDAAA1E,MAAA;MAAA,MAAAqD,WAAA,GA3jEh/E3H,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAA6D,IAAA,GAAAJ,WAAA,CAAAxE,KAAA;MAAA,MAAA8F,OAAA,GAAFjJ,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAAAwE,OAAA,CAAAT,QAAA,GA2jEk/FS,OAAA,CAAAF,UAAA,CAAAzE,MAAA,EAAAyD,IAAoB,CAAC,GAAG1C,SAAQ,CAAC;IAAA,CAAtiB,CAAC,uBAAA6D,0DAAA;MA3jEh/ElJ,EAAE,CAAAuE,aAAA,CAAAL,GAAA;MAAA,MAAAiF,OAAA,GAAFnJ,EAAE,CAAAyD,aAAA;MAAA,OAAFzD,EAAE,CAAAyE,WAAA,CAAA0E,OAAA,CAAAX,QAAA,GA2jE4jGW,OAAA,CAAAC,YAAA,CAAAC,SAAA,CAAuB,CAAC,GAAGhE,SAAQ,CAAC;IAAA,CAAnnB,CAAC;IA3jEh/ErF,EAAE,CAAAuD,YAAA,CA2jE0oH,CAAC;EAAA;EAAA,IAAAV,EAAA;IAAA,MAAA+E,OAAA,GAAA9E,GAAA,CAAAuD,SAAA;IAAA,MAAA0B,IAAA,GAAAjF,GAAA,CAAAK,KAAA;IAAA,MAAAK,MAAA,GA3jE7oHxD,EAAE,CAAAyD,aAAA;IAAFzD,EAAE,CAAAsJ,qBAAA,cAAA9F,MAAA,CAAA+F,QA2jE0uF,CAAC;IA3jE7uFvJ,EAAE,CAAA6D,UAAA,cAAAL,MAAA,CAAAgG,UA2jEyoG,CAAC,aAAAhG,MAAA,CAAAiG,OAAD,CAAC,eAAAjG,MAAA,CAAAkG,iBAAD,CAAC,cAAAlG,MAAA,CAAAmG,MAAD,CAAC,UAAA5B,IAAD,CAAC,cAAAvE,MAAA,CAAAoG,SAAD,CAAC,aAAApG,MAAA,CAAA+F,QAAD,CAAC,cAAA/F,MAAA,CAAAgD,SAAD,CAAC,eAAAhD,MAAA,CAAAqG,UAAD,CAAC,eAAArG,MAAA,CAAAsG,iBAAA,KAAAtG,MAAA,CAAA6D,SAAA,CAAArF,KAAA,GAAAqD,SAAD,CAAC,cAAA7B,MAAA,CAAAgF,QAAD,CAAC,UAAAZ,OAAD,CAAC;IA3jE5oG5H,EAAE,CAAA0D,WAAA,cA2jE4qG,CAAC;EAAA;AAAA;AAAA,SAAAqG,iCAAAlH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3jE/qG7C,EAAE,CAAA+F,SAAA,YA2jEk9I,CAAC;EAAA;AAAA;AAAA,SAAAiE,qCAAAnH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3jEr9I7C,EAAE,CAAAqD,cAAA,WA2jEgqJ,CAAC,UAAD,CAAC;IA3jEnqJrD,EAAE,CAAAyF,MAAA,EA2jE2rJ,CAAC;IA3jE9rJzF,EAAE,CAAAuD,YAAA,CA2jEksJ,CAAC,CAAD,CAAC;EAAA;EAAA,IAAAV,EAAA;IAAA,MAAAoH,SAAA,GAAAnH,GAAA,CAAAuD,SAAA;IA3jErsJrG,EAAE,CAAA4D,SAAA,EA2jE2rJ,CAAC;IA3jE9rJ5D,EAAE,CAAAkK,iBAAA,CAAAD,SA2jE2rJ,CAAC;EAAA;AAAA;AAAA,SAAAE,iCAAAtH,EAAA,EAAAC,GAAA;EAAA,IAAAD,EAAA;IA3jE9rJ7C,EAAE,CAAAqD,cAAA,YA2jEwkJ,CAAC;IA3jE3kJrD,EAAE,CAAAsD,UAAA,IAAA0G,oCAAA,cA2jE4sJ,CAAC;IA3jE/sJhK,EAAE,CAAAuD,YAAA,CA2jEotJ,CAAC;EAAA;EAAA,IAAAV,EAAA;IAAA,MAAAmD,MAAA,GA3jEvtJhG,EAAE,CAAAyD,aAAA;IAAFzD,EAAE,CAAA6D,UAAA,YAAAmC,MAAA,CAAAoE,KA2jEuiJ,CAAC;IA3jE1iJpK,EAAE,CAAA4D,SAAA,CA2jEsnJ,CAAC;IA3jEznJ5D,EAAE,CAAA6D,UAAA,YAAAmC,MAAA,CAAAqE,MA2jEsnJ,CAAC;EAAA;AAAA;AAAA,MAAAC,GAAA;AA/kEztJ,MAAMC,MAAM,GAAGC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,wBAAwB,EAAE,MAAM,CAAC;AAC/D,MAAMC,aAAa,CAAC;EAChB;AACJ;AACA;AACA;AACA;EACIC,SAASA,CAAChE,KAAK,EAAEiE,GAAG,EAAE;IAClB,IAAI,CAACA,GAAG,CAACC,IAAI,CAAC,CAAC,EAAE;MACb,OAAOlE,KAAK;IAChB;IACA,IAAI;MACA,MAAMmE,KAAK,GAAG,IAAIC,MAAM,CAAE,IAAGR,MAAM,CAACK,GAAG,CAAE,GAAE,EAAE,GAAG,CAAC;MACjD,OAAOjE,KAAK,CAAC8D,OAAO,CAACK,KAAK,EAAE,WAAW,CAAC;IAC5C,CAAC,CACD,OAAOE,CAAC,EAAE;MACN,OAAOrE,KAAK;IAChB;EACJ;AACJ;AACA+D,aAAa,CAACO,IAAI,YAAAC,sBAAAC,CAAA;EAAA,YAAAA,CAAA,IAAwFT,aAAa;AAAA,CAA8C;AACrKA,aAAa,CAACU,KAAK,kBAD6EpL,EAAE,CAAAqL,YAAA;EAAAC,IAAA;EAAAC,IAAA,EACMb,aAAa;EAAAc,IAAA;AAAA,EAAsB;AAC3I;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAFgGzL,EAAE,CAAA0L,iBAAA,CAEPhB,aAAa,EAAc,CAAC;IAC3Ga,IAAI,EAAEtL,IAAI;IACV0L,IAAI,EAAE,CAAC;MACCL,IAAI,EAAE;IACV,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA,MAAMM,WAAW,GAAG,OAAO;AAC3B,MAAMC,qBAAqB,GAAG,iBAAiB;AAC/C,MAAMC,OAAO,GAAG,SAAS;AACzB,MAAMC,KAAK,GAAG,OAAO;AACrB,MAAMC,KAAK,GAAG,OAAO;AACrB,MAAMC,iBAAiB,GAAG,wEAAwE;AAClG,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,QAAQ;EAChBC,WAAW,EAAE,aAAa;EAC1BC,WAAW,EAAE,aAAa;EAC1BC,GAAG,EAAE;AACT,CAAC;AACD,MAAMC,iBAAiB,GAAG;EACtB,CAAC,EAAEL,YAAY,CAACC,MAAM;EACtB,EAAE,EAAED,YAAY,CAACC,MAAM;EACvB,EAAE,EAAED,YAAY,CAACE,WAAW;EAC5B,EAAE,EAAEF,YAAY,CAACG,WAAW;EAC5B,CAAC,EAAEH,YAAY,CAACI;AACpB,CAAC;AACD,MAAME,iBAAiB,GAAG,MAAM;AAChC,MAAMC,IAAI,GAAG,MAAM;AACnB,MAAMC,IAAI,GAAG,MAAM;AAEnB,MAAMC,YAAY,CAAC;EACfC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACvK,KAAK,GAAG;MACTwK,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,KAAK;MACf3J,KAAK,EAAEkC;IACX,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;EACI0H,cAAcA,CAACC,KAAK,EAAEC,GAAG,EAAE;IACvB,IAAID,KAAK,IAAIA,KAAK,CAACE,YAAY,EAAE;MAC7BF,KAAK,CAACE,YAAY,CAACC,OAAO,CAACX,iBAAiB,EAAEY,IAAI,CAACC,SAAS,CAACJ,GAAG,CAAC,CAAC;IACtE;EACJ;EACA;AACJ;AACA;AACA;EACIK,cAAcA,CAACN,KAAK,EAAE;IAClB,IAAIA,KAAK,IAAIA,KAAK,CAACE,YAAY,EAAE;MAC7B,MAAMK,IAAI,GAAGP,KAAK,CAACE,YAAY,CAACM,OAAO,CAAChB,iBAAiB,CAAC;MAC1D,IAAI;QACA,OAAOY,IAAI,CAACK,KAAK,CAACF,IAAI,CAAC;MAC3B,CAAC,CACD,MAAM;QACF;MACJ;IACJ;EACJ;EACA;AACJ;AACA;AACA;EACIG,SAASA,CAACC,MAAM,EAAE;IACd,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;EACA;AACJ;AACA;AACA;EACIC,WAAWA,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EACA;AACJ;AACA;AACA;AACA;AACA;EACIjF,YAAYA,CAACqE,GAAG,EAAEa,YAAY,EAAEC,YAAY,EAAE;IAC1C,IAAI,CAAC1E,SAAS,CAAC,CAAC;IAChB,IAAI,CAACsE,MAAM,CAAC3F,iBAAiB,CAACiF,GAAG,EAAEa,YAAY,CAAC;IAChD,IAAI,CAACD,QAAQ,CAACG,iBAAiB,CAAC,KAAK,EAAEf,GAAG,EAAEc,YAAY,CAAC;EAC7D;EACA;AACJ;AACA;AACA;EACIE,QAAQA,CAAC5L,KAAK,EAAE;IACZ,IAAI,CAACA,KAAK,GAAG;MAAE,GAAG,IAAI,CAACA,KAAK;MAAE,GAAGA;IAAM,CAAC;EAC5C;EACA;AACJ;AACA;AACA;EACI6L,QAAQA,CAACC,GAAG,EAAE;IACV,OAAOA,GAAG,GAAG,IAAI,CAAC9L,KAAK,CAAC8L,GAAG,CAAC,GAAG,IAAI,CAAC9L,KAAK;EAC7C;EACA;AACJ;AACA;EACIgH,SAASA,CAAA,EAAG;IACR,IAAI,CAAC4E,QAAQ,CAAC;MACVpB,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE,KAAK;MACf3J,KAAK,EAAEkC;IACX,CAAC,CAAC;EACN;AACJ;AACAsH,YAAY,CAAC1B,IAAI,YAAAmD,qBAAAjD,CAAA;EAAA,YAAAA,CAAA,IAAwFwB,YAAY;AAAA,CAAoD;AACzKA,YAAY,CAAC0B,KAAK,kBAvH8ErO,EAAE,CAAAsO,kBAAA;EAAAC,KAAA,EAuHW5B,YAAY;EAAA6B,OAAA,EAAZ7B,YAAY,CAAA1B;AAAA,EAAG;AAC5H;EAAA,QAAAQ,SAAA,oBAAAA,SAAA,KAxHgGzL,EAAE,CAAA0L,iBAAA,CAwHPiB,YAAY,EAAc,CAAC;IAC1GpB,IAAI,EAAErL;EACV,CAAC,CAAC;AAAA;AAEV,MAAMuO,QAAQ,GAAG;EACbhI,QAAQ,EAAE;IACNiI,aAAa,EAAE,EAAE;IACjBC,iBAAiB,EAAE,EAAE;IACrBC,QAAQ,EAAEC,QAAQ;IAClBC,WAAW,EAAElD,WAAW;IACxBmD,oBAAoB,EAAElD,qBAAqB;IAC3CmD,UAAU,EAAE,EAAE;IACdC,eAAe,EAAE,EAAE;IACnBC,oBAAoB,EAAE,KAAK;IAC3BC,aAAa,EAAE,CAAC,CAAC;IACjB/E,KAAK,EAAE,EAAE;IACTgF,oBAAoB,EAAE,GAAG;IACzBC,OAAO,EAAE,IAAI;IACbC,UAAU,EAAE,EAAE;IACdC,WAAW,EAAE,KAAK;IAClBC,QAAQ,EAAE,KAAK;IACfC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAE,KAAK;IACjBC,iBAAiB,EAAE,GAAG;IACtBC,WAAW,EAAE,IAAI;IACjBhG,SAAS,EAAE,IAAI;IACfL,QAAQ,EAAE,KAAK;IACfsG,UAAU,EAAE,KAAK;IACjBC,cAAc,EAAE,KAAK;IACrBC,QAAQ,EAAE,IAAI;IACdpG,MAAM,EAAE,IAAI;IACZqG,QAAQ,EAAE,EAAE;IACZvG,OAAO,EAAE,KAAK;IACdjB,QAAQ,EAAE,EAAE;IACZyH,UAAU,EAAE5K,SAAS;IACrB6K,QAAQ,EAAE7K,SAAS;IACnBmB,SAAS,EAAE,SAAS;IACpBqD,UAAU,EAAE,OAAO;IACnBsG,iBAAiB,EAAE;MACfC,KAAK,EAAE,OAAO;MACdC,KAAK,EAAE;IACX;EACJ,CAAC;EACDC,QAAQ,EAAE;IACN9J,SAAS,EAAE,SAAS;IACpBqD,UAAU,EAAE,OAAO;IACnB0G,YAAY,EAAE,IAAI;IAClBC,MAAM,EAAE,MAAM;IACdC,iBAAiB,EAAE,KAAK;IACxBC,mBAAmB,EAAE,KAAK;IAC1BC,iBAAiB,EAAE,CAAC;IACpBC,YAAY,EAAE/B,QAAQ;IACtBgC,QAAQ,EAAE,IAAI;IACdC,aAAa,EAAE,IAAI;IACnBC,MAAM,EAAE,IAAI;IACZC;EACJ;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAUA,CAACrK,KAAK,EAAEsK,MAAM,EAAE;EAC/B,MAAMC,WAAW,GAAGD,MAAM,CAAC,IAAI,CAACzK,SAAS,CAAC,CAAC2K,QAAQ,CAAC,CAAC;EACrD,OAAOD,WAAW,IAAIA,WAAW,CAC5BE,WAAW,CAAC,CAAC,CACbC,OAAO,CAAC1K,KAAK,CAACyK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1C;AAEA,MAAME,eAAe,CAAC;EAClBC,UAAUA,CAACC,OAAO,EAAE;IAChBF,eAAe,CAAC7C,QAAQ,CAAChI,QAAQ,GAAG;MAAE,GAAGgI,QAAQ,CAAChI,QAAQ;MAAE,GAAG+K,OAAO,CAAC/K;IAAS,CAAC;IACjF6K,eAAe,CAAC7C,QAAQ,CAAC6B,QAAQ,GAAG;MAAE,GAAG7B,QAAQ,CAAC6B,QAAQ;MAAE,GAAGkB,OAAO,CAAClB;IAAS,CAAC;EACrF;AACJ;AACAgB,eAAe,CAAC7C,QAAQ,GAAGA,QAAQ;AAEnC,SAASgD,QAAQA,CAACC,GAAG,EAAE;EACnB,OAAOA,GAAG,KAAKC,MAAM,CAACD,GAAG,CAAC;AAC9B;AACA,MAAME,gBAAgB,CAAC;EACnBhF,WAAWA,CAAA,EAAG;IACV,IAAI,CAACiF,MAAM,GAAG,EAAE;IAChB;AACR;AACA;IACQ,IAAI,CAACrL,SAAS,GAAG8K,eAAe,CAAC7C,QAAQ,CAAChI,QAAQ,CAACD,SAAS;IAC5D;AACR;AACA;IACQ,IAAI,CAACqD,UAAU,GAAGyH,eAAe,CAAC7C,QAAQ,CAAChI,QAAQ,CAACoD,UAAU;EAClE;EACA,IAAIiI,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACD,MAAM;EACtB;EACA,IAAIC,KAAKA,CAACA,KAAK,EAAE;IACb,IAAI,CAACD,MAAM,GAAGC,KAAK;IACnB,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACF,MAAM,CAAC;EACvC;EACAG,SAASA,CAAA,EAAG;IACR,IAAI,CAACC,kBAAkB,CAAC,CAAC;EAC7B;EACAC,UAAUA,CAACJ,KAAK,EAAE;IACd,IAAI,CAACD,MAAM,GAAGC,KAAK,IAAI,EAAE;EAC7B;EACAK,gBAAgBA,CAACC,EAAE,EAAE;IACjB,IAAI,CAACL,iBAAiB,GAAGK,EAAE;EAC/B;EACAC,iBAAiBA,CAACD,EAAE,EAAE;IAClB,IAAI,CAACH,kBAAkB,GAAGG,EAAE;EAChC;EACA;AACJ;AACA;AACA;AACA;EACIE,YAAYA,CAACpP,IAAI,EAAEqP,YAAY,GAAG,KAAK,EAAE;IACrC,MAAMC,QAAQ,GAAGD,YAAY,IAAI,IAAI,CAACjC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACzG,UAAU,GAAG,IAAI,CAACA,UAAU;IAC3F,OAAO4H,QAAQ,CAACvO,IAAI,CAAC,GAAGA,IAAI,CAACsP,QAAQ,CAAC,GAAGtP,IAAI;EACjD;EACA;AACJ;AACA;AACA;AACA;EACIuP,cAAcA,CAACvP,IAAI,EAAEqP,YAAY,GAAG,KAAK,EAAE;IACvC,MAAMC,QAAQ,GAAGD,YAAY,IAAI,IAAI,CAACjC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC9J,SAAS,GAAG,IAAI,CAACA,SAAS;IACzF,OAAOiL,QAAQ,CAACvO,IAAI,CAAC,GAAGA,IAAI,CAACsP,QAAQ,CAAC,GAAGtP,IAAI;EACjD;EACA;AACJ;AACA;AACA;EACIwP,eAAeA,CAACvP,KAAK,EAAE;IACnB,OAAO,IAAI,CAAC2O,KAAK,CAACjQ,MAAM,CAAC,CAACqB,IAAI,EAAEyP,QAAQ,KAAKA,QAAQ,KAAKxP,KAAK,CAAC;EACpE;AACJ;AACAyO,gBAAgB,CAAC3G,IAAI,YAAA2H,yBAAAzH,CAAA;EAAA,YAAAA,CAAA,IAAwFyG,gBAAgB;AAAA,CAAmD;AAChLA,gBAAgB,CAACiB,IAAI,kBApQ2E7S,EAAE,CAAA8S,iBAAA;EAAAvH,IAAA,EAoQDqG,gBAAgB;EAAAmB,MAAA;IAAAvM,SAAA;IAAAqD,UAAA;EAAA;AAAA,EAA+E;AAChM;EAAA,QAAA4B,SAAA,oBAAAA,SAAA,KArQgGzL,EAAE,CAAA0L,iBAAA,CAqQPkG,gBAAgB,EAAc,CAAC;IAC9GrG,IAAI,EAAEpL;EACV,CAAC,CAAC,QAAkB;IAAEqG,SAAS,EAAE,CAAC;MAC1B+E,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEyJ,UAAU,EAAE,CAAC;MACb0B,IAAI,EAAEnL;IACV,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS4S,MAAMA,CAACC,YAAY,EAAEC,MAAM,EAAEC,SAAS,GAAG,IAAI,EAAE;EACpD;EACA,IAAI,CAAC,IAAI,CAACC,SAAS,CAACC,cAAc,CAACJ,YAAY,CAAC,EAAE;IAC9C,MAAM,IAAIK,KAAK,CAAC,gCAAgC,CAAC;EACrD;EACA;EACA,IAAI,CAACH,SAAS,EAAE;IACZ;EACJ;EACA;EACA,IAAI,CAACC,SAAS,CAACH,YAAY,CAAC,CAACM,IAAI,CAACL,MAAM,CAAC;AAC7C;AAEA,MAAMM,YAAY,CAAC;EACf5G,WAAWA,CAAA,EAAG;IACV;AACR;AACA;IACQ,IAAI,CAAC6G,QAAQ,GAAG,IAAIpT,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAACqT,MAAM,GAAG,IAAIrT,YAAY,CAAC,CAAC;IAChC;AACR;AACA;IACQ,IAAI,CAACsT,OAAO,GAAG,IAAItT,YAAY,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAACuT,OAAO,GAAG,IAAIvT,YAAY,CAAC,CAAC;IACjC;AACR;AACA;IACQ,IAAI,CAACwT,SAAS,GAAG,IAAIxT,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAACyT,eAAe,GAAG,IAAIzT,YAAY,CAAC,CAAC;IACzC;AACR;AACA;IACQ,IAAI,CAAC2O,UAAU,GAAG,EAAE;IACpB;AACR;AACA;AACA;IACQ,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB;AACR;AACA;AACA;IACQ,IAAI,CAAC8E,QAAQ,GAAG,EAAE;IAClB;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAG,KAAK;IACrB,IAAI,CAAC9Q,IAAI,GAAG,IAAIhC,WAAW,CAAC;MAAEyF,KAAK,EAAE,EAAE;MAAEqN,QAAQ,EAAE,IAAI,CAACA;IAAS,CAAC,CAAC;EACvE;EACA;AACJ;AACA;EACI,IAAIC,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC/Q,IAAI,CAACyD,KAAK;EAC1B;EACA;AACJ;AACA;AACA;EACI,IAAIsN,SAASA,CAACC,IAAI,EAAE;IAChB,IAAI,CAAChR,IAAI,CAACiR,QAAQ,CAACD,IAAI,CAAC;IACxB,IAAI,CAACJ,eAAe,CAACM,IAAI,CAACF,IAAI,CAAC;EACnC;EACAG,QAAQA,CAAA,EAAG;IACP,IAAI,CAACnR,IAAI,CAACoR,aAAa,CAAC,IAAI,CAACtF,UAAU,CAAC;IACxC,IAAI,CAAC9L,IAAI,CAACqR,kBAAkB,CAAC,IAAI,CAACtF,eAAe,CAAC;IAClD;IACA,IAAI,CAACuF,IAAI,GAAG,IAAIrT,SAAS,CAAC;MACtB+B,IAAI,EAAE,IAAI,CAACA;IACf,CAAC,CAAC;EACN;EACAuR,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAIA,OAAO,CAACV,QAAQ,IAAI,CAACU,OAAO,CAACV,QAAQ,CAACW,WAAW,EAAE;MACnD,IAAID,OAAO,CAACV,QAAQ,CAACY,YAAY,EAAE;QAC/B,IAAI,CAACJ,IAAI,CAACK,QAAQ,CAAC,MAAM,CAAC,CAACpL,OAAO,CAAC,CAAC;MACxC,CAAC,MACI;QACD,IAAI,CAAC+K,IAAI,CAACK,QAAQ,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,CAAC;MACvC;IACJ;EACJ;EACA;AACJ;AACA;EACI,IAAInO,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAAC6N,IAAI,CAACO,GAAG,CAAC,MAAM,CAAC;EAChC;EACA;AACJ;AACA;EACIC,cAAcA,CAAA,EAAG;IACb,MAAMC,GAAG,GAAG,OAAOC,QAAQ,KAAK,WAAW,GAAGA,QAAQ,GAAG7P,SAAS;IAClE,OAAO4P,GAAG,GAAGA,GAAG,CAACE,aAAa,KAAK,IAAI,CAACC,KAAK,CAACC,aAAa,GAAG,KAAK;EACvE;EACA;AACJ;AACA;AACA;EACIC,gBAAgBA,CAACC,QAAQ,EAAE;IACvB,OAAO5D,MAAM,CAAC6D,IAAI,CAACD,QAAQ,CAAC,CACvB1T,MAAM,CAAC4T,GAAG,IAAI,IAAI,CAAC9O,KAAK,CAAC+O,QAAQ,CAACD,GAAG,CAAC,CAAC,CACvC1T,GAAG,CAAC0T,GAAG,IAAIF,QAAQ,CAACE,GAAG,CAAC,CAAC;EAClC;EACA;AACJ;AACA;EACIE,SAASA,CAAA,EAAG;IACR,MAAM;MAAEC,KAAK;MAAEjP,KAAK;MAAEkP;IAAM,CAAC,GAAG,IAAI,CAACrB,IAAI;IACzC,OAAOoB,KAAK,IAAIjP,KAAK,CAACzD,IAAI,IAAI,CAAC2S,KAAK;EACxC;EACA;AACJ;AACA;EACIC,KAAKA,CAAA,EAAG;IACJ,IAAI,CAACV,KAAK,CAACC,aAAa,CAACS,KAAK,CAAC,CAAC;EACpC;EACA;AACJ;AACA;EACIC,IAAIA,CAAA,EAAG;IACH,IAAI,CAACX,KAAK,CAACC,aAAa,CAACU,IAAI,CAAC,CAAC;EACnC;EACA;AACJ;AACA;EACIC,kBAAkBA,CAAA,EAAG;IACjB,OAAO,IAAI,CAACZ,KAAK,CAACC,aAAa,CAACY,qBAAqB,CAAC,CAAC;EAC3D;EACA;AACJ;AACA;AACA;EACIC,OAAOA,CAAA,EAAG;IACN,MAAMd,KAAK,GAAG,IAAI,CAACA,KAAK,CAACC,aAAa;IACtCD,KAAK,CAACe,aAAa,CAACC,WAAW,CAAChB,KAAK,CAAC;EAC1C;EACA;AACJ;AACA;AACA;EACIiB,SAASA,CAAC/R,MAAM,EAAE;IACd,IAAI,CAAC2P,SAAS,GAAG,IAAI,CAACtN,KAAK,CAACA,KAAK;IACjC,IAAIrC,MAAM,CAAC6J,GAAG,KAAK,OAAO,EAAE;MACxB,IAAI,CAACmI,MAAM,CAAChS,MAAM,CAAC;IACvB,CAAC,MACI;MACD,OAAO,IAAI,CAACuP,SAAS,CAACO,IAAI,CAAC9P,MAAM,CAAC;IACtC;EACJ;EACA;AACJ;AACA;AACA;EACIiS,OAAOA,CAACjS,MAAM,EAAE;IACZ,IAAI,CAAC2P,SAAS,GAAG,IAAI,CAACtN,KAAK,CAACA,KAAK;IACjC,OAAO,IAAI,CAACiN,OAAO,CAACQ,IAAI,CAAC9P,MAAM,CAAC;EACpC;EACA;AACJ;AACA;EACIgS,MAAMA,CAAChS,MAAM,EAAE;IACXA,MAAM,CAACkS,cAAc,CAAC,CAAC;IACvB,IAAI,CAAC/C,QAAQ,CAACW,IAAI,CAAC9P,MAAM,CAAC;EAC9B;AACJ;AACAkP,YAAY,CAACvI,IAAI,YAAAwL,qBAAAtL,CAAA;EAAA,YAAAA,CAAA,IAAwFqI,YAAY;AAAA,CAAmD;AACxKA,YAAY,CAACkD,IAAI,kBAnc+E1W,EAAE,CAAA2W,iBAAA;EAAApL,IAAA,EAmcLiI,YAAY;EAAAoD,SAAA;EAAAC,SAAA,WAAAC,mBAAAjU,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAncT7C,EAAE,CAAA+W,WAAA,CAAApU,GAAA;IAAA;IAAA,IAAAE,EAAA;MAAA,IAAAmU,EAAA;MAAFhX,EAAE,CAAAiX,cAAA,CAAAD,EAAA,GAAFhX,EAAE,CAAAkX,WAAA,QAAApU,GAAA,CAAAsS,KAAA,GAAA4B,EAAA,CAAAhV,KAAA;IAAA;EAAA;EAAA+Q,MAAA;IAAAjE,WAAA;IAAAE,UAAA;IAAAC,eAAA;IAAAI,OAAA;IAAAC,UAAA;IAAAyE,QAAA;IAAAC,QAAA;IAAAC,SAAA;EAAA;EAAAkD,OAAA;IAAA1D,QAAA;IAAAC,MAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,SAAA;IAAAC,eAAA;EAAA;EAAAsD,QAAA,GAAFpX,EAAE,CAAAqX,oBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAxT,QAAA,WAAAyT,sBAAA5U,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7C,EAAE,CAAAqD,cAAA,aAmc2mB,CAAC;MAnc9mBrD,EAAE,CAAAoE,UAAA,sBAAAsT,+CAAApT,MAAA;QAAA,OAmcskBxB,GAAA,CAAAwT,MAAA,CAAAhS,MAAa,CAAC;MAAA,CAAC,CAAC;MAncxlBtE,EAAE,CAAAqD,cAAA,iBAmcmzC,CAAC;MAnctzCrD,EAAE,CAAAoE,UAAA,mBAAAuT,6CAAArT,MAAA;QAAA,OAmcupCxB,GAAA,CAAA6Q,OAAA,CAAAS,IAAA,CAAA9P,MAAmB,CAAC;MAAA,CAAC,CAAC,kBAAAsT,4CAAAtT,MAAA;QAAA,OAAsBxB,GAAA,CAAA4Q,MAAA,CAAAU,IAAA,CAAA9P,MAAkB,CAAC;MAAA,CAA1C,CAAC,qBAAAuT,+CAAAvT,MAAA;QAAA,OAAoExB,GAAA,CAAAuT,SAAA,CAAA/R,MAAgB,CAAC;MAAA,CAAtF,CAAC,mBAAAwT,6CAAAxT,MAAA;QAAA,OAA8GxB,GAAA,CAAAyT,OAAA,CAAAjS,MAAc,CAAC;MAAA,CAA9H,CAAC;MAnc/qCtE,EAAE,CAAAuD,YAAA,CAmcmzC,CAAC,CAAD,CAAC;IAAA;IAAA,IAAAV,EAAA;MAnctzC7C,EAAE,CAAA6D,UAAA,cAAAf,GAAA,CAAA0R,IAmc0mB,CAAC;MAnc7mBxU,EAAE,CAAA4D,SAAA,CAmckzB,CAAC;MAncrzB5D,EAAE,CAAAsJ,qBAAA,aAAAxG,GAAA,CAAAkR,QAAA,QAAAlR,GAAA,CAAAiR,QAAA,GAAAjR,GAAA,CAAAiR,QAAA,IAmckzB,CAAC;MAncrzB/T,EAAE,CAAA6D,UAAA,YAAAf,GAAA,CAAAwM,UAmc05B,CAAC;MAnc75BtP,EAAE,CAAA0D,WAAA,OAAAZ,GAAA,CAAAuM,OAmc47B,CAAC,gBAAAvM,GAAA,CAAAgM,WAAD,CAAC,eAAAhM,GAAA,CAAAgM,WAAD,CAAC,aAAAhM,GAAA,CAAAiR,QAAD,CAAC,aAAAjR,GAAA,CAAAkR,QAAA,GAAAlR,GAAA,CAAAkR,QAAA,OAAD,CAAC;IAAA;EAAA;EAAA+D,YAAA,GAAq0I9W,EAAE,CAAC+W,aAAa,EAAsE/W,EAAE,CAACgX,oBAAoB,EAAkHhX,EAAE,CAACiX,kBAAkB,EAAyGjX,EAAE,CAACkX,oBAAoB,EAAsOlX,EAAE,CAACmX,kBAAkB,EAA2HnX,EAAE,CAACoX,eAAe,EAAmEpX,EAAE,CAACqX,eAAe,EAA2H9W,EAAE,CAAC+W,OAAO;EAAAC,MAAA;AAAA,EAA2D;AACr3M;EAAA,QAAA/M,SAAA,oBAAAA,SAAA,KApcgGzL,EAAE,CAAA0L,iBAAA,CAocP8H,YAAY,EAAc,CAAC;IAC1GjI,IAAI,EAAEjL,SAAS;IACfqL,IAAI,EAAE,CAAC;MAAE8M,QAAQ,EAAE,gBAAgB;MAAEzU,QAAQ,EAAE,6xBAA6xB;MAAEwU,MAAM,EAAE,CAAC,+5HAA+5H;IAAE,CAAC;EAC7vJ,CAAC,CAAC,QAAkB;IAAE/E,QAAQ,EAAE,CAAC;MACzBlI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEmT,MAAM,EAAE,CAAC;MACTnI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEoT,OAAO,EAAE,CAAC;MACVpI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEqT,OAAO,EAAE,CAAC;MACVrI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEsT,SAAS,EAAE,CAAC;MACZtI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEuT,eAAe,EAAE,CAAC;MAClBvI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEuO,WAAW,EAAE,CAAC;MACdvD,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE4O,UAAU,EAAE,CAAC;MACbzD,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE6O,eAAe,EAAE,CAAC;MAClB1D,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEiP,OAAO,EAAE,CAAC;MACV9D,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEkP,UAAU,EAAE,CAAC;MACb/D,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE2T,QAAQ,EAAE,CAAC;MACXxI,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE4T,QAAQ,EAAE,CAAC;MACXzI,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEgV,KAAK,EAAE,CAAC;MACR7J,IAAI,EAAE/K,SAAS;MACfmL,IAAI,EAAE,CAAC,OAAO;IAClB,CAAC,CAAC;IAAEsI,SAAS,EAAE,CAAC;MACZ1I,IAAI,EAAEnL;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAMsY,SAAS,CAAC;EACZ9L,WAAWA,CAAA,EAAG;IACV,IAAI,CAACvK,KAAK,GAAG,MAAM;EACvB;AACJ;AACAqW,SAAS,CAACzN,IAAI,YAAA0N,kBAAAxN,CAAA;EAAA,YAAAA,CAAA,IAAwFuN,SAAS;AAAA,CAAmD;AAClKA,SAAS,CAAChC,IAAI,kBA9ekF1W,EAAE,CAAA2W,iBAAA;EAAApL,IAAA,EA8eRmN,SAAS;EAAA9B,SAAA;EAAA7D,MAAA;IAAA1Q,KAAA;EAAA;EAAAiV,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAxT,QAAA,WAAA4U,mBAAA/V,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MA9eH7C,EAAE,CAAA+F,SAAA,YA+e9C,CAAC;IAAA;IAAA,IAAAlD,EAAA;MA/e2C7C,EAAE,CAAA6D,UAAA,SAAAf,GAAA,CAAAT,KA+erD,CAAC;IAAA;EAAA;EAAAmW,MAAA;EAAAjL,IAAA;IAAAsL,SAAA,EAC+L,CACrOzW,OAAO,CAAC,KAAK,EAAE,CACXC,KAAK,CAAC,MAAM,EAAEC,KAAK,CAAC;MAAEwW,KAAK,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAE,CAAC,CAAC,CAAC,EAC9CxW,UAAU,CAAC,iBAAiB,EAAE,CAC1BC,OAAO,CAAC,GAAG,EAAEC,SAAS,CAAC,CACnBH,KAAK,CAAC;MAAEyW,OAAO,EAAE,CAAC;MAAEvI,MAAM,EAAE,CAAC;MAAEsI,KAAK,EAAE,KAAK;MAAEE,YAAY,EAAE;IAAO,CAAC,CAAC,EACpE1W,KAAK,CAAC;MAAEyW,OAAO,EAAE,CAAC;MAAEvI,MAAM,EAAE,GAAG;MAAEsI,KAAK,EAAE;IAAM,CAAC,CAAC,EAChDxW,KAAK,CAAC;MAAEyW,OAAO,EAAE,GAAG;MAAEvI,MAAM,EAAE,CAAC;MAAEsI,KAAK,EAAE,MAAM;MAAEE,YAAY,EAAE;IAAO,CAAC,CAAC,CAC1E,CAAC,CAAC,CACN,CAAC,CACL,CAAC;EACL;AAAA,EAAG;AACR;EAAA,QAAAvN,SAAA,oBAAAA,SAAA,KA5fgGzL,EAAE,CAAA0L,iBAAA,CA4fPgN,SAAS,EAAc,CAAC;IACvGnN,IAAI,EAAEjL,SAAS;IACfqL,IAAI,EAAE,CAAC;MACC8M,QAAQ,EAAE,YAAY;MACtBD,MAAM,EAAE,CAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;MACcxU,QAAQ,EAAG;AAC/B;AACA,KAAK;MACeiV,UAAU,EAAE,CACR7W,OAAO,CAAC,KAAK,EAAE,CACXC,KAAK,CAAC,MAAM,EAAEC,KAAK,CAAC;QAAEwW,KAAK,EAAE,CAAC;QAAEC,OAAO,EAAE;MAAE,CAAC,CAAC,CAAC,EAC9CxW,UAAU,CAAC,iBAAiB,EAAE,CAC1BC,OAAO,CAAC,GAAG,EAAEC,SAAS,CAAC,CACnBH,KAAK,CAAC;QAAEyW,OAAO,EAAE,CAAC;QAAEvI,MAAM,EAAE,CAAC;QAAEsI,KAAK,EAAE,KAAK;QAAEE,YAAY,EAAE;MAAO,CAAC,CAAC,EACpE1W,KAAK,CAAC;QAAEyW,OAAO,EAAE,CAAC;QAAEvI,MAAM,EAAE,GAAG;QAAEsI,KAAK,EAAE;MAAM,CAAC,CAAC,EAChDxW,KAAK,CAAC;QAAEyW,OAAO,EAAE,GAAG;QAAEvI,MAAM,EAAE,CAAC;QAAEsI,KAAK,EAAE,MAAM;QAAEE,YAAY,EAAE;MAAO,CAAC,CAAC,CAC1E,CAAC,CAAC,CACN,CAAC,CACL,CAAC;IAEV,CAAC;EACT,CAAC,CAAC,QAAkB;IAAE3W,KAAK,EAAE,CAAC;MACtBkJ,IAAI,EAAEnL;IACV,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM8Y,mBAAmB,CAAC;AAE1BA,mBAAmB,CAACjO,IAAI,YAAAkO,4BAAAhO,CAAA;EAAA,YAAAA,CAAA,IAAwF+N,mBAAmB;AAAA,CAAmD;AACtLA,mBAAmB,CAACxC,IAAI,kBAziBwE1W,EAAE,CAAA2W,iBAAA;EAAApL,IAAA,EAyiBE2N,mBAAmB;EAAAtC,SAAA;EAAAU,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAxT,QAAA,WAAAoV,6BAAAvW,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAziBvB7C,EAAE,CAAAqD,cAAA,UAyiB8E,CAAC;MAziBjFrD,EAAE,CAAAqZ,cAAA,CAyiB+K,CAAC;MAziBlLrZ,EAAE,CAAAqD,cAAA,YAyiB+K,CAAC;MAziBlLrD,EAAE,CAAA+F,SAAA,aAyiBwnB,CAAC;MAziB3nB/F,EAAE,CAAAuD,YAAA,CAyiBooB,CAAC,CAAD,CAAC;IAAA;EAAA;EAAAiV,MAAA;AAAA,EAAwvJ;AAC/9K;EAAA,QAAA/M,SAAA,oBAAAA,SAAA,KA1iBgGzL,EAAE,CAAA0L,iBAAA,CA0iBPwN,mBAAmB,EAAc,CAAC;IACjH3N,IAAI,EAAEjL,SAAS;IACfqL,IAAI,EAAE,CAAC;MAAE8M,QAAQ,EAAE,aAAa;MAAEzU,QAAQ,EAAE,ukBAAukB;MAAEwU,MAAM,EAAE,CAAC,+tJAA+tJ;IAAE,CAAC;EACp2K,CAAC,CAAC;AAAA;;AAEV;AACA,MAAMc,SAAS,GAAG,OAAOC,MAAM,KAAK,WAAW,GAAGA,MAAM,CAACD,SAAS,GAAG;EACjEE,SAAS,EAAE,QAAQ;EACnBC,MAAM,EAAE;AACZ,CAAC;AACD,MAAMC,QAAQ,GAAG,QAAQ,CAACC,IAAI,CAACL,SAAS,CAACE,SAAS,CAAC,IAAI,YAAY,CAACG,IAAI,CAACL,SAAS,CAACG,MAAM,CAAC;AAC1F,MAAMG,YAAY,CAAC;EACfhN,WAAWA,CAACiN,OAAO,EAAEC,QAAQ,EAAEC,KAAK,EAAE;IAClC,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB;AACR;AACA;IACQ,IAAI,CAAC/F,QAAQ,GAAG,KAAK;IACrB;AACR;AACA;IACQ,IAAI,CAACgG,QAAQ,GAAG,IAAI3Z,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAAC4Z,QAAQ,GAAG,IAAI5Z,YAAY,CAAC,CAAC;IAClC;AACR;AACA;IACQ,IAAI,CAACqT,MAAM,GAAG,IAAIrT,YAAY,CAAC,CAAC;IAChC;AACR;AACA;IACQ,IAAI,CAACgW,SAAS,GAAG,IAAIhW,YAAY,CAAC,CAAC;IACnC;AACR;AACA;IACQ,IAAI,CAAC6Z,WAAW,GAAG,IAAI7Z,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACsD,OAAO,GAAG,KAAK;IACpB;AACR;AACA;IACQ,IAAI,CAACsC,WAAW,GAAG,MAAM;EAC7B;EACA;AACJ;AACA;EACI,IAAIkU,QAAQA,CAAA,EAAG;IACX,OAAO,OAAO,IAAI,CAACpW,KAAK,KAAK,QAAQ,IAAI,IAAI,CAACA,KAAK,CAACoW,QAAQ,KAAK,IAAI;EACzE;EACA;AACJ;AACA;EACIC,MAAMA,CAAC9V,MAAM,EAAE;IACX,IAAI,IAAI,CAAC6V,QAAQ,IAAI,IAAI,CAACnG,QAAQ,EAAE;MAChC;IACJ;IACA,IAAI1P,MAAM,EAAE;MACRA,MAAM,CAACc,eAAe,CAAC,CAAC;IAC5B;IACA,IAAI,CAAC0Q,KAAK,CAAC,CAAC;IACZ,IAAI,CAACkE,QAAQ,CAAC5F,IAAI,CAAC,IAAI,CAACrQ,KAAK,CAAC;EAClC;EACA;AACJ;AACA;EACIW,MAAMA,CAACJ,MAAM,EAAE;IACXA,MAAM,CAACc,eAAe,CAAC,CAAC;IACxB,IAAI,CAAC6U,QAAQ,CAAC7F,IAAI,CAAC,IAAI,CAAC;EAC5B;EACA;AACJ;AACA;EACI0B,KAAKA,CAAA,EAAG;IACJ,IAAI,CAAC+D,OAAO,CAACxE,aAAa,CAACS,KAAK,CAAC,CAAC;EACtC;EACAuE,IAAIA,CAAA,EAAG;IACH,IAAI,CAACC,MAAM,GAAG,IAAI;EACtB;EACA;AACJ;AACA;AACA;EACIC,OAAOA,CAACvN,KAAK,EAAE;IACX,IAAI,IAAI,CAACrJ,OAAO,EAAE;MACd,IAAIqJ,KAAK,CAACwN,OAAO,KAAK,EAAE,EAAE;QACtB,OAAO,IAAI,CAACzV,eAAe,CAACiI,KAAK,CAAC;MACtC;IACJ,CAAC,MACI;MACD,IAAI,CAACqJ,SAAS,CAACjC,IAAI,CAAC;QAAEpH,KAAK;QAAEjJ,KAAK,EAAE,IAAI,CAACA;MAAM,CAAC,CAAC;IACrD;EACJ;EACA;AACJ;AACA;EACI0W,KAAKA,CAAA,EAAG;IACJ,MAAMC,SAAS,GAAG,IAAI,CAACb,OAAO,CAACxE,aAAa,CAACqF,SAAS;IACtDA,SAAS,CAACC,GAAG,CAAC,OAAO,CAAC;IACtBC,UAAU,CAAC,MAAMF,SAAS,CAAChW,MAAM,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC;EACnD;EACA;AACJ;AACA;EACImW,cAAcA,CAAA,EAAG;IACb,IAAI,IAAI,CAACtR,QAAQ,EAAE;MACf,OAAO,IAAI,CAAC5F,OAAO,GAAG0B,SAAS,GAAG,IAAI,CAACyV,gBAAgB,CAAC,CAAC;IAC7D;EACJ;EACA;AACJ;AACA;AACA;EACItV,SAASA,CAACwH,KAAK,EAAE;IACb;IACA;IACA,IAAI,CAAC,IAAI,CAACzD,QAAQ,EAAE;MAChB;IACJ;IACA,IAAI,CAACxE,eAAe,CAAC,CAAC;IACtB,MAAM4B,KAAK,GAAGqG,KAAK,CAACiE,MAAM,CAAC8J,SAAS;IACpC,MAAMC,MAAM,GAAG,OAAO,IAAI,CAACjX,KAAK,KAAK,QAAQ,GACvC4C,KAAK,GACL;MAAE,GAAG,IAAI,CAAC5C,KAAK;MAAE,CAAC,IAAI,CAACyC,SAAS,GAAGG;IAAM,CAAC;IAChD,IAAI,CAAC+M,MAAM,CAACU,IAAI,CAAC4G,MAAM,CAAC;EAC5B;EACA;AACJ;AACA;AACA;EACIrV,eAAeA,CAACzC,IAAI,EAAE;IAClB,OAAO,OAAOA,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAGA,IAAI,CAAC,IAAI,CAACsD,SAAS,CAAC;EACjE;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIyU,eAAeA,CAAA,EAAG;IAClB,OAAO,CAAC,IAAI,CAACd,QAAQ,IAAI,CAAC,IAAI,CAACxW,OAAO,IAAI+V,QAAQ,IAAI,IAAI,CAACwB,SAAS;EACxE;EACA;AACJ;AACA;AACA;EACInW,eAAeA,CAACT,MAAM,EAAE;IACpB,MAAMoW,SAAS,GAAG,IAAI,CAACb,OAAO,CAACxE,aAAa,CAACqF,SAAS;IACtD,MAAMtF,KAAK,GAAG,IAAI,CAAC+F,sBAAsB,CAAC,CAAC;IAC3C,IAAI,CAACxX,OAAO,GAAG,KAAK;IACpB+W,SAAS,CAAChW,MAAM,CAAC,cAAc,CAAC;IAChC,IAAI,CAAC0Q,KAAK,EAAE;MACR,IAAI,CAACgG,sBAAsB,CAAC,IAAI,CAACrX,KAAK,CAAC;MACvC;IACJ;IACA,IAAI,CAACsX,aAAa,CAACjG,KAAK,CAAC;IACzB,IAAI,CAAC2E,KAAK,CAACuB,aAAa,CAAC,CAAC;IAC1B,IAAIhX,MAAM,EAAE;MACRA,MAAM,CAACkS,cAAc,CAAC,CAAC;IAC3B;EACJ;EACA;AACJ;AACA;EACI3Q,mBAAmBA,CAAA,EAAG;IAClB,OAAQ,CAAC,IAAI,CAACsU,QAAQ,IAAI,CAAC,IAAI,CAACnG,QAAQ,IAAI,IAAI,CAACpK,SAAS,IAAI,CAAC,IAAI,CAACjG,OAAO;EAC/E;EACA;AACJ;AACA;EACIwX,sBAAsBA,CAAA,EAAG;IACrB,MAAM/F,KAAK,GAAG,IAAI,CAACmG,kBAAkB,CAAC,CAAC;IACvC,OAAOnG,KAAK,GAAGA,KAAK,CAAC2F,SAAS,CAAClQ,IAAI,CAAC,CAAC,GAAG,EAAE;EAC9C;EACA;AACJ;AACA;AACA;EACIuQ,sBAAsBA,CAACrX,KAAK,EAAE;IAC1B,MAAMqR,KAAK,GAAG,IAAI,CAACmG,kBAAkB,CAAC,CAAC;IACvC,MAAM5U,KAAK,GAAG,IAAI,CAAChB,eAAe,CAAC5B,KAAK,CAAC;IACzCqR,KAAK,CAAC2F,SAAS,GAAGpU,KAAK;EAC3B;EACA;AACJ;AACA;EACImU,gBAAgBA,CAAA,EAAG;IACf,MAAMJ,SAAS,GAAG,IAAI,CAACb,OAAO,CAACxE,aAAa,CAACqF,SAAS;IACtDA,SAAS,CAACC,GAAG,CAAC,cAAc,CAAC;IAC7B,IAAI,CAAChX,OAAO,GAAG,IAAI;EACvB;EACA;AACJ;AACA;AACA;EACI0X,aAAaA,CAACjG,KAAK,EAAE;IACjB,MAAMoG,MAAM,GAAIvO,GAAG,IAAK;MACpB,OAAO,OAAOA,GAAG,KAAK,QAAQ,GACxBA,GAAG,KAAKmI,KAAK,GACbnI,GAAG,CAAC,IAAI,CAACzG,SAAS,CAAC,KAAK4O,KAAK;IACvC,CAAC;IACD,MAAMqG,KAAK,GAAGA,CAAA,KAAM;MAChB,OAAO,IAAI,CAAC1X,KAAK,CAAC,IAAI,CAAC8F,UAAU,CAAC,KAAK,IAAI,CAAC9F,KAAK,CAAC,IAAI,CAACyC,SAAS,CAAC;IACrE,CAAC;IACD;IACA,IAAIgV,MAAM,CAAC,IAAI,CAACzX,KAAK,CAAC,EAAE;MACpB;IACJ;IACA,MAAMA,KAAK,GAAG,OAAO,IAAI,CAACA,KAAK,KAAK,QAAQ,GACtCqR,KAAK,GACL;MACEjS,KAAK,EAAE,IAAI,CAACA,KAAK;MACjB,CAAC,IAAI,CAAC0G,UAAU,GAAG4R,KAAK,CAAC,CAAC,GACpB,IAAI,CAAC1X,KAAK,CAAC,IAAI,CAAC8F,UAAU,CAAC,GAC3BuL,KAAK;MACX,CAAC,IAAI,CAAC5O,SAAS,GAAG4O;IACtB,CAAC;IACL,IAAI,IAAI,CAACsG,SAAS,CAAC3X,KAAK,CAAC,EAAE;MACvB,IAAI,CAACmW,WAAW,CAAC9F,IAAI,CAAC;QAAEnH,GAAG,EAAElJ,KAAK;QAAEZ,KAAK,EAAE,IAAI,CAACA;MAAM,CAAC,CAAC;IAC5D,CAAC,MACI;MACD,IAAI,CAACiY,sBAAsB,CAAC,IAAI,CAACrX,KAAK,CAAC;IAC3C;EACJ;EACA;AACJ;AACA;EACIwX,kBAAkBA,CAAA,EAAG;IACjB,OAAO,IAAI,CAAC1B,OAAO,CAACxE,aAAa,CAACsG,aAAa,CAAC,mBAAmB,CAAC;EACxE;AACJ;AACA/B,YAAY,CAAC3O,IAAI,YAAA2Q,qBAAAzQ,CAAA;EAAA,YAAAA,CAAA,IAAwFyO,YAAY,EArxBrB5Z,EAAE,CAAA6b,iBAAA,CAqxBqC7b,EAAE,CAAC8b,UAAU,GArxBpD9b,EAAE,CAAA6b,iBAAA,CAqxB+D7b,EAAE,CAAC+b,SAAS,GArxB7E/b,EAAE,CAAA6b,iBAAA,CAqxBwF7b,EAAE,CAACgc,iBAAiB;AAAA,CAA4C;AAC1PpC,YAAY,CAAClD,IAAI,kBAtxB+E1W,EAAE,CAAA2W,iBAAA;EAAApL,IAAA,EAsxBLqO,YAAY;EAAAhD,SAAA;EAAAC,SAAA,WAAAoF,mBAAApZ,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAtxBT7C,EAAE,CAAA+W,WAAA,CAsxBuiB2B,SAAS;IAAA;IAAA,IAAA7V,EAAA;MAAA,IAAAmU,EAAA;MAtxBljBhX,EAAE,CAAAiX,cAAA,CAAAD,EAAA,GAAFhX,EAAE,CAAAkX,WAAA,QAAApU,GAAA,CAAA6G,MAAA,GAAAqN,EAAA,CAAAhV,KAAA;IAAA;EAAA;EAAAka,QAAA;EAAAC,YAAA,WAAAC,0BAAAvZ,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7C,EAAE,CAAAoE,UAAA,qBAAAiY,wCAAA/X,MAAA;QAAA,OAsxBLxB,GAAA,CAAAyX,OAAA,CAAAjW,MAAc,CAAC;MAAA;IAAA;IAAA,IAAAzB,EAAA;MAtxBZ7C,EAAE,CAAAsc,WAAA,WAAAxZ,GAAA,CAAAwX,MAAA;IAAA;EAAA;EAAAvH,MAAA;IAAAhP,KAAA;IAAA6F,SAAA;IAAAL,QAAA;IAAAvF,QAAA;IAAAwC,SAAA;IAAAqD,UAAA;IAAA1G,KAAA;IAAA+X,SAAA;IAAAlH,QAAA;IAAA0H,SAAA;EAAA;EAAAvE,OAAA;IAAA6C,QAAA;IAAAC,QAAA;IAAAvG,MAAA;IAAA2C,SAAA;IAAA6D,WAAA;EAAA;EAAA5C,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAxT,QAAA,WAAAuY,sBAAA1Z,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7C,EAAE,CAAAqD,cAAA,YAsxB64B,CAAC;MAtxBh5BrD,EAAE,CAAAoE,UAAA,mBAAAoY,2CAAAlY,MAAA;QAAA,OAsxBgnBxB,GAAA,CAAAsX,MAAA,CAAA9V,MAAa,CAAC;MAAA,CAAC,CAAC,sBAAAmY,8CAAA;QAAA,OAAoB3Z,GAAA,CAAA+X,cAAA,CAAe,CAAC;MAAA,CAArC,CAAC,uBAAA6B,+CAAA;QAAA,OAAA5Z,GAAA,CAAAmD,WAAA,GAAuE,SAAS;MAAA,CAAjF,CAAC,qBAAA0W,6CAAA;QAAA,OAAA7Z,GAAA,CAAAmD,WAAA,GAAiH,MAAM;MAAA,CAAxH,CAAC;MAtxBloBjG,EAAE,CAAAsD,UAAA,IAAAF,2BAAA,gBAsxBuqC,CAAC,IAAAuB,2BAAA,gBAAD,CAAC;MAtxB1qC3E,EAAE,CAAAuD,YAAA,CAsxB+8D,CAAC;MAtxBl9DvD,EAAE,CAAAsD,UAAA,IAAAwC,kCAAA,uBAsxBilE,CAAC;IAAA;IAAA,IAAAjD,EAAA;MAtxBplE7C,EAAE,CAAAsc,WAAA,aAAAxZ,GAAA,CAAAkR,QAsxB4zB,CAAC;MAtxB/zBhU,EAAE,CAAA6D,UAAA,eAAAf,GAAA,CAAAkB,QAsxBwxB,CAAC;MAtxB3xBhE,EAAE,CAAA0D,WAAA,eAsxBy1B,CAAC,eAAAZ,GAAA,CAAA6C,eAAA,CAAA7C,GAAA,CAAAiB,KAAA,CAAD,CAAC;MAtxB51B/D,EAAE,CAAA4D,SAAA,CAsxB86B,CAAC;MAtxBj7B5D,EAAE,CAAA6D,UAAA,qBAsxB86B,CAAC;MAtxBj7B7D,EAAE,CAAA4D,SAAA,CAsxBysC,CAAC;MAtxB5sC5D,EAAE,CAAA6D,UAAA,sBAsxBysC,CAAC;MAtxB5sC7D,EAAE,CAAA4D,SAAA,CAsxB+jE,CAAC;MAtxBlkE5D,EAAE,CAAA6D,UAAA,SAAAf,GAAA,CAAAmY,eAsxB+jE,CAAC;IAAA;EAAA;EAAAlD,YAAA,GAAoiBmB,mBAAmB,EAAqCR,SAAS,EAAqElX,EAAE,CAACob,QAAQ,EAA0Dpb,EAAE,CAACqb,YAAY,EAAkErb,EAAE,CAACsb,gBAAgB,EAAqGtb,EAAE,CAACub,IAAI;EAAAvE,MAAA;AAAA,EAAoE;AACrqG;EAAA,QAAA/M,SAAA,oBAAAA,SAAA,KAvxBgGzL,EAAE,CAAA0L,iBAAA,CAuxBPkO,YAAY,EAAc,CAAC;IAC1GrO,IAAI,EAAEjL,SAAS;IACfqL,IAAI,EAAE,CAAC;MAAE8M,QAAQ,EAAE,KAAK;MAAEzU,QAAQ,EAAE,q/CAAq/C;MAAEwU,MAAM,EAAE,CAAC,4eAA4e;IAAE,CAAC;EACvhE,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEjN,IAAI,EAAEvL,EAAE,CAAC8b;IAAW,CAAC,EAAE;MAAEvQ,IAAI,EAAEvL,EAAE,CAAC+b;IAAU,CAAC,EAAE;MAAExQ,IAAI,EAAEvL,EAAE,CAACgc;IAAkB,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEjY,KAAK,EAAE,CAAC;MACjJwH,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEwJ,SAAS,EAAE,CAAC;MACZ2B,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEmJ,QAAQ,EAAE,CAAC;MACXgC,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE4D,QAAQ,EAAE,CAAC;MACXuH,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEoG,SAAS,EAAE,CAAC;MACZ+E,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEyJ,UAAU,EAAE,CAAC;MACb0B,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE+C,KAAK,EAAE,CAAC;MACRoI,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE8a,SAAS,EAAE,CAAC;MACZ3P,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE4T,QAAQ,EAAE,CAAC;MACXzI,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEsb,SAAS,EAAE,CAAC;MACZnQ,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE4Z,QAAQ,EAAE,CAAC;MACXzO,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAE0Z,QAAQ,EAAE,CAAC;MACX1O,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEmT,MAAM,EAAE,CAAC;MACTnI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAE8V,SAAS,EAAE,CAAC;MACZ9K,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAE2Z,WAAW,EAAE,CAAC;MACd3O,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAE+Z,MAAM,EAAE,CAAC;MACT/O,IAAI,EAAE9K,WAAW;MACjBkL,IAAI,EAAE,CAAC,cAAc;IACzB,CAAC,CAAC;IAAEhC,MAAM,EAAE,CAAC;MACT4B,IAAI,EAAE/K,SAAS;MACfmL,IAAI,EAAE,CAAC+M,SAAS;IACpB,CAAC,CAAC;IAAE6B,OAAO,EAAE,CAAC;MACVhP,IAAI,EAAE7K,YAAY;MAClBiL,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,QAAQ,CAAC;IAChC,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA,MAAMsN,UAAU,GAAG,CACf7W,OAAO,CAAC,WAAW,EAAE,CACjBC,KAAK,CAAC,IAAI,EAAEC,KAAK,CAAC;EACdyW,OAAO,EAAE;AACb,CAAC,CAAC,CAAC,EACH1W,KAAK,CAAC,KAAK,EAAEC,KAAK,CAAC;EACfyW,OAAO,EAAE;AACb,CAAC,CAAC,CAAC,EACHxW,UAAU,CAAC,QAAQ,EAAE,CACjBC,OAAO,CAAC,aAAa,EAAEC,SAAS,CAAC,CAC7BH,KAAK,CAAC;EAAEyW,OAAO,EAAE,CAAC;EAAEvI,MAAM,EAAE,CAAC;EAAE7F,SAAS,EAAE;AAAuB,CAAC,CAAC,EACnErI,KAAK,CAAC;EAAEyW,OAAO,EAAE,GAAG;EAAEvI,MAAM,EAAE,GAAG;EAAE7F,SAAS,EAAE;AAAwB,CAAC,CAAC,EACxErI,KAAK,CAAC;EAAEyW,OAAO,EAAE,GAAG;EAAEvI,MAAM,EAAE,GAAG;EAAE7F,SAAS,EAAE;AAAsB,CAAC,CAAC,EACtErI,KAAK,CAAC;EAAEyW,OAAO,EAAE,IAAI;EAAEvI,MAAM,EAAE,IAAI;EAAE7F,SAAS,EAAE;AAAsB,CAAC,CAAC,EACxErI,KAAK,CAAC;EAAEyW,OAAO,EAAE,CAAC;EAAEvI,MAAM,EAAE,CAAC;EAAE7F,SAAS,EAAE;AAAsB,CAAC,CAAC,CACrE,CAAC,CAAC,CACN,CAAC,EACFpI,UAAU,CAAC,QAAQ,EAAE,CACjBC,OAAO,CAAC,aAAa,EAAEC,SAAS,CAAC,CAC7BH,KAAK,CAAC;EAAEyW,OAAO,EAAE,CAAC;EAAEpO,SAAS,EAAE,eAAe;EAAE6F,MAAM,EAAE;AAAE,CAAC,CAAC,EAC5DlO,KAAK,CAAC;EAAEyW,OAAO,EAAE,CAAC;EAAEpO,SAAS,EAAE,mBAAmB;EAAE6F,MAAM,EAAE;AAAI,CAAC,CAAC,EAClElO,KAAK,CAAC;EAAEyW,OAAO,EAAE,CAAC;EAAEpO,SAAS,EAAE,kBAAkB;EAAE6F,MAAM,EAAE;AAAI,CAAC,CAAC,CACpE,CAAC,CAAC,CACN,CAAC,CACL,CAAC,CACL;AAED,MAAMwM,gBAAgB,CAAC;EACnBpQ,WAAWA,CAACqQ,QAAQ,EAAE;IAAA,IAAAC,KAAA;IAClB,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB;AACR;AACA;IACQ,IAAI,CAACzM,MAAM,GAAG/B,QAAQ,CAAC6B,QAAQ,CAACE,MAAM;IACtC;AACR;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAGhC,QAAQ,CAAC6B,QAAQ,CAACG,iBAAiB;IAC5D;AACR;AACA;AACA;IACQ,IAAI,CAACC,mBAAmB,GAAGjC,QAAQ,CAAC6B,QAAQ,CAACI,mBAAmB;IAChE;AACR;AACA;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAGlC,QAAQ,CAAC6B,QAAQ,CAACK,iBAAiB;IAC5D;AACR;AACA;AACA;IACQ,IAAI,CAACC,YAAY,GAAGnC,QAAQ,CAAC6B,QAAQ,CAACM,YAAY;IAClD;AACR;AACA;IACQ,IAAI,CAACpK,SAAS,GAAGiI,QAAQ,CAAC6B,QAAQ,CAAC9J,SAAS;IAC5C;AACR;AACA;IACQ,IAAI,CAACqD,UAAU,GAAG4E,QAAQ,CAAC6B,QAAQ,CAACzG,UAAU;IAC9C;AACR;AACA;AACA;IACQ,IAAI,CAACmH,UAAU,GAAGvC,QAAQ,CAAC6B,QAAQ,CAACU,UAAU;IAC9C;AACR;AACA;IACQ,IAAI,CAACT,YAAY,GAAG9B,QAAQ,CAAC6B,QAAQ,CAACC,YAAY;IAClD;AACR;AACA;AACA;IACQ,IAAI,CAACM,QAAQ,GAAGpC,QAAQ,CAAC6B,QAAQ,CAACO,QAAQ;IAC1C;AACR;AACA;IACQ,IAAI,CAACC,aAAa,GAAGrC,QAAQ,CAAC6B,QAAQ,CAACQ,aAAa;IACpD;AACR;AACA;IACQ,IAAI,CAACC,MAAM,GAAGtC,QAAQ,CAAC6B,QAAQ,CAACS,MAAM;IACtC;AACR;AACA;AACA;IACQ,IAAI,CAACe,KAAK,GAAG,EAAE;IACf;AACR;AACA;IACQ,IAAI,CAACrL,QAAQ,GAAG,IAAI,CAACwW,QAAQ,CAAClI,GAAG,CAACoI,iBAAiB,CAAC;IACpD;AACR;AACA;IACQ,IAAI,CAACC,kBAAkB,GAAG,EAAE;IAC5B;AACR;AACA;AACA;IACQ,IAAI,CAACC,IAAI,GAAG,MAAM;MACd,MAAMC,eAAe,GAAG,IAAI,CAAC7W,QAAQ,CAACqL,KAAK,CAACtK,MAAM,KAAK,IAAI,CAACf,QAAQ,CAACmI,QAAQ;MAC7E,MAAMjI,KAAK,GAAG,IAAI,CAAC4W,YAAY,CAAC,CAAC;MACjC,MAAMC,cAAc,GAAG7W,KAAK,CAACkE,IAAI,CAAC,CAAC,CAACrD,MAAM,IAAI,IAAI,CAACmJ,iBAAiB;MACpE,MAAMgC,QAAQ,GAAG,IAAI,CAAC8K,iBAAiB,CAAC,CAAC;MACzC,MAAM3L,KAAK,GAAG,IAAI,CAAC4L,gBAAgB,CAAC/W,KAAK,CAAC;MAC1C,MAAMgX,QAAQ,GAAG7L,KAAK,CAACtK,MAAM,GAAG,CAAC;MACjC,MAAMoW,QAAQ,GAAG,IAAI,CAACC,SAAS,KAAK,KAAK;MACzC,MAAMnN,mBAAmB,GAAG,IAAI,CAACA,mBAAmB,IAAIiN,QAAQ,IAAI,CAAChX,KAAK;MAC1E,MAAMmX,UAAU,GAAG,IAAI,CAACrX,QAAQ,CAACgD,OAAO;MACxC,MAAMsU,UAAU,GAAGH,QAAQ,KAAMD,QAAQ,IAAIH,cAAc,IAAK9M,mBAAmB,CAAC;MACpF,MAAMsN,UAAU,GAAG,IAAI,CAACH,SAAS,IAAI,CAACF,QAAQ;MAC9C,IAAI,IAAI,CAACM,sBAAsB,IAAIT,cAAc,EAAE;QAC/C,OAAO,IAAI,CAACU,sBAAsB,CAACvX,KAAK,CAAC;MAC7C;MACA,IAAK,CAAC,IAAI,CAAC+J,mBAAmB,IAAI,CAAC/J,KAAK,IACpC2W,eAAe,IACfQ,UAAU,EAAE;QACZ,OAAO,IAAI,CAACxN,QAAQ,CAAC6N,IAAI,CAAC,CAAC;MAC/B;MACA,IAAI,CAACC,QAAQ,CAACtM,KAAK,CAAC;MACpB,IAAIiM,UAAU,EAAE;QACZ,IAAI,CAACzN,QAAQ,CAAC+M,IAAI,CAAC1K,QAAQ,CAAC;MAChC,CAAC,MACI,IAAIqL,UAAU,EAAE;QACjB,IAAI,CAACG,IAAI,CAAC,CAAC;MACf;IACJ,CAAC;IACD;AACR;AACA;AACA;IACQ,IAAI,CAACE,aAAa;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOrb,IAAI,EAAK;QACjC,MAAM+J,GAAG,GAAGiQ,KAAI,CAACsB,cAAc,CAACtb,IAAI,CAAC;QACrC,MAAMga,KAAI,CAACzW,QAAQ,CAACuH,iBAAiB,CAAC,IAAI,EAAEf,GAAG,CAAC,CAACwR,KAAK,CAAC,MAAM,CAAE,CAAC,CAAC;MACrE,CAAC;MAAA,iBAAAC,EAAA;QAAA,OAAAJ,IAAA,CAAAK,KAAA,OAAAC,SAAA;MAAA;IAAA;IACD;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAG,MAAM;MACpB,IAAI,CAAC/M,KAAK,GAAG,EAAE;IACnB,CAAC;IACD;AACR;AACA;AACA;IACQ,IAAI,CAACoM,sBAAsB,GAAIhK,IAAI,IAAK;MACpC,IAAI,CAAC4K,eAAe,CAAC,IAAI,CAAC;MAC1B,MAAMC,WAAW,GAAIxR,IAAI,IAAK;QAC1B;QACA,IAAI,CAACuR,eAAe,CAAC,KAAK;QACtB;QAAA,CACCE,aAAa,CAACzR,IAAI,CAAC;QACxB,IAAI,CAAC6Q,QAAQ,CAAC,IAAI,CAACV,gBAAgB,CAACxJ,IAAI,CAAC,CAAC;QAC1C,IAAI,IAAI,CAACpC,KAAK,CAACtK,MAAM,EAAE;UACnB,IAAI,CAAC8I,QAAQ,CAAC+M,IAAI,CAAC,IAAI,CAACI,iBAAiB,CAAC,CAAC,CAAC;QAChD,CAAC,MACI;UACD,IAAI,CAACnN,QAAQ,CAAC6N,IAAI,CAAC,CAAC;QACxB;MACJ,CAAC;MACD,IAAI,CAACF,sBAAsB,CAAC/J,IAAI,CAAC,CAC5B+K,IAAI,CAACjd,KAAK,CAAC,CAAC,CAAC,CACbkd,SAAS,CAACH,WAAW,EAAE,MAAM,IAAI,CAACD,eAAe,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC;EACL;EACA;AACJ;AACA;AACA;EACI,IAAIK,iBAAiBA,CAACrN,KAAK,EAAE;IACzB,IAAI,CAACsL,kBAAkB,GAAGtL,KAAK;EACnC;EACA;AACJ;AACA;AACA;EACI,IAAIqN,iBAAiBA,CAAA,EAAG;IACpB,MAAMrN,KAAK,GAAG,IAAI,CAACsL,kBAAkB;IACrC,IAAI,CAACtL,KAAK,EAAE;MACR,OAAO,EAAE;IACb;IACA,OAAOA,KAAK,CAAC/P,GAAG,CAAEmB,IAAI,IAAK;MACvB,OAAO,OAAOA,IAAI,KAAK,QAAQ,GACzB;QACE,CAAC,IAAI,CAACsD,SAAS,GAAGtD,IAAI;QACtB,CAAC,IAAI,CAAC2G,UAAU,GAAG3G;MACvB,CAAC,GACCA,IAAI;IACd,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIkc,eAAeA,CAAA,EAAG;IACd,IAAI,CAACC,aAAa,CAAC,CAAC,CAACH,SAAS,CAAEhc,IAAI,IAAK;MACrC,IAAI,CAACmb,aAAa,CAACnb,IAAI,CAAC;IAC5B,CAAC,CAAC;IACF;IACA,IAAI,CAACoc,MAAM,CAAC,CAAC,CAACJ,SAAS,CAAC,IAAI,CAACL,UAAU,CAAC;IACxC,MAAMU,aAAa,GAAG,GAAG;IACzB,MAAMC,SAAS,GAAG,IAAI,CAAC3O,QAAQ;IAC/B,IAAI,CAACpK,QAAQ,CAACgZ,YAAY,CACrBC,YAAY,CAAC,CAAC,CACdT,IAAI,CAACvc,oBAAoB,CAAC,CAAC,EAAER,YAAY,CAACqd,aAAa,CAAC,EAAE1d,MAAM,CAAE8E,KAAK,IAAK;MAC7E,IAAI6Y,SAAS,KAAK,KAAK,EAAE;QACrB,OAAO7Y,KAAK,CAACa,MAAM,GAAG,CAAC;MAC3B;MACA,OAAO,IAAI;IACf,CAAC,CAAC,CAAC,CACE0X,SAAS,CAAC,IAAI,CAAC7B,IAAI,CAAC;EAC7B;EACA;AACJ;AACA;EACIsC,cAAcA,CAAA,EAAG;IACb,MAAMhN,QAAQ,GAAG,IAAI,CAAClM,QAAQ,CAACC,SAAS,CAACsP,kBAAkB,CAAC,CAAC;IAC7D,IAAI,CAAC1F,QAAQ,CAACsP,IAAI,CAACD,cAAc,CAAChN,QAAQ,EAAE,IAAI,CAAC7B,aAAa,CAAC;EACnE;EACA;AACJ;AACA;EACI,IAAI+M,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACvN,QAAQ,CAACsP,IAAI,CAACC,aAAa,CAACC,SAAS,CAACjC,SAAS;EAC/D;EACA;AACJ;AACA;EACIyB,MAAMA,CAAA,EAAG;IACL,OAAO,IAAI,CAAChP,QAAQ,CAACgP,MAAM;EAC/B;EACA;AACJ;AACA;EACID,aAAaA,CAAA,EAAG;IACZ,OAAO,IAAI,CAAC/O,QAAQ,CAAC+O,aAAa;EACtC;EACA;AACJ;AACA;EACI,IAAIU,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAACzP,QAAQ,CAACsP,IAAI,CAACC,aAAa,CAACA,aAAa,CAACE,YAAY;EACtE;EACA;AACJ;AACA;EACI,IAAI1d,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACiO,QAAQ,CAACsP,IAAI,CAACC,aAAa;EAC3C;EACA;AACJ;AACA;EACI1B,IAAIA,CAAA,EAAG;IACH,IAAI,CAACU,UAAU,CAAC,CAAC;IACjB,IAAI,CAACvO,QAAQ,CAAC6N,IAAI,CAAC,CAAC;EACxB;EACA;AACJ;AACA;EACI6B,cAAcA,CAAA,EAAG;IACb,IAAI,CAAC,IAAI,CAACnC,SAAS,IAAI,CAAC,IAAI,CAAC/M,aAAa,EAAE;MACxC;IACJ;IACA,IAAI,CAAC6O,cAAc,CAAC,CAAC;EACzB;EACA;AACJ;AACA;EACIM,YAAYA,CAAA,EAAG;IACX,IAAI,CAAC3P,QAAQ,CAAC6N,IAAI,CAAC,CAAC;EACxB;EACA;AACJ;AACA;EACIZ,YAAYA,CAAA,EAAG;IACX,MAAM2C,SAAS,GAAG,IAAI,CAACzZ,QAAQ,CAACyZ,SAAS;IACzC,OAAOA,SAAS,GAAGA,SAAS,CAAC/O,QAAQ,CAAC,CAAC,CAACtG,IAAI,CAAC,CAAC,GAAG,EAAE;EACvD;EACA;AACJ;AACA;EACI4S,iBAAiBA,CAAA,EAAG;IAChB,OAAO,IAAI,CAAChX,QAAQ,CAACC,SAAS,CAACsP,kBAAkB,CAAC,CAAC;EACvD;EACA;AACJ;AACA;AACA;EACIwI,cAAcA,CAACtb,IAAI,EAAE;IACjB,MAAMid,OAAO,GAAG,OAAOjd,IAAI,CAACyD,KAAK,KAAK,QAAQ,GAAGzD,IAAI,CAACyD,KAAK,GAAGzD,IAAI,CAACyD,KAAK,CAAC,IAAI,CAACH,SAAS,CAAC;IACxF,MAAMG,KAAK,GAAG,OAAOzD,IAAI,CAACyD,KAAK,KAAK,QAAQ,GAAGzD,IAAI,CAACyD,KAAK,GAAGzD,IAAI,CAACyD,KAAK,CAAC,IAAI,CAACkD,UAAU,CAAC;IACvF,OAAO;MACH,GAAG3G,IAAI,CAACyD,KAAK;MACb,CAAC,IAAI,CAACF,QAAQ,CAACD,SAAS,GAAG2Z,OAAO;MAClC,CAAC,IAAI,CAAC1Z,QAAQ,CAACoD,UAAU,GAAGlD;IAChC,CAAC;EACL;EACA;AACJ;AACA;AACA;EACI+W,gBAAgBA,CAAC/W,KAAK,EAAE;IACpB,IAAI,CAACA,KAAK,IAAI,CAAC,IAAI,CAAC+J,mBAAmB,EAAE;MACrC,OAAO,EAAE;IACb;IACA,MAAM0P,YAAY,GAAG,IAAI,CAAC3Z,QAAQ,CAACoJ,UAAU;IAC7C,OAAO,IAAI,CAACsP,iBAAiB,CAACtd,MAAM,CAAEqB,IAAI,IAAK;MAC3C,MAAMmd,QAAQ,GAAGD,YAAY,GACvB,KAAK,GACL,IAAI,CAAC3Z,QAAQ,CAAC6Z,IAAI,CAACC,IAAI,CAACtT,GAAG,IAAI;QAC7B,MAAMpD,UAAU,GAAG,IAAI,CAACpD,QAAQ,CAACoD,UAAU;QAC3C,MAAM9F,KAAK,GAAG,OAAOkJ,GAAG,CAAClJ,KAAK,KAAK,QAAQ,GAAGkJ,GAAG,CAAClJ,KAAK,GAAGkJ,GAAG,CAAClJ,KAAK,CAAC8F,UAAU,CAAC;QAC/E,OAAO9F,KAAK,KAAKb,IAAI,CAAC,IAAI,CAAC2G,UAAU,CAAC;MAC1C,CAAC,CAAC;MACN,OAAO,IAAI,CAACmH,UAAU,CAACrK,KAAK,EAAEzD,IAAI,CAAC,IAAImd,QAAQ,KAAK,KAAK;IAC7D,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIjC,QAAQA,CAACtM,KAAK,EAAE;IACZ,IAAI,CAACA,KAAK,GAAGA,KAAK,CAAC0O,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC5P,YAAY,IAAIkB,KAAK,CAACtK,MAAM,CAAC;EAClE;EACA;AACJ;AACA;AACA;EACIwX,aAAaA,CAACzR,IAAI,EAAE;IAChB,IAAI,CAAC4R,iBAAiB,GAAG5R,IAAI,CAACxL,GAAG,CAACmB,IAAI,IAAI;MACtC,OAAO,OAAOA,IAAI,KAAK,QAAQ,GACzB;QACE,CAAC,IAAI,CAACsD,SAAS,GAAGtD,IAAI;QACtB,CAAC,IAAI,CAAC2G,UAAU,GAAG3G;MACvB,CAAC,GACCA,IAAI;IACd,CAAC,CAAC;IACF,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;EACI4b,eAAeA,CAACzc,KAAK,EAAE;IACnB,IAAI,CAACoE,QAAQ,CAACga,SAAS,GAAGpe,KAAK;IAC/B,OAAO,IAAI;EACf;AACJ;AACA2a,gBAAgB,CAAC/R,IAAI,YAAAyV,yBAAAvV,CAAA;EAAA,YAAAA,CAAA,IAAwF6R,gBAAgB,EAjqC7Bhd,EAAE,CAAA6b,iBAAA,CAiqC6C7b,EAAE,CAAC2gB,QAAQ;AAAA,CAA4C;AACtM3D,gBAAgB,CAACtG,IAAI,kBAlqC2E1W,EAAE,CAAA2W,iBAAA;EAAApL,IAAA,EAkqCDyR,gBAAgB;EAAApG,SAAA;EAAAgK,cAAA,WAAAC,gCAAAhe,EAAA,EAAAC,GAAA,EAAAge,QAAA;IAAA,IAAAje,EAAA;MAlqCjB7C,EAAE,CAAA+gB,cAAA,CAAAD,QAAA,EAkqCsoBngB,WAAW;IAAA;IAAA,IAAAkC,EAAA;MAAA,IAAAmU,EAAA;MAlqCnpBhX,EAAE,CAAAiX,cAAA,CAAAD,EAAA,GAAFhX,EAAE,CAAAkX,WAAA,QAAApU,GAAA,CAAAuE,SAAA,GAAA2P,EAAA;IAAA;EAAA;EAAAH,SAAA,WAAAmK,uBAAAne,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7C,EAAE,CAAA+W,WAAA,CAkqCwtBpV,WAAW;IAAA;IAAA,IAAAkB,EAAA;MAAA,IAAAmU,EAAA;MAlqCruBhX,EAAE,CAAAiX,cAAA,CAAAD,EAAA,GAAFhX,EAAE,CAAAkX,WAAA,QAAApU,GAAA,CAAAwN,QAAA,GAAA0G,EAAA,CAAAhV,KAAA;IAAA;EAAA;EAAAma,YAAA,WAAA8E,8BAAApe,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7C,EAAE,CAAAoE,UAAA,oBAAA8c,2CAAA;QAAA,OAkqCDpe,GAAA,CAAAkd,cAAA,CAAe,CAAC;MAAA,UAlqCjBhgB,EAAE,CAAAmhB,eAAA,mBAAAC,yCAAA;QAAA,OAkqCDte,GAAA,CAAAmd,YAAA,CAAa,CAAC;MAAA,UAlqCfjgB,EAAE,CAAAmhB,eAAA;IAAA;EAAA;EAAApO,MAAA;IAAAvC,MAAA;IAAAC,iBAAA;IAAAC,mBAAA;IAAAuN,sBAAA;IAAAtN,iBAAA;IAAAC,YAAA;IAAApK,SAAA;IAAAqD,UAAA;IAAAmH,UAAA;IAAAT,YAAA;IAAAM,QAAA;IAAAC,aAAA;IAAAC,MAAA;IAAAoO,iBAAA;EAAA;EAAA7H,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAxT,QAAA,WAAAqd,0BAAAxe,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7C,EAAE,CAAAqD,cAAA,qBAkqCm0B,CAAC,0BAAD,CAAC;MAlqCt0BrD,EAAE,CAAAsD,UAAA,IAAAiE,yCAAA,0BAkqCsnD,CAAC;MAlqCznDvH,EAAE,CAAAuD,YAAA,CAkqCgpD,CAAC,CAAD,CAAC;IAAA;IAAA,IAAAV,EAAA;MAlqCnpD7C,EAAE,CAAA6D,UAAA,kBAAAf,GAAA,CAAAgO,aAkqCk0B,CAAC;MAlqCr0B9Q,EAAE,CAAA4D,SAAA,CAkqCq4B,CAAC;MAlqCx4B5D,EAAE,CAAA6D,UAAA,sBAAAf,GAAA,CAAA2N,iBAkqCq4B,CAAC,WAAA3N,GAAA,CAAAiO,MAAD,CAAC,iBAAAjO,GAAA,CAAAyN,YAAD,CAAC,WAAAzN,GAAA,CAAA0N,MAAD,CAAC;MAlqCx4BxQ,EAAE,CAAA4D,SAAA,CAkqC2kC,CAAC;MAlqC9kC5D,EAAE,CAAA6D,UAAA,YAAAf,GAAA,CAAAgP,KAkqC2kC,CAAC;IAAA;EAAA;EAAAiG,YAAA,GAAgnBrW,IAAI,CAACC,WAAW,EAAmID,IAAI,CAAC4f,eAAe,EAAuH5f,IAAI,CAAC6f,WAAW,EAAwF/f,EAAE,CAACggB,OAAO,EAAgGhgB,EAAE,CAACob,QAAQ,EAA0Dpb,EAAE,CAACqb,YAAY,EAAkErb,EAAE,CAACigB,eAAe,EAA2CjgB,EAAE,CAACsb,gBAAgB,EAAoHpS,aAAa;EAAAgX,aAAA;AAAA,EAAK;AAC1nF;EAAA,QAAAjW,SAAA,oBAAAA,SAAA,KAnqCgGzL,EAAE,CAAA0L,iBAAA,CAmqCPsR,gBAAgB,EAAc,CAAC;IAC9GzR,IAAI,EAAEjL,SAAS;IACfqL,IAAI,EAAE,CAAC;MAAE8M,QAAQ,EAAE,oBAAoB;MAAEzU,QAAQ,EAAE;IAAm5B,CAAC;EAC38B,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEuH,IAAI,EAAEvL,EAAE,CAAC2gB;IAAS,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAErQ,QAAQ,EAAE,CAAC;MAC1F/E,IAAI,EAAE/K,SAAS;MACfmL,IAAI,EAAE,CAAChK,WAAW;IACtB,CAAC,CAAC;IAAE0F,SAAS,EAAE,CAAC;MACZkE,IAAI,EAAE3K,eAAe;MACrB+K,IAAI,EAAE,CAAChL,WAAW;IACtB,CAAC,CAAC;IAAE6P,MAAM,EAAE,CAAC;MACTjF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEqQ,iBAAiB,EAAE,CAAC;MACpBlF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEsQ,mBAAmB,EAAE,CAAC;MACtBnF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE6d,sBAAsB,EAAE,CAAC;MACzB1S,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEuQ,iBAAiB,EAAE,CAAC;MACpBpF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEwQ,YAAY,EAAE,CAAC;MACfrF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEoG,SAAS,EAAE,CAAC;MACZ+E,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEyJ,UAAU,EAAE,CAAC;MACb0B,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE4Q,UAAU,EAAE,CAAC;MACbzF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEmQ,YAAY,EAAE,CAAC;MACfhF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEyQ,QAAQ,EAAE,CAAC;MACXtF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE0Q,aAAa,EAAE,CAAC;MAChBvF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE2Q,MAAM,EAAE,CAAC;MACTxF,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE+e,iBAAiB,EAAE,CAAC;MACpB5T,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE4f,cAAc,EAAE,CAAC;MACjBzU,IAAI,EAAE7K,YAAY;MAClBiL,IAAI,EAAE,CAAC,eAAe;IAC1B,CAAC,CAAC;IAAEsU,YAAY,EAAE,CAAC;MACf1U,IAAI,EAAE7K,YAAY;MAClBiL,IAAI,EAAE,CAAC,aAAa;IACxB,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA,MAAMgW,eAAe,GAAG;EACpBC,OAAO,EAAExgB,iBAAiB;EAC1BygB,WAAW,EAAEhhB,UAAU,CAAC,MAAMsc,iBAAiB,CAAC;EAChD2E,KAAK,EAAE;AACX,CAAC;AACD,MAAM3E,iBAAiB,SAASvL,gBAAgB,CAAC;EAC7ChF,WAAWA,CAACkN,QAAQ,EAAE1Q,YAAY,EAAE;IAAA,IAAA2Y,MAAA;IAChC,KAAK,CAAC,CAAC;IAAAA,MAAA,GAAAC,IAAA;IACP,IAAI,CAAClI,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAAC1Q,YAAY,GAAGA,YAAY;IAChC;AACR;AACA;AACA;IACQ,IAAI,CAACsF,aAAa,GAAGD,QAAQ,CAAChI,QAAQ,CAACiI,aAAa;IACpD;AACR;AACA;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAGF,QAAQ,CAAChI,QAAQ,CAACkI,iBAAiB;IAC5D;AACR;AACA;AACA;IACQ,IAAI,CAACG,WAAW,GAAGL,QAAQ,CAAChI,QAAQ,CAACqI,WAAW;IAChD;AACR;AACA;AACA;IACQ,IAAI,CAACC,oBAAoB,GAAGN,QAAQ,CAAChI,QAAQ,CAACsI,oBAAoB;IAClE;AACR;AACA;AACA;IACQ,IAAI,CAACH,QAAQ,GAAGH,QAAQ,CAAChI,QAAQ,CAACmI,QAAQ;IAC1C;AACR;AACA;AACA;IACQ,IAAI,CAACI,UAAU,GAAGP,QAAQ,CAAChI,QAAQ,CAACuI,UAAU;IAC9C;AACR;AACA;AACA;IACQ,IAAI,CAACC,eAAe,GAAGR,QAAQ,CAAChI,QAAQ,CAACwI,eAAe;IACxD;AACR;AACA;AACA;IACQ,IAAI,CAACC,oBAAoB,GAAGT,QAAQ,CAAChI,QAAQ,CAACyI,oBAAoB;IAClE;AACR;AACA;IACQ,IAAI,CAACC,aAAa,GAAGV,QAAQ,CAAChI,QAAQ,CAAC0I,aAAa;IACpD;AACR;AACA;IACQ,IAAI,CAAC/E,KAAK,GAAGqE,QAAQ,CAAChI,QAAQ,CAAC2D,KAAK;IACpC;AACR;AACA;IACQ,IAAI,CAACgF,oBAAoB,GAAGX,QAAQ,CAAChI,QAAQ,CAAC2I,oBAAoB;IAClE;AACR;AACA;AACA;IACQ,IAAI,CAACC,OAAO,GAAGZ,QAAQ,CAAChI,QAAQ,CAAC4I,OAAO;IACxC;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAGb,QAAQ,CAAChI,QAAQ,CAAC6I,UAAU;IAC9C;AACR;AACA;AACA;IACQ,IAAI,CAACC,WAAW,GAAGd,QAAQ,CAAChI,QAAQ,CAAC8I,WAAW;IAChD;AACR;AACA;AACA;IACQ,IAAI,CAACC,QAAQ,GAAGf,QAAQ,CAAChI,QAAQ,CAAC+I,QAAQ;IAC1C;AACR;AACA;IACQ,IAAI,CAACC,SAAS,GAAGhB,QAAQ,CAAChI,QAAQ,CAACgJ,SAAS;IAC5C;AACR;AACA;IACQ,IAAI,CAACC,UAAU,GAAGjB,QAAQ,CAAChI,QAAQ,CAACiJ,UAAU;IAC9C;AACR;AACA;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAGlB,QAAQ,CAAChI,QAAQ,CAACkJ,iBAAiB;IAC5D;AACR;AACA;IACQ,IAAI,CAACC,WAAW,GAAGnB,QAAQ,CAAChI,QAAQ,CAACmJ,WAAW;IAChD;AACR;AACA;IACQ,IAAI,CAAChG,SAAS,GAAG6E,QAAQ,CAAChI,QAAQ,CAACmD,SAAS;IAC5C;AACR;AACA;IACQ,IAAI,CAACL,QAAQ,GAAGkF,QAAQ,CAAChI,QAAQ,CAAC8C,QAAQ;IAC1C;AACR;AACA;IACQ,IAAI,CAACsG,UAAU,GAAGpB,QAAQ,CAAChI,QAAQ,CAACoJ,UAAU;IAC9C;AACR;AACA;AACA;IACQ,IAAI,CAACC,cAAc,GAAGrB,QAAQ,CAAChI,QAAQ,CAACqJ,cAAc;IACtD;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAGtB,QAAQ,CAAChI,QAAQ,CAACsJ,QAAQ;IAC1C;AACR;AACA;IACQ,IAAI,CAACpG,MAAM,GAAG8E,QAAQ,CAAChI,QAAQ,CAACkD,MAAM;IACtC;AACR;AACA;AACA;IACQ,IAAI,CAACoK,QAAQ,GAAGtF,QAAQ,CAAChI,QAAQ,CAACuJ,QAAQ;IAC1C;AACR;AACA;IACQ,IAAI,CAACvG,OAAO,GAAGgF,QAAQ,CAAChI,QAAQ,CAACgD,OAAO;IACxC;AACR;AACA;IACQ,IAAI,CAACjB,QAAQ,GAAGiG,QAAQ,CAAChI,QAAQ,CAAC+B,QAAQ;IAC1C;AACR;AACA;IACQ,IAAI,CAACyH,UAAU,GAAGxB,QAAQ,CAAChI,QAAQ,CAACwJ,UAAU;IAC9C;AACR;AACA;IACQ,IAAI,CAACC,QAAQ,GAAGzB,QAAQ,CAAChI,QAAQ,CAACyJ,QAAQ;IAC1C;AACR;AACA;IACQ,IAAI,CAACC,iBAAiB,GAAG1B,QAAQ,CAAChI,QAAQ,CAAC0J,iBAAiB;IAC5D;AACR;AACA;AACA;IACQ,IAAI,CAAC8R,KAAK,GAAG,IAAI5hB,YAAY,CAAC,CAAC;IAC/B;AACR;AACA;AACA;IACQ,IAAI,CAAC4Z,QAAQ,GAAG,IAAI5Z,YAAY,CAAC,CAAC;IAClC;AACR;AACA;AACA;IACQ,IAAI,CAAC2Z,QAAQ,GAAG,IAAI3Z,YAAY,CAAC,CAAC;IAClC;AACR;AACA;AACA;IACQ,IAAI,CAACsT,OAAO,GAAG,IAAItT,YAAY,CAAC,CAAC;IACjC;AACR;AACA;AACA;IACQ,IAAI,CAACqT,MAAM,GAAG,IAAIrT,YAAY,CAAC,CAAC;IAChC;AACR;AACA;AACA;IACQ,IAAI,CAACof,YAAY,GAAG,IAAIpf,YAAY,CAAC,CAAC;IACtC;AACR;AACA;AACA;IACQ,IAAI,CAAC6hB,OAAO,GAAG,IAAI7hB,YAAY,CAAC,CAAC;IACjC;AACR;AACA;AACA;IACQ,IAAI,CAAC8hB,iBAAiB,GAAG,IAAI9hB,YAAY,CAAC,CAAC;IAC3C;AACR;AACA;AACA;IACQ,IAAI,CAAC6Z,WAAW,GAAG,IAAI7Z,YAAY,CAAC,CAAC;IACrC;AACR;AACA;IACQ,IAAI,CAACogB,SAAS,GAAG,KAAK;IACtB;AACR;AACA;AACA;IACQ,IAAI,CAACrN,SAAS,GAAG;MACb,CAACtH,OAAO,GAAG,EAAE;MACb,CAACC,KAAK,GAAG;IACb,CAAC;IACD;AACR;AACA;AACA;IACQ,IAAI,CAAC+H,eAAe,GAAG,IAAIzT,YAAY,CAAC,CAAC;IACzC;AACR;AACA;AACA;IACQ,IAAI,CAAC+hB,cAAc,GAAG,EAAE;IACxB,IAAI,CAAC/X,MAAM,GAAG,EAAE;IAChB;AACR;AACA;AACA;IACQ,IAAI,CAACgY,SAAS,GAAG,CAACpV,GAAG,EAAE9J,KAAK,GAAG,IAAI,CAAC2O,KAAK,CAACtK,MAAM,KAAK;MACjD,MAAMsK,KAAK,GAAG,IAAI,CAACA,KAAK;MACxB,MAAM/N,KAAK,GAAG,IAAI,CAAC+L,cAAc,GAAG7C,GAAG,CAAC,IAAI,CAACpD,UAAU,CAAC,GAAGoD,GAAG;MAC9D,IAAI,CAAC6E,KAAK,GAAG,CACT,GAAGA,KAAK,CAAC0O,KAAK,CAAC,CAAC,EAAErd,KAAK,CAAC,EACxBY,KAAK,EACL,GAAG+N,KAAK,CAAC0O,KAAK,CAACrd,KAAK,EAAE2O,KAAK,CAACtK,MAAM,CAAC,CACtC;IACL,CAAC;IACD;AACR;AACA;AACA;IACQ,IAAI,CAAC8a,SAAS,GAAIve,KAAK,IAAK;MACxB,MAAM8G,IAAI,GAAGA,CAAC0X,GAAG,EAAEpU,GAAG,KAAK;QACvB,OAAO,OAAOoU,GAAG,KAAK,QAAQ,GAAGA,GAAG,CAAC1X,IAAI,CAAC,CAAC,GAAG0X,GAAG,CAACpU,GAAG,CAAC;MAC1D,CAAC;MACD,OAAO;QACH,IAAG,OAAOpK,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,CAAC,CAAC;QACzC,CAAC,IAAI,CAACyC,SAAS,GAAG,IAAI,CAACuJ,QAAQ,GAAGlF,IAAI,CAAC9G,KAAK,EAAE,IAAI,CAACyC,SAAS,CAAC,GAAGzC,KAAK;QACrE,CAAC,IAAI,CAAC8F,UAAU,GAAG,IAAI,CAACkG,QAAQ,GAAGlF,IAAI,CAAC9G,KAAK,EAAE,IAAI,CAAC8F,UAAU,CAAC,GAAG9F;MACtE,CAAC;IACL,CAAC;IACD;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACyF,UAAU,GAAG,CAACyD,GAAG,EAAEuV,gBAAgB,GAAG,KAAK,KAAK;MACjD,MAAMzC,YAAY,GAAG,IAAI,CAACzP,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACyP,YAAY,GAAG1a,SAAS;MAC3E,MAAMsB,KAAK,GAAG,IAAI,CAAC8L,cAAc,CAACxF,GAAG,CAAC,CAACpC,IAAI,CAAC,CAAC;MAC7C,IAAIkV,YAAY,IAAI,CAACyC,gBAAgB,IAAI,CAAC7b,KAAK,EAAE;QAC7C,OAAO,KAAK;MAChB;MACA,MAAM8b,IAAI,GAAG,IAAI,CAACC,QAAQ,CAACzV,GAAG,EAAEuV,gBAAgB,CAAC;MACjD;MACA,IAAI,CAAC,IAAI,CAAC3S,UAAU,IAAI4S,IAAI,IAAI,IAAI,CAAC7S,WAAW,EAAE;QAC9C,MAAM7L,KAAK,GAAG,IAAI,CAACuc,IAAI,CAACqC,IAAI,CAACzf,IAAI,IAAI;UACjC,OAAO,IAAI,CAACoP,YAAY,CAACpP,IAAI,CAACa,KAAK,CAAC,KAAK,IAAI,CAACuO,YAAY,CAACmQ,IAAI,CAAC;QACpE,CAAC,CAAC;QACF,IAAI1e,KAAK,EAAE;UACPA,KAAK,CAAC0W,KAAK,CAAC,CAAC;QACjB;MACJ;MACA,MAAMmI,kBAAkB,GAAGJ,gBAAgB,IAAI,IAAI,CAACtT,oBAAoB;MACxE,MAAM2T,UAAU,GAAG;MACf;MACA,CAACJ,IAAI,IAAI,IAAI,CAAC5S,UAAU;MACxB;MACA,CAAC,IAAI,CAACyN,eAAe;MACrB;MACEsF,kBAAkB,IAAK,CAAC,IAAI,CAAC1T,oBAAoB,CACtD;MACD,OAAO2T,UAAU,CAAChhB,MAAM,CAACihB,OAAO,CAAC,CAACtb,MAAM,KAAKqb,UAAU,CAACrb,MAAM;IAClE,CAAC;IACD;AACR;AACA;AACA;IACQ,IAAI,CAACub,eAAe;MAAA,IAAAC,KAAA,GAAAzE,iBAAA,CAAG,WAAOhR,IAAI,EAAK;QACnC,MAAM0V,OAAO,GAAGA,CAAA,KAAM;UAClB,MAAMC,IAAI,GAAGJ,OAAO,CAACvJ,MAAM,CAAC4J,aAAa,CAAC;UAC1C,MAAMA,aAAa,GAAGD,IAAI,GAAI3J,MAAM,CAAC4J,aAAa,GAAI5V,IAAI,CAAC4V,aAAa;UACxE,MAAM5X,IAAI,GAAG2X,IAAI,GAAG,MAAM,GAAG,YAAY;UACzC,OAAOC,aAAa,KAAK,IAAI,GAAG,EAAE,GAAGA,aAAa,CAAC3V,OAAO,CAACjC,IAAI,CAAC,IAAI,EAAE;QAC1E,CAAC;QACD,MAAM2I,IAAI,GAAG+O,OAAO,CAAC,CAAC;QACtB,MAAMG,QAAQ,GAAGlP,IAAI,CAChBmP,KAAK,CAACtB,MAAI,CAACpS,iBAAiB,CAAC,CAC7B5N,GAAG,CAACmB,IAAI,IAAI;UACb,MAAM+J,GAAG,GAAG8U,MAAI,CAACO,SAAS,CAACpf,IAAI,CAAC;UAChC6e,MAAI,CAACuB,aAAa,CAACrW,GAAG,CAAC8U,MAAI,CAACvb,SAAS,CAAC,CAAC;UACvC,OAAOub,MAAI,CAAC/T,iBAAiB,CAAC,KAAK,EAAEf,GAAG,CAAC;QAC7C,CAAC,CAAC;QACF,MAAMsW,UAAU,GAAGA,CAAA,KAAM3I,UAAU,CAAC,MAAMmH,MAAI,CAACuB,aAAa,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QACrEE,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC,CAACM,IAAI,CAAC,MAAM;UAC7B3B,MAAI,CAACG,OAAO,CAAC9N,IAAI,CAACF,IAAI,CAAC;UACvBqP,UAAU,CAAC,CAAC;QAChB,CAAC,CAAC,CACG9E,KAAK,CAAC8E,UAAU,CAAC;MAC1B,CAAC;MAAA,iBAAAI,GAAA;QAAA,OAAAX,KAAA,CAAArE,KAAA,OAAAC,SAAA;MAAA;IAAA;EACL;EACA;AACJ;AACA;EACI,IAAI3K,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACmO,cAAc;EAC9B;EACA;AACJ;AACA;AACA;EACI,IAAInO,SAASA,CAACC,IAAI,EAAE;IAChB,IAAI,CAACkO,cAAc,GAAGlO,IAAI;IAC1B,IAAI,CAACJ,eAAe,CAACM,IAAI,CAACF,IAAI,CAAC;EACnC;EACA;AACJ;AACA;AACA;EACI,IAAI0P,YAAYA,CAAA,EAAG;IACf,OAAO,IAAI,CAAC7P,QAAQ,KAAK,EAAE,GAAG,IAAI,GAAG,EAAE;EAC3C;EACA;AACJ;AACA;EACIqL,eAAeA,CAAA,EAAG;IACd;IACA,IAAI,CAACyE,sBAAsB,CAAC,CAAC;IAC7B,IAAI,CAACC,0BAA0B,CAAC,CAAC;IACjC,IAAI,CAACC,0BAA0B,CAAC,CAAC;IACjC,IAAI,IAAI,CAACtE,YAAY,CAACuE,SAAS,CAACxc,MAAM,EAAE;MACpC,IAAI,CAACyc,yBAAyB,CAAC,CAAC;IACpC;IACA;IACA,IAAI,IAAI,CAAC1U,WAAW,IAAI,IAAI,CAACE,SAAS,EAAE;MACpC,IAAI,CAACyU,qBAAqB,CAAC,CAAC;IAChC;IACA;IACA,IAAI,IAAI,CAACxU,UAAU,EAAE;MACjB,IAAI,CAACyU,oBAAoB,CAAC,CAAC;IAC/B;IACA,MAAMC,cAAc,GAAG,IAAI,CAAC1d,SAAS,CAAC8N,IAAI,CAAC6P,aAAa;IACxDD,cAAc,CAACnF,IAAI,CAACnd,QAAQ,CAAEwiB,MAAM,IAAKA,MAAM,KAAK,SAAS,CAAC,CAAC,CAACpF,SAAS,CAAC,MAAM;MAC5E,IAAI,CAAC7U,MAAM,GAAG,IAAI,CAAC3D,SAAS,CAAC4O,gBAAgB,CAAC,IAAI,CAACnG,aAAa,CAAC;IACrE,CAAC,CAAC;IACF,IAAI,CAACoV,qBAAqB,GAAGH,cAAc,CAACnF,IAAI,CAACld,GAAG,CAAEuiB,MAAM,IAAK;MAC7D,OAAOA,MAAM,KAAK,SAAS,IAAI,IAAI,CAAC7D,SAAS;IACjD,CAAC,CAAC,CAAC;IACH;IACA,IAAI,IAAI,CAACjR,QAAQ,EAAE;MACf,IAAI,CAAC9I,SAAS,CAACwP,OAAO,CAAC,CAAC;IAC5B;EACJ;EACA;AACJ;AACA;EACI7B,QAAQA,CAAA,EAAG;IACP;IACA;IACA;IACA,MAAMmQ,kBAAkB,GAAG,IAAI,CAAC5V,QAAQ,KAAKvJ,SAAS,IAClD,IAAI,CAACyM,KAAK,IACV,IAAI,CAACA,KAAK,CAACtK,MAAM,GAAG,IAAI,CAACoH,QAAQ;IACrC,IAAI4V,kBAAkB,EAAE;MACpB,IAAI,CAAC5V,QAAQ,GAAG,IAAI,CAACkD,KAAK,CAACtK,MAAM;MACjCid,OAAO,CAACC,IAAI,CAACzY,iBAAiB,CAAC;IACnC;IACA;IACA;IACA,IAAI,CAAC1C,QAAQ,GAAG,IAAI,CAAC2F,oBAAoB,GAAG,KAAK,GAAG,IAAI,CAAC3F,QAAQ;IACjE,IAAI,CAACob,oBAAoB,CAAC,CAAC;EAC/B;EACA;AACJ;AACA;AACA;AACA;EACI3c,iBAAiBA,CAACiF,GAAG,EAAE9J,KAAK,EAAE;IAC1B,OAAO,IAAIqgB,OAAO,CAACoB,OAAO,IAAI;MAC1B,MAAM7F,WAAW,GAAIhb,KAAK,IAAK;QAC3B,IAAI,CAAC8gB,UAAU,CAAC9gB,KAAK,EAAEZ,KAAK,CAAC;QAC7ByhB,OAAO,CAAC3X,GAAG,CAAC;MAChB,CAAC;MACD,IAAI,CAACgD,UAAU,GACX,IAAI,CAACA,UAAU,CAAChD,GAAG,CAAC,CACfgS,IAAI,CAAChd,OAAO,CAAC,CAAC,CAAC,CACfid,SAAS,CAACH,WAAW,CAAC,GAAGA,WAAW,CAAC9R,GAAG,CAAC;IACtD,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIe,iBAAiBA,CAACwU,gBAAgB,EAAEvV,GAAG,EAAE9J,KAAK,EAAE2hB,WAAW,EAAE;IACzD,OAAO,IAAItB,OAAO,CAAC,CAACoB,OAAO,EAAEG,MAAM,KAAK;MACpC,MAAMhG,WAAW,GAAIhb,KAAK,IAAK;QAC3B,OAAO,IAAI,CACNihB,OAAO,CAACxC,gBAAgB,EAAEze,KAAK,EAAEZ,KAAK,EAAE2hB,WAAW,CAAC,CACpDpB,IAAI,CAACkB,OAAO,CAAC,CACbnG,KAAK,CAACsG,MAAM,CAAC;MACtB,CAAC;MACD,OAAO,IAAI,CAAC7U,QAAQ,GAChB,IAAI,CAACA,QAAQ,CAACjD,GAAG,CAAC,CACbgS,IAAI,CAAChd,OAAO,CAAC,CAAC,CAAC,CACfid,SAAS,CAACH,WAAW,EAAEgG,MAAM,CAAC,GAAGhG,WAAW,CAAC9R,GAAG,CAAC;IAC9D,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;EACIpF,UAAUA,CAAC3E,IAAI,EAAEkR,IAAI,GAAG,IAAI,EAAE;IAC1B,MAAM6Q,UAAU,GAAG/hB,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACiX,QAAQ;IACpE,IAAI8K,UAAU,IAAI,IAAI,CAACC,WAAW,KAAKhiB,IAAI,EAAE;MACzC;IACJ;IACA,IAAI,CAACgiB,WAAW,GAAGhiB,IAAI;IACvB,IAAIkR,IAAI,EAAE;MACN,IAAI,CAAC4F,QAAQ,CAAC5F,IAAI,CAAClR,IAAI,CAAC;IAC5B;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;EACIiiB,UAAUA,CAACC,SAAS,EAAE9gB,MAAM,EAAE;IAC1B,IAAI,CAAC8O,SAAS,CAACgS,SAAS,CAAC,CAACC,OAAO,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,IAAI,EAAEjhB,MAAM,CAAC,CAAC;EAC9E;EACA;AACJ;AACA;AACA;AACA;EACI4D,aAAaA,CAACqF,IAAI,EAAE;IAChB,MAAMP,KAAK,GAAGO,IAAI,CAACP,KAAK;IACxB,MAAMmB,GAAG,GAAGnB,KAAK,CAACwN,OAAO,IAAIxN,KAAK,CAACwY,KAAK;IACxC,MAAMC,QAAQ,GAAGzY,KAAK,CAACyY,QAAQ,IAAI,KAAK;IACxC,QAAQlZ,iBAAiB,CAAC4B,GAAG,CAAC;MAC1B,KAAKjC,YAAY,CAACC,MAAM;QACpB,IAAI,IAAI,CAAC+Y,WAAW,IAAI,IAAI,CAACtb,SAAS,EAAE;UACpC,MAAMzG,KAAK,GAAG,IAAI,CAAC2O,KAAK,CAACT,OAAO,CAAC,IAAI,CAAC6T,WAAW,CAAC;UAClD,IAAI,CAACld,iBAAiB,CAAC,IAAI,CAACkd,WAAW,EAAE/hB,KAAK,CAAC;QACnD;QACA;MACJ,KAAK+I,YAAY,CAACE,WAAW;QACzB,IAAI,CAACsZ,SAAS,CAACnY,IAAI,CAACxJ,KAAK,EAAE2I,IAAI,CAAC;QAChC;MACJ,KAAKR,YAAY,CAACG,WAAW;QACzB,IAAI,CAACqZ,SAAS,CAACnY,IAAI,CAACxJ,KAAK,EAAE0I,IAAI,CAAC;QAChC;MACJ,KAAKP,YAAY,CAACI,GAAG;QACjB,IAAImZ,QAAQ,EAAE;UACV,IAAI,IAAI,CAACE,UAAU,CAACpY,IAAI,CAACxJ,KAAK,CAAC,EAAE;YAC7B;UACJ;UACA,IAAI,CAAC2hB,SAAS,CAACnY,IAAI,CAACxJ,KAAK,EAAE2I,IAAI,CAAC;QACpC,CAAC,MACI;UACD,IAAI,IAAI,CAACkZ,SAAS,CAACrY,IAAI,CAACxJ,KAAK,CAAC,KAAK,IAAI,CAAC0F,OAAO,IAAI,IAAI,CAAC6T,eAAe,CAAC,EAAE;YACtE;UACJ;UACA,IAAI,CAACoI,SAAS,CAACnY,IAAI,CAACxJ,KAAK,EAAE0I,IAAI,CAAC;QACpC;QACA;MACJ;QACI;IACR;IACA;IACAO,KAAK,CAACwJ,cAAc,CAAC,CAAC;EAC1B;EACMqP,YAAYA,CAAA,EAAG;IAAA,IAAAC,MAAA;IAAA,OAAAvH,iBAAA;MACjB,IAAI;QACA,MAAMuH,MAAI,CAAC9X,iBAAiB,CAAC,KAAK,EAAE8X,MAAI,CAAC5F,SAAS,CAAC;MACvD,CAAC,CACD,MAAM;QACF;MACJ;IAAC;EACL;EACA;AACJ;AACA;AACA;EACIoD,aAAaA,CAAC3c,KAAK,EAAEof,SAAS,GAAG,IAAI,EAAE;IACnC,MAAMC,OAAO,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;IACjC;IACAD,OAAO,CAAC7R,QAAQ,CAACxN,KAAK,EAAE;MAAEof;IAAU,CAAC,CAAC;EAC1C;EACA;AACJ;AACA;EACIE,UAAUA,CAAA,EAAG;IACT,OAAO,IAAI,CAACvf,SAAS,CAACC,KAAK;EAC/B;EACA;AACJ;AACA;AACA;AACA;EACImP,KAAKA,CAACoQ,UAAU,GAAG,KAAK,EAAEC,mBAAmB,GAAG,KAAK,EAAE;IACnD,IAAI,IAAI,CAAC/c,YAAY,CAAC8E,QAAQ,CAAC,UAAU,CAAC,EAAE;MACxC;IACJ;IACA,IAAI,CAACrG,UAAU,CAACxC,SAAS,EAAE,KAAK,CAAC;IACjC,IAAI6gB,UAAU,EAAE;MACZ,IAAI,CAACxf,SAAS,CAACoP,KAAK,CAAC,CAAC;MACtB,IAAI,CAACnC,OAAO,CAACS,IAAI,CAAC,IAAI,CAAC8L,SAAS,CAAC;IACrC;EACJ;EACA;AACJ;AACA;EACInK,IAAIA,CAAA,EAAG;IACH,IAAI,CAAC/D,SAAS,CAAC,CAAC;IAChB,IAAI,CAAC0B,MAAM,CAACU,IAAI,CAAC,IAAI,CAAC8L,SAAS,CAAC;EACpC;EACA;AACJ;AACA;EACIvK,SAASA,CAAA,EAAG;IACR,OAAO,CAAC,CAAC,IAAI,CAACjP,SAAS,IAAI,IAAI,CAACA,SAAS,CAACiP,SAAS,CAAC,CAAC;EACzD;EACA;AACJ;AACA;EACIX,cAAcA,CAAA,EAAG;IACb,OAAO,CAAC,CAAC,IAAI,CAACtO,SAAS,IAAI,IAAI,CAACA,SAAS,CAACsO,cAAc,CAAC,CAAC;EAC9D;EACA;AACJ;AACA;AACA;AACA;EACIlL,iBAAiBA,CAAA,EAAG;IAChB,MAAM9F,QAAQ,GAAG,IAAI,CAACqD,SAAS,GAAG,IAAI,CAACA,SAAS,CAACrF,KAAK,GAAGqD,SAAS;IAClE,MAAM+gB,YAAY,GAAG,IAAI,CAAC9V,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACjJ,SAAS,GACzD,IAAI,CAACiJ,QAAQ,CAACjJ,SAAS,CAACrF,KAAK,GAAGqD,SAAS;IAC7C,OAAOyd,OAAO,CAAC9e,QAAQ,IAAIA,QAAQ,KAAKoiB,YAAY,CAAC;EACzD;EACA;AACJ;AACA;EACI,IAAI9I,eAAeA,CAAA,EAAG;IAClB,OAAO,IAAI,CAAC1O,QAAQ,KAAKvJ,SAAS,IAC9B,IAAI,CAACyM,KAAK,CAACtK,MAAM,IAAI,IAAI,CAACoH,QAAQ;EAC1C;EACA;AACJ;AACA;EACI,IAAIsR,SAASA,CAAA,EAAG;IACZ,MAAM1L,IAAI,GAAG,IAAI,CAAC9N,SAAS,CAACC,KAAK;IACjC,OAAO6N,IAAI,GAAGA,IAAI,CAAC7N,KAAK,GAAG,EAAE;EACjC;EACA;AACJ;AACA;AACA;AACA;EACI8B,aAAaA,CAACuE,KAAK,EAAEC,GAAG,EAAE9J,KAAK,EAAE;IAC7B6J,KAAK,CAAC5H,eAAe,CAAC,CAAC;IACvB,MAAMlC,IAAI,GAAG;MAAEmjB,IAAI,EAAE,IAAI,CAAC7d,QAAQ;MAAEyE,GAAG;MAAE9J;IAAM,CAAC;IAChD,IAAI,CAACiG,YAAY,CAACsE,SAAS,CAAC,IAAI,CAAC;IACjC,IAAI,CAACtE,YAAY,CAAC2D,cAAc,CAACC,KAAK,EAAE9J,IAAI,CAAC;IAC7C,IAAI,CAACkG,YAAY,CAAC6E,QAAQ,CAAC;MAAEpB,QAAQ,EAAE,IAAI;MAAE1J;IAAM,CAAC,CAAC;EACzD;EACA;AACJ;AACA;AACA;EACI4F,UAAUA,CAACiE,KAAK,EAAE7J,KAAK,EAAE;IACrB,IAAI,CAACiG,YAAY,CAAC6E,QAAQ,CAAC;MAAEnB,QAAQ,EAAE;IAAK,CAAC,CAAC;IAC9C,IAAI,CAAC1D,YAAY,CAACwE,WAAW,CAAC,IAAI,CAAC;IACnCZ,KAAK,CAACwJ,cAAc,CAAC,CAAC;EAC1B;EACA;AACJ;AACA;AACA;AACA;EACI5N,YAAYA,CAACoE,KAAK,EAAE7J,KAAK,EAAE;IACvB,MAAMD,IAAI,GAAG,IAAI,CAACkG,YAAY,CAACkE,cAAc,CAACN,KAAK,CAAC;IACpD,IAAI,CAAC9J,IAAI,IAAIA,IAAI,CAACmjB,IAAI,KAAK,IAAI,CAAC7d,QAAQ,EAAE;MACtC;IACJ;IACA,IAAI,CAACY,YAAY,CAACR,YAAY,CAAC1F,IAAI,CAAC+J,GAAG,EAAE/J,IAAI,CAACC,KAAK,EAAEA,KAAK,CAAC;IAC3D6J,KAAK,CAACwJ,cAAc,CAAC,CAAC;IACtBxJ,KAAK,CAAC5H,eAAe,CAAC,CAAC;EAC3B;EACA;AACJ;AACA;EACIkhB,UAAUA,CAAA,EAAG;IACT,MAAMC,UAAU,GAAG,IAAI,CAACnd,YAAY,CAACyE,QAAQ,KAAK,IAAI;IACtD,MAAMyY,UAAU,GAAG,IAAI,CAACld,YAAY,CAAC8E,QAAQ,CAAC,UAAU,CAAC;IACzD,OAAO4U,OAAO,CAACyD,UAAU,IAAID,UAAU,CAAC;EAC5C;EACA;AACJ;AACA;AACA;AACA;EACIhe,YAAYA,CAACke,cAAc,EAAErjB,KAAK,EAAE;IAChC,IAAI,CAAC2O,KAAK,CAAC3O,KAAK,CAAC,GAAGqjB,cAAc;IAClC,IAAI,CAACzQ,IAAI,CAAC,CAAC;EACf;EACA;AACJ;AACA;AACA;EACI0Q,OAAOA,CAACtjB,KAAK,EAAED,IAAI,EAAE;IACjB,OAAOA,IAAI,CAAC,IAAI,CAAC2G,UAAU,CAAC;EAChC;EACA;AACJ;AACA;AACA;EACIzB,eAAeA,CAAC6E,GAAG,EAAE;IACjB,IAAI,CAACiN,WAAW,CAAC9F,IAAI,CAACnH,GAAG,CAAC;EAC9B;EACA;AACJ;AACA;AACA;AACA;EACIyY,SAASA,CAACxiB,IAAI,EAAEwjB,SAAS,EAAE;IACvB,MAAMC,MAAM,GAAG,IAAI,CAACf,SAAS,CAAC1iB,IAAI,CAAC;IACnC,MAAM0jB,OAAO,GAAG,IAAI,CAACjB,UAAU,CAACziB,IAAI,CAAC;IACrC,MAAM2jB,UAAU,GAAIH,SAAS,KAAKja,IAAI,IAAIka,MAAM,IAC3CD,SAAS,KAAKha,IAAI,IAAIka,OAAQ;IACnC,IAAIC,UAAU,EAAE;MACZ,IAAI,CAAC/Q,KAAK,CAAC,IAAI,CAAC;MAChB;IACJ;IACA,MAAMtF,MAAM,GAAGkW,SAAS,KAAKja,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1C,MAAMtJ,KAAK,GAAG,IAAI,CAAC2jB,WAAW,CAAC5jB,IAAI,CAAC,GAAGsN,MAAM;IAC7C,MAAMvD,GAAG,GAAG,IAAI,CAAC8Z,aAAa,CAAC5jB,KAAK,CAAC;IACrC,OAAO8J,GAAG,CAACmN,MAAM,CAACmL,IAAI,CAACtY,GAAG,CAAC;EAC/B;EACA;AACJ;AACA;AACA;EACI0Y,UAAUA,CAACziB,IAAI,EAAE;IACb,OAAO,IAAI,CAACod,IAAI,CAACte,KAAK,CAAC+B,KAAK,KAAKb,IAAI;EACzC;EACA;AACJ;AACA;AACA;EACI0iB,SAASA,CAAC1iB,IAAI,EAAE;IACZ,OAAO,IAAI,CAACod,IAAI,CAACtZ,IAAI,CAACjD,KAAK,KAAKb,IAAI;EACxC;EACA;AACJ;AACA;AACA;EACI4jB,WAAWA,CAAC5jB,IAAI,EAAE;IACd,MAAMod,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC0G,OAAO,CAAC,CAAC;IAChC,OAAO1G,IAAI,CAAC2G,SAAS,CAACha,GAAG,IAAIA,GAAG,CAAClJ,KAAK,KAAKb,IAAI,CAAC;EACpD;EACA;AACJ;AACA;AACA;EACI6jB,aAAaA,CAAC5jB,KAAK,EAAE;IACjB,MAAMmd,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC0G,OAAO,CAAC,CAAC;IAChC,OAAO1G,IAAI,CAACnd,KAAK,CAAC;EACtB;EACA;AACJ;AACA;AACA;AACA;AACA;EACI0hB,UAAUA,CAAC5X,GAAG,EAAE9J,KAAK,EAAE;IACnB,IAAI,CAAC2O,KAAK,GAAG,IAAI,CAACY,eAAe,CAACvP,KAAK,CAAC;IACxC;IACA,IAAI,IAAI,CAAC+hB,WAAW,KAAKjY,GAAG,EAAE;MAC1B,IAAI,CAACpF,UAAU,CAACxC,SAAS,EAAE,KAAK,CAAC;IACrC;IACA;IACA,IAAI,CAACyQ,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;IACvB;IACA,IAAI,CAACmE,QAAQ,CAAC7F,IAAI,CAACnH,GAAG,CAAC;EAC3B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI+X,OAAOA,CAACxC,gBAAgB,GAAG,KAAK,EAAEtf,IAAI,EAAEC,KAAK,EAAE2hB,WAAW,EAAE;IACxD,MAAM3E,OAAO,GAAG,IAAI,CAAC1N,cAAc,CAACvP,IAAI,CAAC;IACzC,MAAM+J,GAAG,GAAG,IAAI,CAACqV,SAAS,CAACpf,IAAI,CAAC;IAChC,IAAIsf,gBAAgB,EAAE;MAClB,IAAI,CAACc,aAAa,CAAC,IAAI,CAAChR,YAAY,CAACpP,IAAI,EAAE,IAAI,CAAC,CAAC;IACrD;IACA,OAAO,IAAIsgB,OAAO,CAAC,CAACoB,OAAO,EAAEG,MAAM,KAAK;MACpC;AACZ;AACA;MACY,MAAMmC,KAAK,GAAGA,CAAA,KAAM;QAChB;QACA,IAAI,CAAC5D,aAAa,CAAC,EAAE,CAAC;QACtB,IAAIwB,WAAW,EAAE;UACb,IAAI,CAAChP,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC;QAC5B,CAAC,MACI;UACD;UACA,IAAI,CAACA,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;QAC3B;QACA8O,OAAO,CAACzE,OAAO,CAAC;MACpB,CAAC;MACD,MAAMgH,UAAU,GAAGA,CAAA,KAAM;QACrB,IAAI,CAAC9E,SAAS,CAACpV,GAAG,EAAE9J,KAAK,CAAC;QAC1B;QACA,IAAI,CAAC8e,KAAK,CAAC7N,IAAI,CAACnH,GAAG,CAAC;QACpB,IAAI,CAAC,IAAI,CAACqD,QAAQ,EAAE;UAChB;QACJ;QACA,IAAI,CAACA,QAAQ,CAAC6N,IAAI,CAAC,CAAC;QACpB,IAAI,IAAI,CAAC7N,QAAQ,CAACI,mBAAmB,EAAE;UACnC,IAAI,CAACJ,QAAQ,CAAC+M,IAAI,CAAC,CAAC;QACxB;MACJ,CAAC;MACD,MAAMiH,MAAM,GAAG,IAAI,CAAC5d,SAAS,CAAC8N,IAAI,CAAC8P,MAAM;MACzC,MAAM9a,UAAU,GAAG,IAAI,CAACA,UAAU,CAACyD,GAAG,EAAEuV,gBAAgB,CAAC;MACzD,MAAML,iBAAiB,GAAGA,CAAA,KAAM;QAC5B,IAAI,CAACA,iBAAiB,CAAC/N,IAAI,CAACnH,GAAG,CAAC;QAChC,OAAO8X,MAAM,CAAC,CAAC;MACnB,CAAC;MACD,IAAIT,MAAM,KAAK,OAAO,IAAI9a,UAAU,EAAE;QAClC2d,UAAU,CAAC,CAAC;QACZ,OAAOD,KAAK,CAAC,CAAC;MAClB;MACA,IAAI5C,MAAM,KAAK,SAAS,IAAI,CAAC9a,UAAU,EAAE;QACrC0d,KAAK,CAAC,CAAC;QACP,OAAO/E,iBAAiB,CAAC,CAAC;MAC9B;MACA,IAAImC,MAAM,KAAK,SAAS,EAAE;QACtB,MAAM8C,aAAa,GAAG,IAAI,CAAC1gB,SAAS,CAAC8N,IAAI,CAAC6P,aAAa;QACvD,OAAO+C,aAAa,CACfnI,IAAI,CAACnd,QAAQ,CAACulB,YAAY,IAAIA,YAAY,KAAK,SAAS,CAAC,EAAEplB,OAAO,CAAC,CAAC,CAAC,CACrEid,SAAS,CAAEmI,YAAY,IAAK;UAC7B,IAAIA,YAAY,KAAK,OAAO,IAAI7d,UAAU,EAAE;YACxC2d,UAAU,CAAC,CAAC;YACZ,OAAOD,KAAK,CAAC,CAAC;UAClB,CAAC,MACI;YACDA,KAAK,CAAC,CAAC;YACP,OAAO/E,iBAAiB,CAAC,CAAC;UAC9B;QACJ,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACI2B,0BAA0BA,CAAA,EAAG;IACzB,MAAMwD,gBAAgB,GAAG,IAAI,CAAC3Y,iBAAiB,CAACnH,MAAM,GAAG,CAAC,IAAI,IAAI,CAACkH,aAAa,CAAClH,MAAM,GAAG,CAAC;IAC3F,MAAM8d,QAAQ,GAAIhhB,MAAM,IAAK;MACzB,MAAMijB,UAAU,GAAG,IAAI,CAAC5Y,iBAAiB,CAAC0C,OAAO,CAAC/M,MAAM,CAACkW,OAAO,CAAC,IAAI,CAAC;MACtE,MAAMgN,MAAM,GAAG,IAAI,CAAC9Y,aAAa,CAAC2C,OAAO,CAAC/M,MAAM,CAAC6J,GAAG,CAAC,IAAI,CAAC;MAC1D;MACA,MAAMsZ,eAAe,GAAGnjB,MAAM,CAACkW,OAAO,KAAK,GAAG;MAC9C,IAAI+M,UAAU,IAAKC,MAAM,IAAI,CAACC,eAAgB,EAAE;QAC5CnjB,MAAM,CAACkS,cAAc,CAAC,CAAC;QACvB,IAAI,CAACxI,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAACkS,SAAS,CAAC,CACxCzB,KAAK,CAAC,MAAM,CAAE,CAAC,CAAC;MACzB;IACJ,CAAC;IACDzL,MAAM,CAACuS,IAAI,CAAC,IAAI,EAAEzZ,OAAO,EAAEwZ,QAAQ,EAAEgC,gBAAgB,CAAC;EAC1D;EACA;AACJ;AACA;EACIzD,sBAAsBA,CAAA,EAAG;IACrB,MAAMyB,QAAQ,GAAIhhB,MAAM,IAAK;MACzB,MAAMojB,YAAY,GAAGpjB,MAAM,CAACkW,OAAO,KAAK,EAAE,IAAIlW,MAAM,CAACkW,OAAO,KAAK,CAAC;MAClE,IAAIkN,YAAY,IACZ,CAAC,IAAI,CAACxH,SAAS,IACf,IAAI,CAACpO,KAAK,CAACtK,MAAM,EAAE;QACnB,IAAI,CAAC8Y,IAAI,CAACtZ,IAAI,CAACoT,MAAM,CAACmL,IAAI,CAAC,IAAI,CAACjF,IAAI,CAACtZ,IAAI,CAAC;MAC9C;IACJ,CAAC;IACD;IACAgM,MAAM,CAACuS,IAAI,CAAC,IAAI,EAAEzZ,OAAO,EAAEwZ,QAAQ,CAAC;EACxC;EACA;AACJ;AACA;EACIvB,0BAA0BA,CAAA,EAAG;IACzB,IAAI,CAACrd,SAAS,CAACmN,SAAS,CAACqL,SAAS,CAAClS,KAAK,IAAI;MACxC,IAAIA,KAAK,CAACmB,GAAG,KAAK,WAAW,IAAI,IAAI,CAAC+R,SAAS,CAACrV,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAC3DmC,KAAK,CAACwJ,cAAc,CAAC,CAAC;MAC1B;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACI2N,oBAAoBA,CAAA,EAAG;IACnB,MAAM/O,KAAK,GAAG,IAAI,CAAC1O,SAAS,CAAC0O,KAAK,CAACC,aAAa;IAChD;IACA,IAAI,CAACyE,QAAQ,CAAC9G,MAAM,CAACoC,KAAK,EAAE,OAAO,EAAGpI,KAAK,IAAK;MAC5C,IAAI,CAAC+V,eAAe,CAAC/V,KAAK,CAAC;MAC3BA,KAAK,CAACwJ,cAAc,CAAC,CAAC;MACtB,OAAO,IAAI;IACf,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIyN,yBAAyBA,CAAA,EAAG;IACxB,IAAI,CAACvd,SAAS,CAAC8N,IAAI,CACdmT,YAAY,CACZ1I,IAAI,CAAC9c,cAAc,CAAC,IAAI,CAACiN,oBAAoB,CAAC,CAAC,CAC/C8P,SAAS,CAAEvY,KAAK,IAAK;MACtB,IAAI,CAAC8Y,YAAY,CAACrL,IAAI,CAACzN,KAAK,CAACzD,IAAI,CAAC;IACtC,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIghB,qBAAqBA,CAAA,EAAG;IACpB,MAAM0D,QAAQ,GAAGA,CAAA,KAAM;MACnB,MAAM/J,SAAS,GAAG,IAAI,CAACvN,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACuN,SAAS;MAC1D,OAAO,CAACA,SAAS,IAAI,CAAC,CAAC,IAAI,CAACqC,SAAS;IACzC,CAAC;IACD,IAAI,CAACxZ,SAAS,CACTgN,MAAM,CACNuL,IAAI,CAAC9c,cAAc,CAAC,GAAG,CAAC,EAAEL,QAAQ,CAAC8lB,QAAQ,CAAC,CAAC,CAC7C1I,SAAS,CAAC,MAAM;MACjB,MAAMgI,KAAK,GAAGA,CAAA,KAAM,IAAI,CAAC5D,aAAa,CAAC,EAAE,CAAC;MAC1C,IAAI,IAAI,CAAC7T,SAAS,EAAE;QAChB,OAAO,IAAI,CACNzB,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAACkS,SAAS,EAAE7a,SAAS,EAAE,IAAI,CAAC,CACzDqe,IAAI,CAACwD,KAAK,CAAC,CACXzI,KAAK,CAACyI,KAAK,CAAC;MACrB;MACAA,KAAK,CAAC,CAAC;IACX,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;EACIxE,QAAQA,CAACzV,GAAG,EAAE2V,kBAAkB,EAAE;IAC9B,MAAM/Y,UAAU,GAAG+Y,kBAAkB,GAAG,IAAI,CAACtS,QAAQ,CAACzG,UAAU,GAAG,IAAI,CAACA,UAAU;IAClF,MAAMge,EAAE,GAAG5a,GAAG,CAACpD,UAAU,CAAC;IAC1B,OAAO,IAAI,CAACiI,KAAK,CAAC6Q,IAAI,CAACzf,IAAI,IAAI,IAAI,CAACoP,YAAY,CAACpP,IAAI,CAAC,KAAK2kB,EAAE,CAAC;EAClE;EACA;AACJ;AACA;EACIlD,oBAAoBA,CAAA,EAAG;IACnB,IAAI,CAACjb,iBAAiB,GAAG;MACrB/C,KAAK,EAAE,IAAI;MACXmhB,MAAM,EAAE;QAAE,GAAG,IAAI,CAAC3X;MAAkB;IACxC,CAAC;EACL;AACJ;AACAgN,iBAAiB,CAAClS,IAAI,YAAA8c,0BAAA5c,CAAA;EAAA,YAAAA,CAAA,IAAwFgS,iBAAiB,EA1jE/Bnd,EAAE,CAAA6b,iBAAA,CA0jE+C7b,EAAE,CAAC+b,SAAS,GA1jE7D/b,EAAE,CAAA6b,iBAAA,CA0jEwElP,YAAY;AAAA,CAA4C;AAClOwQ,iBAAiB,CAACzG,IAAI,kBA3jE0E1W,EAAE,CAAA2W,iBAAA;EAAApL,IAAA,EA2jEA4R,iBAAiB;EAAAvG,SAAA;EAAAgK,cAAA,WAAAoH,iCAAAnlB,EAAA,EAAAC,GAAA,EAAAge,QAAA;IAAA,IAAAje,EAAA;MA3jEnB7C,EAAE,CAAA+gB,cAAA,CAAAD,QAAA,EA2jEq2C9D,gBAAgB;MA3jEv3Chd,EAAE,CAAA+gB,cAAA,CAAAD,QAAA,EA2jEo7CngB,WAAW;IAAA;IAAA,IAAAkC,EAAA;MAAA,IAAAmU,EAAA;MA3jEj8ChX,EAAE,CAAAiX,cAAA,CAAAD,EAAA,GAAFhX,EAAE,CAAAkX,WAAA,QAAApU,GAAA,CAAAwN,QAAA,GAAA0G,EAAA,CAAAhV,KAAA;MAAFhC,EAAE,CAAAiX,cAAA,CAAAD,EAAA,GAAFhX,EAAE,CAAAkX,WAAA,QAAApU,GAAA,CAAAuE,SAAA,GAAA2P,EAAA;IAAA;EAAA;EAAAH,SAAA,WAAAoR,wBAAAplB,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7C,EAAE,CAAA+W,WAAA,CA2jEugDvD,YAAY;MA3jErhDxT,EAAE,CAAA+W,WAAA,CA2jE6kD6C,YAAY;IAAA;IAAA,IAAA/W,EAAA;MAAA,IAAAmU,EAAA;MA3jE3lDhX,EAAE,CAAAiX,cAAA,CAAAD,EAAA,GAAFhX,EAAE,CAAAkX,WAAA,QAAApU,GAAA,CAAA4D,SAAA,GAAAsQ,EAAA,CAAAhV,KAAA;MAAFhC,EAAE,CAAAiX,cAAA,CAAAD,EAAA,GAAFhX,EAAE,CAAAkX,WAAA,QAAApU,GAAA,CAAAwd,IAAA,GAAAtJ,EAAA;IAAA;EAAA;EAAAkF,QAAA;EAAAC,YAAA,WAAA+L,+BAAArlB,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7C,EAAE,CAAA0D,WAAA,aAAAZ,GAAA,CAAA8gB,YAAA;IAAA;EAAA;EAAA7Q,MAAA;IAAArE,aAAA;IAAAC,iBAAA;IAAAG,WAAA;IAAAC,oBAAA;IAAAH,QAAA;IAAAI,UAAA;IAAAC,eAAA;IAAAC,oBAAA;IAAAC,aAAA;IAAA/E,KAAA;IAAAgF,oBAAA;IAAAC,OAAA;IAAAC,UAAA;IAAAC,WAAA;IAAAC,QAAA;IAAAC,SAAA;IAAAC,UAAA;IAAAC,iBAAA;IAAAC,WAAA;IAAAhG,SAAA;IAAAL,QAAA;IAAAsG,UAAA;IAAAC,cAAA;IAAAC,QAAA;IAAAkE,SAAA;IAAAtK,MAAA;IAAAoK,QAAA;IAAAtK,OAAA;IAAAjB,QAAA;IAAAyH,UAAA;IAAAC,QAAA;IAAAC,iBAAA;EAAA;EAAAgH,OAAA;IAAA8K,KAAA;IAAAhI,QAAA;IAAAD,QAAA;IAAArG,OAAA;IAAAD,MAAA;IAAA+L,YAAA;IAAAyC,OAAA;IAAAC,iBAAA;IAAAjI,WAAA;IAAApG,eAAA;EAAA;EAAAsD,QAAA,GAAFpX,EAAE,CAAAmoB,kBAAA,CA2jEoxC,CAACxG,eAAe,CAAC,GA3jEvyC3hB,EAAE,CAAAooB,0BAAA;EAAAC,kBAAA,EAAA/d,GAAA;EAAAgN,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAxT,QAAA,WAAAskB,2BAAAzlB,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAAF7C,EAAE,CAAAuoB,eAAA;MAAFvoB,EAAE,CAAAqD,cAAA,YA2jE0yE,CAAC;MA3jE7yErD,EAAE,CAAAoE,UAAA,mBAAAokB,gDAAA;QAAA,OA2jE2uD1lB,GAAA,CAAAgT,KAAA,CAAM,IAAI,EAAE,KAAK,CAAC;MAAA,CAAC,CAAC,kBAAA2S,+CAAAnkB,MAAA;QAAA,OAAAxB,GAAA,CAAA0F,QAAA,GAAsD1F,GAAA,CAAA8F,YAAA,CAAAtE,MAAA,EAAqBe,SAAS,CAAC,GAAGA,SAAS;MAAA,CAAlG,CAAC,uBAAAqjB,oDAAApkB,MAAA;QAAA,OAAAxB,GAAA,CAAA0F,QAAA,GAAkI1F,GAAA,CAAAiG,UAAA,CAAAzE,MAAiB,CAAC,GAAGe,SAAS;MAAA,CAAjK,CAAC,sBAAAsjB,mDAAArkB,MAAA;QAAA,OAAAxB,GAAA,CAAA0F,QAAA,GAAgM1F,GAAA,CAAAiG,UAAA,CAAAzE,MAAiB,CAAC,GAAGe,SAAS;MAAA,CAA/N,CAAC,qBAAAujB,kDAAA;QAAA,OAAA9lB,GAAA,CAAA0F,QAAA,GAA6P1F,GAAA,CAAAsG,YAAA,CAAAC,SAAA,CAAuB,CAAC,GAAGhE,SAAS;MAAA,CAAlS,CAAC;MA3jEjwDrF,EAAE,CAAAqD,cAAA,YA2jEu2E,CAAC;MA3jE12ErD,EAAE,CAAAsD,UAAA,IAAAmE,gCAAA,iBA2jE0oH,CAAC;MA3jE7oHzH,EAAE,CAAAqD,cAAA,uBA2jEi0I,CAAC;MA3jEp0IrD,EAAE,CAAAoE,UAAA,sBAAAykB,8DAAA;QAAA,OA2jEisH/lB,GAAA,CAAA+iB,YAAA,CAAa,CAAC;MAAA,CAAC,CAAC,oBAAAiD,4DAAA;QAAA,OAAyBhmB,GAAA,CAAAiT,IAAA,CAAK,CAAC;MAAA,CAAhC,CAAC,mBAAAgT,2DAAA;QAAA,OAAAjmB,GAAA,CAAAwN,QAAA,GAAoExN,GAAA,CAAAwN,QAAA,CAAA+M,IAAA,CAAc,CAAC,GAAGhY,SAAS;MAAA,CAAhG,CAAC,uBAAA2jB,+DAAA1kB,MAAA;QAAA,OAA6HxB,GAAA,CAAAqiB,UAAA,CAAW,SAAS,EAAA7gB,MAAQ,CAAC;MAAA,CAA3J,CAAC,qBAAA2kB,6DAAA3kB,MAAA;QAAA,OAAsLxB,GAAA,CAAAqiB,UAAA,CAAW,OAAO,EAAA7gB,MAAQ,CAAC;MAAA,CAAlN,CAAC;MA3jEntHtE,EAAE,CAAAuD,YAAA,CA2jE41I,CAAC,CAAD,CAAC;MA3jE/1IvD,EAAE,CAAAsD,UAAA,IAAAyG,gCAAA,gBA2jEk9I,CAAC;MA3jEr9I/J,EAAE,CAAAmG,MAAA;MAAFnG,EAAE,CAAAuD,YAAA,CA2jE09I,CAAC;MA3jE79IvD,EAAE,CAAAsD,UAAA,IAAA6G,gCAAA,gBA2jEotJ,CAAC;MA3jEvtJnK,EAAE,CAAAkpB,YAAA,EA2jE+uJ,CAAC;IAAA;IAAA,IAAArmB,EAAA;MA3jElvJ7C,EAAE,CAAAsc,WAAA,4BAAAxZ,GAAA,CAAAwjB,UAAA,EA2jEulE,CAAC,4BAAAxjB,GAAA,CAAA2G,OAAD,CAAC,2BAAA3G,GAAA,CAAA2d,SAAD,CAAC,2BAAA3d,GAAA,CAAA6S,SAAA,EAAD,CAAC,2BAAA7S,GAAA,CAAAkS,cAAA,EAAD,CAAC;MA3jE1lEhV,EAAE,CAAA6D,UAAA,YAAAf,GAAA,CAAAsH,KA2jE6rD,CAAC;MA3jEhsDpK,EAAE,CAAA0D,WAAA,eA2jE0xD,CAAC;MA3jE7xD1D,EAAE,CAAA4D,SAAA,EA2jE+5E,CAAC;MA3jEl6E5D,EAAE,CAAA6D,UAAA,YAAAf,GAAA,CAAAgP,KA2jE+5E,CAAC,iBAAAhP,GAAA,CAAA2jB,OAAD,CAAC;MA3jEl6EzmB,EAAE,CAAA4D,SAAA,CA2jE08H,CAAC;MA3jE78H5D,EAAE,CAAA6D,UAAA,cAAAf,GAAA,CAAAmR,SA2jE08H,CAAC,aAAAnR,GAAA,CAAA2G,OAAD,CAAC,eAAA3G,GAAA,CAAAkM,UAAD,CAAC,oBAAAlM,GAAA,CAAAmM,eAAD,CAAC,WAAAnM,GAAA,CAAAwa,eAAD,CAAC,gBAAAxa,GAAA,CAAAgP,KAAA,CAAAtK,MAAA,GAAA1E,GAAA,CAAAgM,WAAA,GAAAhM,GAAA,CAAAiM,oBAAD,CAAC,eAAAjM,GAAA,CAAAwM,UAAD,CAAC,YAAAxM,GAAA,CAAAuM,OAAD,CAAC,aAAAvM,GAAA,CAAAiR,QAAD,CAAC;MA3jE78H/T,EAAE,CAAA4D,SAAA,CA2jEm8I,CAAC;MA3jEt8I5D,EAAE,CAAA6D,UAAA,SAAF7D,EAAE,CAAAmpB,WAAA,QAAArmB,GAAA,CAAAyhB,qBAAA,CA2jEm8I,CAAC;MA3jEt8IvkB,EAAE,CAAA4D,SAAA,EA2jE4gJ,CAAC;MA3jE/gJ5D,EAAE,CAAA6D,UAAA,SAAAf,GAAA,CAAA6S,SAAA,EA2jE4gJ,CAAC;IAAA;EAAA;EAAAoC,YAAA,GAAo9P6B,YAAY,EAAwOpG,YAAY,EAAqQhS,EAAE,CAAC+W,OAAO,EAAiE/W,EAAE,CAACggB,OAAO,EAAgGhgB,EAAE,CAACub,IAAI,EAAqFvb,EAAE,CAAC4nB,SAAS;EAAA5Q,MAAA;EAAAjL,IAAA;IAAAsL,SAAA,EAAgBI;EAAU;AAAA,EAAG;AACl4a;EAAA,QAAAxN,SAAA,oBAAAA,SAAA,KA5jEgGzL,EAAE,CAAA0L,iBAAA,CA4jEPyR,iBAAiB,EAAc,CAAC;IAC/G5R,IAAI,EAAEjL,SAAS;IACfqL,IAAI,EAAE,CAAC;MAAE8M,QAAQ,EAAE,WAAW;MAAE4Q,SAAS,EAAE,CAAC1H,eAAe,CAAC;MAAE1I,UAAU,EAAEA,UAAU;MAAEjV,QAAQ,EAAE,mlGAAmlG;MAAEwU,MAAM,EAAE,CAAC,2sPAA2sP;IAAE,CAAC;EACh5V,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEjN,IAAI,EAAEvL,EAAE,CAAC+b;IAAU,CAAC,EAAE;MAAExQ,IAAI,EAAEoB;IAAa,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAE+B,aAAa,EAAE,CAAC;MACxHnD,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEuO,iBAAiB,EAAE,CAAC;MACpBpD,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE0O,WAAW,EAAE,CAAC;MACdvD,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE2O,oBAAoB,EAAE,CAAC;MACvBxD,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEwO,QAAQ,EAAE,CAAC;MACXrD,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE4O,UAAU,EAAE,CAAC;MACbzD,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE6O,eAAe,EAAE,CAAC;MAClB1D,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE8O,oBAAoB,EAAE,CAAC;MACvB3D,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE+O,aAAa,EAAE,CAAC;MAChB5D,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEgK,KAAK,EAAE,CAAC;MACRmB,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEgP,oBAAoB,EAAE,CAAC;MACvB7D,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEiP,OAAO,EAAE,CAAC;MACV9D,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEkP,UAAU,EAAE,CAAC;MACb/D,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEmP,WAAW,EAAE,CAAC;MACdhE,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEoP,QAAQ,EAAE,CAAC;MACXjE,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEqP,SAAS,EAAE,CAAC;MACZlE,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEsP,UAAU,EAAE,CAAC;MACbnE,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEuP,iBAAiB,EAAE,CAAC;MACpBpE,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEwP,WAAW,EAAE,CAAC;MACdrE,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEwJ,SAAS,EAAE,CAAC;MACZ2B,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEmJ,QAAQ,EAAE,CAAC;MACXgC,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEyP,UAAU,EAAE,CAAC;MACbtE,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE0P,cAAc,EAAE,CAAC;MACjBvE,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE2P,QAAQ,EAAE,CAAC;MACXxE,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE6T,SAAS,EAAE,CAAC;MACZ1I,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEuJ,MAAM,EAAE,CAAC;MACT4B,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE2T,QAAQ,EAAE,CAAC;MACXxI,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEqJ,OAAO,EAAE,CAAC;MACV8B,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAEoI,QAAQ,EAAE,CAAC;MACX+C,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE6P,UAAU,EAAE,CAAC;MACb1E,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE8P,QAAQ,EAAE,CAAC;MACX3E,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE+P,iBAAiB,EAAE,CAAC;MACpB5E,IAAI,EAAEnL;IACV,CAAC,CAAC;IAAE6hB,KAAK,EAAE,CAAC;MACR1W,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAE0Z,QAAQ,EAAE,CAAC;MACX1O,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEyZ,QAAQ,EAAE,CAAC;MACXzO,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEoT,OAAO,EAAE,CAAC;MACVpI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEmT,MAAM,EAAE,CAAC;MACTnI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEkf,YAAY,EAAE,CAAC;MACflU,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAE2hB,OAAO,EAAE,CAAC;MACV3W,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAE4hB,iBAAiB,EAAE,CAAC;MACpB5W,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAE2Z,WAAW,EAAE,CAAC;MACd3O,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAE+P,QAAQ,EAAE,CAAC;MACX/E,IAAI,EAAEzK,YAAY;MAClB6K,IAAI,EAAE,CAACqR,gBAAgB;IAC3B,CAAC,CAAC;IAAE3V,SAAS,EAAE,CAAC;MACZkE,IAAI,EAAE3K,eAAe;MACrB+K,IAAI,EAAE,CAAChL,WAAW,EAAE;QAAE2oB,WAAW,EAAE;MAAM,CAAC;IAC9C,CAAC,CAAC;IAAE5iB,SAAS,EAAE,CAAC;MACZ6E,IAAI,EAAE/K,SAAS;MACfmL,IAAI,EAAE,CAAC6H,YAAY;IACvB,CAAC,CAAC;IAAE8M,IAAI,EAAE,CAAC;MACP/U,IAAI,EAAExK,YAAY;MAClB4K,IAAI,EAAE,CAACiO,YAAY;IACvB,CAAC,CAAC;IAAE9F,eAAe,EAAE,CAAC;MAClBvI,IAAI,EAAEhL;IACV,CAAC,CAAC;IAAEqjB,YAAY,EAAE,CAAC;MACfrY,IAAI,EAAE9K,WAAW;MACjBkL,IAAI,EAAE,CAAC,eAAe;IAC1B,CAAC;EAAE,CAAC;AAAA;AAEhB,MAAM4d,eAAe,GAAG,IAAIjY,eAAe,CAAC,CAAC;AAC7C,MAAMkY,cAAc,CAAC;EACjB;AACJ;AACA;AACA;EACI,OAAOC,YAAYA,CAACjY,OAAO,EAAE;IACzB+X,eAAe,CAAChY,UAAU,CAACC,OAAO,CAAC;EACvC;AACJ;AACAgY,cAAc,CAACve,IAAI,YAAAye,uBAAAve,CAAA;EAAA,YAAAA,CAAA,IAAwFqe,cAAc;AAAA,CAAkD;AAC3KA,cAAc,CAACG,IAAI,kBA/qE6E3pB,EAAE,CAAA4pB,gBAAA;EAAAre,IAAA,EA+qEUie;AAAc,EAerG;AACrBA,cAAc,CAACK,IAAI,kBA/rE6E7pB,EAAE,CAAA8pB,gBAAA;EAAAT,SAAA,EA+rEqC,CAC/H1c,YAAY,EACZ;IAAEiV,OAAO,EAAErgB,uBAAuB;IAAEwoB,QAAQ,EAAE;EAAM,CAAC,CACxD;EAAAC,OAAA,GAAY,CACLvoB,YAAY,EACZJ,mBAAmB,EACnBC,WAAW,EACXM,iBAAiB,CACpB;AAAA,EAAI;AACb;EAAA,QAAA6J,SAAA,oBAAAA,SAAA,KAxsEgGzL,EAAE,CAAA0L,iBAAA,CAwsEP8d,cAAc,EAAc,CAAC;IAC5Gje,IAAI,EAAEvK,QAAQ;IACd2K,IAAI,EAAE,CAAC;MACCqe,OAAO,EAAE,CACLvoB,YAAY,EACZJ,mBAAmB,EACnBC,WAAW,EACXM,iBAAiB,CACpB;MACDqoB,YAAY,EAAE,CACV9M,iBAAiB,EACjBjE,mBAAmB,EACnB1F,YAAY,EACZoG,YAAY,EACZlP,aAAa,EACbsS,gBAAgB,EAChBtE,SAAS,CACZ;MACDwR,OAAO,EAAE,CACL/M,iBAAiB,EACjBjE,mBAAmB,EACnB1F,YAAY,EACZoG,YAAY,EACZlP,aAAa,EACbsS,gBAAgB,EAChBtE,SAAS,CACZ;MACD2Q,SAAS,EAAE,CACP1c,YAAY,EACZ;QAAEiV,OAAO,EAAErgB,uBAAuB;QAAEwoB,QAAQ,EAAE;MAAM,CAAC;IAE7D,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAAS7Q,mBAAmB,EAAExO,aAAa,EAAEkP,YAAY,EAAEuD,iBAAiB,EAAEH,gBAAgB,EAAExJ,YAAY,EAAEgW,cAAc,EAAE9Q,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}