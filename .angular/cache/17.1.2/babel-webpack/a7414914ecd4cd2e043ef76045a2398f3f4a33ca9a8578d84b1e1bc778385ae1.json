{"ast":null,"code":"import * as Data from '../../../../shared/data/data/ui-kits/accordion';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../shared/components/feather-icons/feather-icons.component\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nfunction OutlineAccordionComponent_For_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"h2\", 7)(2, \"button\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelement(4, \"app-feather-icons\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 10)(6, \"div\", 11)(7, \"p\", 12);\n    i0.ɵɵelement(8, \"em\", 13);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const allData_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", allData_r1.title, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵclassMap(\"svg-color\");\n    i0.ɵɵproperty(\"icons\", \"chevron-down\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"innerHTML\", allData_r1.desc, i0.ɵɵsanitizeHtml);\n  }\n}\nexport class OutlineAccordionComponent {\n  constructor() {\n    this.simpleAccordionData = Data.simpleAccordionData;\n  }\n  static #_ = this.ɵfac = function OutlineAccordionComponent_Factory(t) {\n    return new (t || OutlineAccordionComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OutlineAccordionComponent,\n    selectors: [[\"app-outline-accordion\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[1, \"card\"], [1, \"card-header\"], [1, \"f-m-light\", \"mt-1\"], [1, \"card-header-right\"], [1, \"card-body\"], [\"id\", \"outlineaccordion\", \"ngbAccordion\", \"\", 1, \"accordion\", \"dark-accordion\", 3, \"closeOthers\"], [\"ngbAccordionItem\", \"\", 1, \"accordion-item\", \"accordion-wrapper\"], [\"id\", \"outlineaccordionone\", 1, \"accordion-header\"], [\"type\", \"button\", \"ngbAccordionButton\", \"\", 1, \"accordion-button\", \"collapsed\", \"bg-light-warning\", \"txt-warning\"], [3, \"icons\"], [\"id\", \"left-collapseOne\", \"ngbAccordionCollapse\", \"\", 1, \"accordion-collapse\", \"collapse\"], [\"ngbAccordionBody\", \"\", 1, \"accordion-body\"], [3, \"innerHTML\"], [1, \"txt-danger\"], [\"class\", \"accordion-item accordion-wrapper\", \"ngbAccordionItem\", \"\"]],\n    template: function OutlineAccordionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\");\n        i0.ɵɵtext(3, \"Outline accordion \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 2);\n        i0.ɵɵtext(5, \" make custom \");\n        i0.ɵɵelementStart(6, \"code\");\n        i0.ɵɵtext(7, \".accordion-wrapper\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \" class use to bring border-left side.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"div\", 5);\n        i0.ɵɵrepeaterCreate(12, OutlineAccordionComponent_For_13_Template, 9, 5, \"div\", 14, i0.ɵɵrepeaterTrackByIdentity);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"closeOthers\", true);\n        i0.ɵɵadvance();\n        i0.ɵɵrepeater(ctx.simpleAccordionData);\n      }\n    },\n    dependencies: [i1.FeatherIconsComponent, i2.NgbAccordionButton, i2.NgbAccordionDirective, i2.NgbAccordionItem, i2.NgbAccordionBody, i2.NgbAccordionCollapse],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Data","i0","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","allData_r1","title","ɵɵclassMap","ɵɵproperty","desc","ɵɵsanitizeHtml","OutlineAccordionComponent","constructor","simpleAccordionData","_","_2","selectors","decls","vars","consts","template","OutlineAccordionComponent_Template","rf","ctx","ɵɵrepeaterCreate","OutlineAccordionComponent_For_13_Template","ɵɵrepeaterTrackByIdentity","ɵɵrepeater"],"sources":["C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\ui-kits\\accordion\\outline-accordion\\outline-accordion.component.ts","C:\\Repository\\Jupiter\\juno-app\\src\\app\\components\\ui-kits\\accordion\\outline-accordion\\outline-accordion.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport * as Data from '../../../../shared/data/data/ui-kits/accordion';\n\n@Component({\n  selector: 'app-outline-accordion',\n  templateUrl: './outline-accordion.component.html',\n  styleUrls: ['./outline-accordion.component.scss']\n})\n\nexport class OutlineAccordionComponent {\n\n  public simpleAccordionData = Data.simpleAccordionData;\n\n}\n","<div class=\"card\">\n    <div class=\"card-header\">\n        <h4>Outline accordion </h4>\n        <p class=\"f-m-light mt-1\">\n            make custom <code>.accordion-wrapper</code> class use to bring border-left side.</p>\n        <div class=\"card-header-right\">\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div class=\"accordion dark-accordion\" id=\"outlineaccordion\" ngbAccordion [closeOthers]=\"true\">\n            @for (allData of simpleAccordionData; track allData) {\n            <div class=\"accordion-item accordion-wrapper\" ngbAccordionItem>\n                <h2 class=\"accordion-header\" id=\"outlineaccordionone\">\n                    <button class=\"accordion-button collapsed bg-light-warning txt-warning\" type=\"button\"\n                        ngbAccordionButton>{{allData.title}}\n                        <app-feather-icons [class]=\"'svg-color'\" [icons]=\"'chevron-down'\"></app-feather-icons>\n                    </button>\n                </h2>\n                <div class=\"accordion-collapse collapse\" id=\"left-collapseOne\" ngbAccordionCollapse>\n                    <div class=\"accordion-body\" ngbAccordionBody>\n                        <p [innerHTML]=\"allData.desc\">\n                            <em class=\"txt-danger\"></em>\n                        </p>\n                    </div>\n                </div>\n            </div>\n            }\n        </div>\n    </div>\n</div>"],"mappings":"AACA,OAAO,KAAKA,IAAI,MAAM,gDAAgD;;;;;;ICU1DC,EAAA,CAAAC,cAAA,aAA+D;IAGhCD,EAAA,CAAAE,MAAA,GACnB;IAAAF,EAAA,CAAAG,SAAA,2BAAsF;IAC1FH,EAAA,CAAAI,YAAA,EAAS;IAEbJ,EAAA,CAAAC,cAAA,cAAoF;IAGxED,EAAA,CAAAG,SAAA,aAA4B;IAChCH,EAAA,CAAAI,YAAA,EAAI;;;;IAReJ,EAAA,CAAAK,SAAA,GACnB;IADmBL,EAAA,CAAAM,kBAAA,KAAAC,UAAA,CAAAC,KAAA,MACnB;IAAmBR,EAAA,CAAAK,SAAA,EAAqB;IAArBL,EAAA,CAAAS,UAAA,aAAqB;IAACT,EAAA,CAAAU,UAAA,yBAAwB;IAK9DV,EAAA,CAAAK,SAAA,GAA0B;IAA1BL,EAAA,CAAAU,UAAA,cAAAH,UAAA,CAAAI,IAAA,EAAAX,EAAA,CAAAY,cAAA,CAA0B;;;ADXrD,OAAM,MAAOC,yBAAyB;EANtCC,YAAA;IAQS,KAAAC,mBAAmB,GAAGhB,IAAI,CAACgB,mBAAmB;;EAEtD,QAAAC,CAAA,G;qBAJYH,yBAAyB;EAAA;EAAA,QAAAI,EAAA,G;UAAzBJ,yBAAyB;IAAAK,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTtCxB,EAAA,CAAAC,cAAA,aAAkB;QAEND,EAAA,CAAAE,MAAA,yBAAkB;QAAAF,EAAA,CAAAI,YAAA,EAAK;QAC3BJ,EAAA,CAAAC,cAAA,WAA0B;QACtBD,EAAA,CAAAE,MAAA,oBAAY;QAAAF,EAAA,CAAAC,cAAA,WAAM;QAAAD,EAAA,CAAAE,MAAA,yBAAkB;QAAAF,EAAA,CAAAI,YAAA,EAAO;QAACJ,EAAA,CAAAE,MAAA,4CAAoC;QAAAF,EAAA,CAAAI,YAAA,EAAI;QACxFJ,EAAA,CAAAG,SAAA,aACM;QACVH,EAAA,CAAAI,YAAA,EAAM;QACNJ,EAAA,CAAAC,cAAA,cAAuB;QAEfD,EAAA,CAAA0B,gBAAA,KAAAC,yCAAA,mBAAA3B,EAAA,CAAA4B,yBAAA,CAgBC;QACL5B,EAAA,CAAAI,YAAA,EAAM;;;QAlBmEJ,EAAA,CAAAK,SAAA,IAAoB;QAApBL,EAAA,CAAAU,UAAA,qBAAoB;QACzFV,EAAA,CAAAK,SAAA,EAgBC;QAhBDL,EAAA,CAAA6B,UAAA,CAAAJ,GAAA,CAAAV,mBAAA,CAgBC"},"metadata":{},"sourceType":"module","externalDependencies":[]}