{"ast":null,"code":"import _asyncToGenerator from \"C:/Repository/Jupiter/juno-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, ApplicationRef, createComponent, forwardRef, ViewEncapsulation, Injectable, Optional, Pipe, HostListener, HostBinding, NgModule, InjectionToken } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormGroup, FormControl, Validators as Validators$1, ReactiveFormsModule } from '@angular/forms';\nimport { Subject, isObservable, of, fromEvent, asyncScheduler } from 'rxjs';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { NgxEditorError, isNil } from 'ngx-editor/utils';\nimport { Plugin, PluginKey, NodeSelection, Selection, EditorState } from 'prosemirror-state';\nimport { DecorationSet, Decoration, EditorView } from 'prosemirror-view';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Fragment, Slice, DOMSerializer, DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor/schema';\nexport { marks, nodes, schema } from 'ngx-editor/schema';\nimport { toggleMark, lift, wrapIn, setBlockType, newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock, chainCommands, exitCode, baseKeymap } from 'prosemirror-commands';\nimport { applyMark, removeLink, removeMark } from 'ngx-editor/commands';\nimport { isMarkActive, isNodeActive, canInsert, getSelectionNodes, getSelectionMarks, markInputRule } from 'ngx-editor/helpers';\nimport { liftListItem, wrapInList, splitListItem, sinkListItem } from 'prosemirror-schema-list';\nimport * as i1 from '@angular/platform-browser';\nimport { computePosition, offset, autoPlacement, detectOverflow } from '@floating-ui/dom';\nimport { keymap } from 'prosemirror-keymap';\nimport { undo, redo, history } from 'prosemirror-history';\nimport { wrappingInputRule, textblockTypeInputRule, smartQuotes, ellipsis, emDash, inputRules } from 'prosemirror-inputrules';\nconst _c0 = [\"imgEl\"];\nfunction ImageViewComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 4)(1, \"span\", 5);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.startResizing($event, \"left\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 6);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_2_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.startResizing($event, \"right\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 7);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.startResizing($event, \"left\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 8);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.startResizing($event, \"right\"));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c1 = a0 => ({\n  \"NgxEditor__Resizer--Active\": a0\n});\nconst _c2 = [\"ngxEditor\"];\nconst _c3 = [\"*\"];\nfunction LinkComponent_div_3_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r1.href.errors == null ? null : ctx_r1.href.errors[\"pattern\"]) && \"Please enter valid url.\", \" \");\n  }\n}\nfunction LinkComponent_div_3_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r2.text.errors == null ? null : ctx_r2.text.errors[\"required\"]) && \"This is required\", \" \");\n  }\n}\nfunction LinkComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function LinkComponent_div_3_Template_form_ngSubmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.insertLink($event));\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"div\", 5)(4, \"label\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 7);\n    i0.ɵɵtemplate(8, LinkComponent_div_3_div_8_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 5)(11, \"label\", 6);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 9);\n    i0.ɵɵtemplate(15, LinkComponent_div_3_div_15_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 4)(17, \"div\", 5)(18, \"label\");\n    i0.ɵɵelement(19, \"input\", 10);\n    i0.ɵɵtext(20);\n    i0.ɵɵpipe(21, \"async\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"button\", 11);\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"async\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 8, ctx_r0.getLabel(\"url\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.href.touched && ctx_r0.href.invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 10, ctx_r0.getLabel(\"text\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.text.touched && ctx_r0.text.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(21, 12, ctx_r0.getLabel(\"openInNewTab\")), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.form.valid);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(24, 14, ctx_r0.getLabel(\"insert\")));\n  }\n}\nconst _c4 = (a0, a1) => ({\n  \"NgxEditor__Dropdown--Active\": a0,\n  \"NgxEditor--Disabled\": a1\n});\nfunction DropdownComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"mousedown\", function DropdownComponent_div_3_div_1_Template_div_mousedown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.onClick($event, item_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c4, item_r2 === ctx_r1.activeItem, ctx_r1.disabledItems.includes(item_r2)));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, ctx_r1.getName(item_r2)), \" \");\n  }\n}\nfunction DropdownComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, DropdownComponent_div_3_div_1_Template, 3, 7, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.items)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\nfunction ImageComponent_div_3_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r1.src.errors == null ? null : ctx_r1.src.errors[\"pattern\"]) && \"Please enter valid url.\", \" \");\n  }\n}\nfunction ImageComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function ImageComponent_div_3_Template_form_ngSubmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.insertLink($event));\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"div\", 5)(4, \"label\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 7);\n    i0.ɵɵtemplate(8, ImageComponent_div_3_div_8_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 4)(10, \"div\", 5)(11, \"label\", 6);\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 4)(16, \"div\", 5)(17, \"label\", 6);\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"input\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"button\", 11);\n    i0.ɵɵtext(22);\n    i0.ɵɵpipe(23, \"async\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 7, ctx_r0.getLabel(\"url\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.src.touched && ctx_r0.src.invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(13, 9, ctx_r0.getLabel(\"altText\")));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(19, 11, ctx_r0.getLabel(\"title\")));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.form.valid || !ctx_r0.form.dirty);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 13, ctx_r0.getLabel(\"insert\")));\n  }\n}\nconst _c5 = (a0, a1) => ({\n  backgroundColor: a0,\n  color: a1\n});\nconst _c6 = a0 => ({\n  \"NgxEditor__Color--Active\": a0\n});\nfunction ColorPickerComponent_div_3_div_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_div_3_div_1_button_1_Template_button_mousedown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const color_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r5.onColorSelect($event, color_r4));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const color_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(3, _c5, color_r4, ctx_r3.getContrastYIQ(color_r4)))(\"title\", color_r4)(\"ngClass\", i0.ɵɵpureFunction1(6, _c6, ctx_r3.activeColors.includes(color_r4)));\n  }\n}\nfunction ColorPickerComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, ColorPickerComponent_div_3_div_1_button_1_Template, 1, 8, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const colorGroup_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", colorGroup_r2)(\"ngForTrackBy\", ctx_r1.trackByIndex);\n  }\n}\nfunction ColorPickerComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, ColorPickerComponent_div_3_div_1_Template, 2, 2, \"div\", 3);\n    i0.ɵɵelementStart(2, \"button\", 4);\n    i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_div_3_Template_button_mousedown_2_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.remove($event));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"async\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.presets)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.isActive);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 4, ctx_r0.getLabel(\"remove\")), \" \");\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_toggle_command_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-toggle-command\", 7);\n  }\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r7.iconContainerClass);\n    i0.ɵɵproperty(\"toolbarItem\", item_r5);\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_insert_command_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-insert-command\", 7);\n  }\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r8.iconContainerClass);\n    i0.ɵɵproperty(\"toolbarItem\", item_r5);\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_link_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-link\");\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r9.iconContainerClass);\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_image_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-image\");\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r10.iconContainerClass);\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_ng_container_5_ngx_dropdown_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-dropdown\", 9);\n  }\n  if (rf & 2) {\n    const dropdownItem_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r17.dropdownContainerClass);\n    i0.ɵɵproperty(\"group\", dropdownItem_r18.key)(\"items\", dropdownItem_r18.value);\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_1_ng_container_1_ng_container_5_ngx_dropdown_1_Template, 1, 4, \"ngx-dropdown\", 8);\n    i0.ɵɵpipe(2, \"keyvalue\");\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r11.getDropdownItems(item_r5)))(\"ngForTrackBy\", ctx_r11.trackByIndex);\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-color-picker\", 10);\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r12.iconContainerClass);\n    i0.ɵɵproperty(\"presets\", ctx_r12.presets);\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-color-picker\", 11);\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r13.iconContainerClass);\n    i0.ɵɵproperty(\"presets\", ctx_r13.presets);\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r14.seperatorClass);\n  }\n}\nfunction MenuComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_1_ng_container_1_ngx_toggle_command_1_Template, 1, 3, \"ngx-toggle-command\", 3)(2, MenuComponent_ng_container_1_ng_container_1_ngx_insert_command_2_Template, 1, 3, \"ngx-insert-command\", 3)(3, MenuComponent_ng_container_1_ng_container_1_ngx_link_3_Template, 1, 2, \"ngx-link\", 4)(4, MenuComponent_ng_container_1_ng_container_1_ngx_image_4_Template, 1, 2, \"ngx-image\", 4)(5, MenuComponent_ng_container_1_ng_container_1_ng_container_5_Template, 3, 4, \"ng-container\", 2)(6, MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_6_Template, 1, 3, \"ngx-color-picker\", 5)(7, MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_7_Template, 1, 3, \"ngx-color-picker\", 6)(8, MenuComponent_ng_container_1_ng_container_1_div_8_Template, 1, 2, \"div\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const lastItem_r6 = ctx.last;\n    const lastToolbarItem_r3 = i0.ɵɵnextContext().last;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.toggleCommands.includes(item_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.insertCommands.includes(item_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"link\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"image\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isDropDown(item_r5));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"text_color\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"background_color\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", lastItem_r6 && !lastToolbarItem_r3);\n  }\n}\nfunction MenuComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_1_ng_container_1_Template, 9, 8, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const toolbarItem_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", toolbarItem_r2)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\nfunction MenuComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customMenuRef);\n  }\n}\nconst _c7 = (a0, a1) => ({\n  \"NgxEditor--Disabled\": a0,\n  \"NgxEditor__MenuBar--Reverse\": a1\n});\nconst _c8 = (a0, a1) => ({\n  \"NgxBubbleMenu__Icon--Active\": a0,\n  \"NgxEditor--Disabled\": a1\n});\nfunction BubbleComponent_ng_container_0_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"mousedown\", function BubbleComponent_ng_container_0_ng_container_1_div_1_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const item_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onClick($event, item_r4));\n    });\n    i0.ɵɵpipe(1, \"async\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c8, ctx_r6.activeItems.includes(item_r4), !ctx_r6.execulableItems.includes(item_r4)))(\"title\", i0.ɵɵpipeBind1(1, 3, ctx_r6.getTitle(item_r4)))(\"innerHTML\", ctx_r6.getIcon(item_r4), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction BubbleComponent_ng_container_0_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 4);\n  }\n}\nfunction BubbleComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BubbleComponent_ng_container_0_ng_container_1_div_1_Template, 2, 8, \"div\", 1)(2, BubbleComponent_ng_container_0_ng_container_1_div_2_Template, 1, 0, \"div\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const lastItem_r5 = ctx.last;\n    const lastToolbarItem_r2 = i0.ɵɵnextContext().last;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.toggleCommands.includes(item_r4));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", lastItem_r5 && !lastToolbarItem_r2);\n  }\n}\nfunction BubbleComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BubbleComponent_ng_container_0_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const toolbarItem_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", toolbarItem_r1)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\nfunction FloatingMenuComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"ngx-bubble\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"editor\", ctx_r1.editor);\n  }\n}\nconst editablePlugin = (editable = true) => {\n  return new Plugin({\n    key: new PluginKey('editable'),\n    state: {\n      init() {\n        return editable;\n      },\n      apply(tr, previousVal) {\n        return tr.getMeta('UPDATE_EDITABLE') ?? previousVal;\n      }\n    },\n    props: {\n      editable(state) {\n        return this.getState(state);\n      },\n      attributes(state) {\n        const isEnabled = this.getState(state);\n        if (isEnabled) {\n          return null;\n        }\n        return {\n          class: 'NgxEditor__Content--Disabled'\n        };\n      }\n    }\n  });\n};\nconst PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';\nconst placeholderPlugin = text => {\n  return new Plugin({\n    key: new PluginKey('placeholder'),\n    state: {\n      init() {\n        return text ?? '';\n      },\n      apply(tr, previousVal) {\n        const placeholder = tr.getMeta('UPDATE_PLACEHOLDER') ?? previousVal;\n        return placeholder;\n      }\n    },\n    props: {\n      decorations(state) {\n        const {\n          doc\n        } = state;\n        const {\n          textContent,\n          childCount\n        } = doc;\n        const placeholder = this.getState(state);\n        if (!placeholder || childCount > 1) {\n          return DecorationSet.empty;\n        }\n        const decorations = [];\n        const decorate = (node, pos) => {\n          if (node.type.isBlock && node.childCount === 0 && textContent.length === 0) {\n            const from = pos;\n            const to = pos + node.nodeSize;\n            const placeholderNode = Decoration.node(from, to, {\n              'class': PLACEHOLDER_CLASSNAME,\n              'data-placeholder': placeholder,\n              'data-align': node.attrs['align'] ?? null\n            });\n            decorations.push(placeholderNode);\n          }\n          return false;\n        };\n        doc.descendants(decorate);\n        return DecorationSet.create(doc, decorations);\n      }\n    }\n  });\n};\nconst attributesPlugin = (attributes = {}) => {\n  return new Plugin({\n    key: new PluginKey('attributes'),\n    props: {\n      attributes\n    }\n  });\n};\nconst focusPlugin = cb => {\n  return new Plugin({\n    key: new PluginKey('focus'),\n    props: {\n      handleDOMEvents: {\n        focus: () => {\n          cb();\n          return false;\n        }\n      }\n    }\n  });\n};\nconst blurPlugin = cb => {\n  return new Plugin({\n    key: new PluginKey('blur'),\n    props: {\n      handleDOMEvents: {\n        blur: () => {\n          cb();\n          return false;\n        }\n      }\n    }\n  });\n};\nclass ImageViewComponent {\n  constructor() {\n    this.alt = '';\n    this.title = '';\n    this.outerWidth = '';\n    this.selected = false;\n    this.imageResize = new EventEmitter();\n  }\n  startResizing(e, direction) {\n    e.preventDefault();\n    this.resizeImage(e, direction);\n  }\n  resizeImage(evt, direction) {\n    const startX = evt.pageX;\n    const startWidth = this.imgEl.nativeElement.clientWidth;\n    const isLeftResize = direction === 'left';\n    const {\n      width\n    } = window.getComputedStyle(this.view.dom);\n    const editorWidth = parseInt(width, 10);\n    const onMouseMove = e => {\n      const currentX = e.pageX;\n      const diffInPx = currentX - startX;\n      const computedWidth = isLeftResize ? startWidth - diffInPx : startWidth + diffInPx;\n      // prevent image overflow the editor\n      // prevent resizng below 20px\n      if (computedWidth > editorWidth || computedWidth < 20) {\n        return;\n      }\n      this.outerWidth = `${computedWidth}px`;\n    };\n    const onMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      this.imageResize.emit();\n    };\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  }\n  static #_ = this.ɵfac = function ImageViewComponent_Factory(t) {\n    return new (t || ImageViewComponent)();\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ImageViewComponent,\n    selectors: [[\"ngx-image-view\"]],\n    viewQuery: function ImageViewComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.imgEl = _t.first);\n      }\n    },\n    inputs: {\n      src: \"src\",\n      alt: \"alt\",\n      title: \"title\",\n      outerWidth: \"outerWidth\",\n      selected: \"selected\",\n      view: \"view\"\n    },\n    outputs: {\n      imageResize: \"imageResize\"\n    },\n    decls: 4,\n    vars: 9,\n    consts: [[1, \"NgxEditor__ImageWrapper\", 3, \"ngClass\"], [\"class\", \"NgxEditor__ResizeHandle\", 4, \"ngIf\"], [3, \"src\", \"alt\", \"title\"], [\"imgEl\", \"\"], [1, \"NgxEditor__ResizeHandle\"], [1, \"NgxEditor__ResizeHandle--TL\", 3, \"mousedown\"], [1, \"NgxEditor__ResizeHandle--TR\", 3, \"mousedown\"], [1, \"NgxEditor__ResizeHandle--BL\", 3, \"mousedown\"], [1, \"NgxEditor__ResizeHandle--BR\", 3, \"mousedown\"]],\n    template: function ImageViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"span\", 0);\n        i0.ɵɵtemplate(1, ImageViewComponent_span_1_Template, 5, 0, \"span\", 1);\n        i0.ɵɵelement(2, \"img\", 2, 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleProp(\"width\", ctx.outerWidth);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx.selected));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.selected);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"src\", ctx.src, i0.ɵɵsanitizeUrl)(\"alt\", ctx.alt)(\"title\", ctx.title);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgIf],\n    styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}img[_ngcontent-%COMP%]{width:100%;height:100%}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active[_ngcontent-%COMP%]{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TL[_ngcontent-%COMP%], .NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BL[_ngcontent-%COMP%], .NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TR[_ngcontent-%COMP%], .NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BR[_ngcontent-%COMP%]{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BR[_ngcontent-%COMP%]{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TR[_ngcontent-%COMP%]{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TL[_ngcontent-%COMP%]{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BL[_ngcontent-%COMP%]{bottom:-5px;left:-5px;cursor:sw-resize}\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImageViewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-image-view',\n      template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\",\n      styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"]\n    }]\n  }], null, {\n    src: [{\n      type: Input\n    }],\n    alt: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    outerWidth: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    imageResize: [{\n      type: Output\n    }],\n    imgEl: [{\n      type: ViewChild,\n      args: ['imgEl', {\n        static: true\n      }]\n    }]\n  });\n})();\nclass ImageRezieView {\n  constructor(node, view, getPos, injector) {\n    this.updating = false;\n    this.handleResize = () => {\n      if (this.updating) {\n        return;\n      }\n      const {\n        state,\n        dispatch\n      } = this.view;\n      const {\n        tr\n      } = state;\n      const transaction = tr.setNodeMarkup(this.getPos(), undefined, {\n        ...this.node.attrs,\n        width: this.imageComponentRef.instance.outerWidth\n      });\n      const resolvedPos = transaction.doc.resolve(this.getPos());\n      const newSelection = new NodeSelection(resolvedPos);\n      transaction.setSelection(newSelection);\n      dispatch(transaction);\n    };\n    this.applicationRef = injector.get(ApplicationRef);\n    // create component ref\n    this.imageComponentRef = createComponent(ImageViewComponent, {\n      environmentInjector: this.applicationRef.injector\n    });\n    // Attach to the view so that the change detector knows to run\n    this.applicationRef.attachView(this.imageComponentRef.hostView);\n    this.setNodeAttributes(node.attrs);\n    this.imageComponentRef.instance.view = view;\n    this.dom = this.imageComponentRef.location.nativeElement;\n    this.view = view;\n    this.node = node;\n    this.getPos = getPos;\n    this.resizeSubscription = this.imageComponentRef.instance.imageResize.subscribe(() => {\n      this.handleResize();\n    });\n  }\n  computeChanges(prevAttrs, newAttrs) {\n    return JSON.stringify(prevAttrs) === JSON.stringify(newAttrs);\n  }\n  setNodeAttributes(attrs) {\n    this.imageComponentRef.instance.src = attrs['src'];\n    this.imageComponentRef.instance.alt = attrs['alt'];\n    this.imageComponentRef.instance.title = attrs['title'];\n    this.imageComponentRef.instance.outerWidth = attrs['width'];\n  }\n  update(node) {\n    if (node.type !== this.node.type) {\n      return false;\n    }\n    this.node = node;\n    const changed = this.computeChanges(this.node.attrs, node.attrs);\n    if (changed) {\n      this.updating = true;\n      this.setNodeAttributes(node.attrs);\n      this.updating = false;\n    }\n    return true;\n  }\n  ignoreMutation() {\n    return true;\n  }\n  selectNode() {\n    this.imageComponentRef.instance.selected = true;\n  }\n  deselectNode() {\n    this.imageComponentRef.instance.selected = false;\n  }\n  destroy() {\n    this.resizeSubscription.unsubscribe();\n    this.applicationRef.detachView(this.imageComponentRef.hostView);\n  }\n}\nconst imageResizePlugin = injector => {\n  return new Plugin({\n    key: new PluginKey('image-resize'),\n    props: {\n      nodeViews: {\n        image: (node, view, getPos) => {\n          return new ImageRezieView(node, view, getPos, injector);\n        }\n      }\n    }\n  });\n};\nconst HTTP_LINK_REGEX = /(?:https?:\\/\\/)?[\\w-]+(?:\\.[\\w-]+)+\\.?(?:\\d+)?(?:\\/\\S*)?$/;\nconst linkify = fragment => {\n  const linkified = [];\n  fragment.forEach(child => {\n    if (child.isText) {\n      const text = child.text;\n      let pos = 0;\n      const match = HTTP_LINK_REGEX.exec(text);\n      if (match) {\n        const start = match.index;\n        const end = start + match[0].length;\n        const {\n          link\n        } = child.type.schema.marks;\n        if (start > 0) {\n          linkified.push(child.cut(pos, start));\n        }\n        const urlText = text.slice(start, end);\n        linkified.push(child.cut(start, end).mark(link.create({\n          href: urlText\n        }).addToSet(child.marks)));\n        pos = end;\n      }\n      if (pos < text.length) {\n        linkified.push(child.cut(pos));\n      }\n    } else {\n      linkified.push(child.copy(linkify(child.content)));\n    }\n  });\n  return Fragment.fromArray(linkified);\n};\nconst linkifyPlugin = () => {\n  return new Plugin({\n    key: new PluginKey('linkify'),\n    props: {\n      transformPasted: slice => {\n        return new Slice(linkify(slice.content), slice.openStart, slice.openEnd);\n      }\n    }\n  });\n};\nconst isString = value => {\n  return typeof value === 'string';\n};\nconst getTrustedTypes = () => {\n  return window.trustedTypes;\n};\nconst isTrustedHtml = value => {\n  return getTrustedTypes()?.isHTML(value) ?? false;\n};\nconst isHtml = value => {\n  return isString(value) || isTrustedHtml(value);\n};\nconst emptyDoc = {\n  type: 'doc',\n  content: [{\n    type: 'paragraph'\n  }]\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst toHTML = (json, inputSchema) => {\n  const schema$1 = inputSchema ?? schema;\n  const contentNode = schema$1.nodeFromJSON(json);\n  const html = DOMSerializer.fromSchema(schema$1).serializeFragment(contentNode.content);\n  const div = document.createElement('div');\n  div.appendChild(html);\n  return div.innerHTML;\n};\nconst toDoc = (html, inputSchema) => {\n  const schema$1 = inputSchema ?? schema;\n  const el = document.createElement('div');\n  el.innerHTML = html;\n  return DOMParser.fromSchema(schema$1).parse(el).toJSON();\n};\nconst parseContent = (value, schema) => {\n  if (!value) {\n    return schema.nodeFromJSON(emptyDoc);\n  }\n  if (!isHtml(value)) {\n    return schema.nodeFromJSON(value);\n  }\n  const docJson = toDoc(value, schema);\n  return schema.nodeFromJSON(docJson);\n};\nclass NgxEditorComponent {\n  constructor(renderer, injector, elementRef) {\n    this.renderer = renderer;\n    this.injector = injector;\n    this.elementRef = elementRef;\n    this.placeholder = 'Type Here...';\n    this.focusOut = new EventEmitter();\n    this.focusIn = new EventEmitter();\n    this.unsubscribe = new Subject();\n    this.onChange = () => {};\n    this.onTouched = () => {};\n  }\n  writeValue(value) {\n    if (!this.outputFormat && isHtml(value)) {\n      this.outputFormat = 'html';\n    }\n    this.editor.setContent(value ?? emptyDoc);\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.setMeta('UPDATE_EDITABLE', !isDisabled);\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n  handleChange(jsonDoc) {\n    if (this.outputFormat === 'html') {\n      const html = toHTML(jsonDoc, this.editor.schema);\n      this.onChange(html);\n      return;\n    }\n    this.onChange(jsonDoc);\n  }\n  setMeta(key, value) {\n    const {\n      dispatch,\n      state: {\n        tr\n      }\n    } = this.editor.view;\n    dispatch(tr.setMeta(key, value));\n  }\n  setPlaceholder(placeholder) {\n    this.setMeta('UPDATE_PLACEHOLDER', placeholder);\n  }\n  registerPlugins() {\n    this.editor.registerPlugin(editablePlugin());\n    this.editor.registerPlugin(placeholderPlugin(this.placeholder));\n    this.editor.registerPlugin(attributesPlugin({\n      class: 'NgxEditor__Content'\n    }));\n    this.editor.registerPlugin(focusPlugin(() => {\n      this.focusIn.emit();\n    }));\n    this.editor.registerPlugin(blurPlugin(() => {\n      this.focusOut.emit();\n      this.onTouched();\n    }));\n    if (this.editor.features.resizeImage) {\n      this.editor.registerPlugin(imageResizePlugin(this.injector));\n    }\n    if (this.editor.features.linkOnPaste) {\n      this.editor.registerPlugin(linkifyPlugin());\n    }\n  }\n  ngOnInit() {\n    if (!this.editor) {\n      throw new NgxEditorError('Required editor instance for initializing editor component');\n    }\n    this.registerPlugins();\n    this.renderer.appendChild(this.ngxEditor.nativeElement, this.editor.view.dom);\n    this.editor.valueChanges.pipe(takeUntil(this.unsubscribe)).subscribe(jsonDoc => {\n      this.handleChange(jsonDoc);\n    });\n  }\n  ngOnChanges(changes) {\n    if (changes['placeholder'] && !changes['placeholder'].isFirstChange()) {\n      this.setPlaceholder(changes['placeholder'].currentValue);\n    }\n  }\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n  static #_ = this.ɵfac = function NgxEditorComponent_Factory(t) {\n    return new (t || NgxEditorComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxEditorComponent,\n    selectors: [[\"ngx-editor\"]],\n    viewQuery: function NgxEditorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c2, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngxEditor = _t.first);\n      }\n    },\n    inputs: {\n      editor: \"editor\",\n      outputFormat: \"outputFormat\",\n      placeholder: \"placeholder\"\n    },\n    outputs: {\n      focusOut: \"focusOut\",\n      focusIn: \"focusIn\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxEditorComponent),\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c3,\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"NgxEditor\"], [\"ngxEditor\", \"\"]],\n    template: function NgxEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active,.NgxEditor__MenuItem .NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown .NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown .NgxEditor__Dropdown--Open{color:#1a73e8;background-color:#e8f0fe}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"],\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-editor',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgxEditorComponent),\n        multi: true\n      }],\n      encapsulation: ViewEncapsulation.None,\n      template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\",\n      styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active,.NgxEditor__MenuItem .NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown .NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown .NgxEditor__Dropdown--Open{color:#1a73e8;background-color:#e8f0fe}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    ngxEditor: [{\n      type: ViewChild,\n      args: ['ngxEditor', {\n        static: true\n      }]\n    }],\n    editor: [{\n      type: Input\n    }],\n    outputFormat: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    focusOut: [{\n      type: Output\n    }],\n    focusIn: [{\n      type: Output\n    }]\n  });\n})();\nclass MenuService {\n  constructor() {\n    this.customMenuRefChange = new Subject();\n  }\n  setCustomMenuRef(c) {\n    this.customMenuRefChange.next(c);\n  }\n  static #_ = this.ɵfac = function MenuService_Factory(t) {\n    return new (t || MenuService)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MenuService,\n    factory: MenuService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass Mark {\n  constructor(name) {\n    this.name = name;\n  }\n  apply() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.marks[this.name];\n      if (!type) {\n        return false;\n      }\n      return applyMark(type)(state, dispatch);\n    };\n  }\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.marks[this.name];\n      if (!type) {\n        return false;\n      }\n      return toggleMark(type)(state, dispatch);\n    };\n  }\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = schema.marks[this.name];\n    if (!type) {\n      return false;\n    }\n    return isMarkActive(state, type);\n  }\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n}\nclass Blockqote {\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.nodes['blockquote'];\n      if (!type) {\n        return false;\n      }\n      if (this.isActive(state)) {\n        return lift(state, dispatch);\n      }\n      return wrapIn(type)(state, dispatch);\n    };\n  }\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = schema.nodes['blockquote'];\n    if (!type) {\n      return false;\n    }\n    return isNodeActive(state, type);\n  }\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n}\nclass HorizontalRule {\n  insert() {\n    return (state, dispatch) => {\n      const {\n        schema,\n        tr\n      } = state;\n      const type = schema.nodes['horizontal_rule'];\n      if (!type) {\n        return false;\n      }\n      dispatch(tr.replaceSelectionWith(type.create()).scrollIntoView());\n      return true;\n    };\n  }\n  canExecute(state) {\n    return canInsert(state, state.schema.nodes['horizontal_rule']);\n  }\n}\nclass ListItem {\n  constructor(isBulletList = false) {\n    this.isBulletList = false;\n    this.isBulletList = isBulletList;\n  }\n  getType(schema) {\n    return this.isBulletList ? schema.nodes['bullet_list'] : schema.nodes['ordered_list'];\n  }\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = this.getType(schema);\n      if (!type) {\n        return false;\n      }\n      if (this.isActive(state)) {\n        return liftListItem(schema.nodes['list_item'])(state, dispatch);\n      }\n      return wrapInList(type)(state, dispatch);\n    };\n  }\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = this.getType(schema);\n    if (!type) {\n      return false;\n    }\n    return isNodeActive(state, type);\n  }\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n}\nclass Heading {\n  constructor(level) {\n    this.level = level;\n  }\n  apply() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.nodes['heading'];\n      if (!type) {\n        return false;\n      }\n      return setBlockType(type)(state, dispatch);\n    };\n  }\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema,\n        selection,\n        doc\n      } = state;\n      const type = schema.nodes['heading'];\n      if (!type) {\n        return false;\n      }\n      const nodePos = selection.$from.before(1);\n      const node = doc.nodeAt(nodePos);\n      const attrs = node?.attrs ?? {};\n      if (this.isActive(state)) {\n        return setBlockType(schema.nodes['paragraph'], attrs)(state, dispatch);\n      }\n      return setBlockType(type, {\n        ...attrs,\n        level: this.level\n      })(state, dispatch);\n    };\n  }\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const nodesInSelection = getSelectionNodes(state);\n    const type = schema.nodes['heading'];\n    if (!type) {\n      return false;\n    }\n    const supportedNodes = [type, schema.nodes['text'], schema.nodes['blockquote']];\n    // heading is a text node\n    // don't mark as active when it has more nodes\n    const nodes = nodesInSelection.filter(node => {\n      return supportedNodes.includes(node.type);\n    });\n    const acitveNode = nodes.find(node => {\n      return node.attrs['level'] === this.level;\n    });\n    return Boolean(acitveNode);\n  }\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n}\nclass TextAlign {\n  constructor(align) {\n    this.align = align;\n  }\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        doc,\n        selection,\n        tr,\n        schema\n      } = state;\n      const {\n        from,\n        to\n      } = selection;\n      let applicable = false;\n      doc.nodesBetween(from, to, (node, pos) => {\n        const nodeType = node.type;\n        if ([schema.nodes['paragraph'], schema.nodes['heading']].includes(nodeType)) {\n          applicable = true;\n          tr.setNodeMarkup(pos, nodeType, {\n            ...node.attrs,\n            align: this.align\n          });\n        }\n        return true;\n      });\n      if (!applicable) {\n        return false;\n      }\n      if (tr.docChanged) {\n        dispatch?.(tr);\n      }\n      return true;\n    };\n  }\n  isActive(state) {\n    const nodes = getSelectionNodes(state);\n    const active = nodes.find(node => {\n      return node.attrs['align'] === this.align;\n    });\n    return Boolean(active);\n  }\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n}\nconst defaultOptions = {\n  strict: true\n};\nlet Link$1 = class Link {\n  update(attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        selection\n      } = state;\n      const type = schema.marks['link'];\n      if (!type) {\n        return false;\n      }\n      if (selection.empty) {\n        return false;\n      }\n      return toggleMark(type, attrs)(state, dispatch);\n    };\n  }\n  insert(text, attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        tr\n      } = state;\n      const type = schema.marks['link'];\n      if (!type) {\n        return false;\n      }\n      const linkAttrs = {\n        href: attrs.href,\n        title: attrs.title ?? text,\n        target: attrs.target ?? '_blank'\n      };\n      const node = schema.text(text, [schema.marks['link'].create(linkAttrs)]);\n      tr.replaceSelectionWith(node, false).scrollIntoView();\n      if (tr.docChanged) {\n        dispatch?.(tr);\n        return true;\n      }\n      return false;\n    };\n  }\n  isActive(state, options = defaultOptions) {\n    if (options.strict) {\n      return true;\n    }\n    const {\n      schema\n    } = state;\n    const type = schema.marks['link'];\n    if (!type) {\n      return false;\n    }\n    return isMarkActive(state, type);\n  }\n  remove(state, dispatch) {\n    return removeLink()(state, dispatch);\n  }\n  canExecute(state) {\n    const testAttrs = {\n      href: ''\n    };\n    return this.insert('Exec', testAttrs)(state) || this.update(testAttrs)(state);\n  }\n};\nlet Image$1 = class Image {\n  insert(src, attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        tr,\n        selection\n      } = state;\n      const type = schema.nodes['image'];\n      if (!type) {\n        return false;\n      }\n      const imageAttrs = {\n        width: null,\n        src,\n        ...attrs\n      };\n      if (!imageAttrs.width && selection instanceof NodeSelection && selection.node.type === type) {\n        imageAttrs.width = selection.node.attrs['width'];\n      }\n      tr.replaceSelectionWith(type.createAndFill(imageAttrs));\n      const resolvedPos = tr.doc.resolve(tr.selection.anchor - tr.selection.$anchor.nodeBefore.nodeSize);\n      tr.setSelection(new NodeSelection(resolvedPos)).scrollIntoView();\n      if (tr.docChanged) {\n        dispatch?.(tr);\n        return true;\n      }\n      return false;\n    };\n  }\n  isActive(state) {\n    const {\n      selection\n    } = state;\n    if (selection instanceof NodeSelection) {\n      return selection.node.type.name === 'image';\n    }\n    return false;\n  }\n};\nlet TextColor$1 = class TextColor {\n  constructor(name, attrName = 'color') {\n    this.name = name;\n    this.attrName = attrName;\n  }\n  apply(attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        selection,\n        doc\n      } = state;\n      const type = schema.marks[this.name];\n      if (!type) {\n        return false;\n      }\n      const {\n        from,\n        to,\n        empty\n      } = selection;\n      if (!empty && from + 1 === to) {\n        const node = doc.nodeAt(from);\n        if (node?.isAtom && !node.isText && node.isLeaf) {\n          // An atomic node (e.g. Image) is selected.\n          return false;\n        }\n      }\n      return applyMark(type, attrs)(state, dispatch);\n    };\n  }\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = schema.marks[this.name];\n    if (!type) {\n      return false;\n    }\n    return isMarkActive(state, type);\n  }\n  getActiveColors(state) {\n    if (!this.isActive(state)) {\n      return [];\n    }\n    const {\n      schema\n    } = state;\n    const marks = getSelectionMarks(state);\n    const colors = marks.filter(mark => mark.type === schema.marks[this.name]).map(mark => {\n      return mark.attrs[this.attrName];\n    }).filter(Boolean);\n    return colors;\n  }\n  remove() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.marks[this.name];\n      if (!type) {\n        return false;\n      }\n      return removeMark(type)(state, dispatch);\n    };\n  }\n  canExecute(state) {\n    const attrs = this.name === 'text_color' ? {\n      color: ''\n    } : {\n      backgroundColor: ''\n    };\n    return this.apply(attrs)(state);\n  }\n};\nconst SAFE_MARKS = ['link'];\nclass FormatClear {\n  insert() {\n    return (state, dispatch) => {\n      const {\n        tr\n      } = state;\n      const {\n        ranges,\n        empty\n      } = tr.selection;\n      if (empty) {\n        return true;\n      }\n      Object.entries(state.schema.marks).forEach(([markType, mark]) => {\n        if (SAFE_MARKS.includes(markType)) {\n          return;\n        }\n        ranges.forEach(range => {\n          tr.removeMark(range.$from.pos, range.$to.pos, mark);\n        });\n      });\n      dispatch(tr);\n      return true;\n    };\n  }\n  canExecute() {\n    return true;\n  }\n}\nconst STRONG = new Mark('strong');\nconst EM = new Mark('em');\nconst CODE = new Mark('code');\nconst UNDERLINE = new Mark('u');\nconst STRIKE = new Mark('s');\nconst BLOCKQUOTE = new Blockqote();\nconst HORIZONTAL_RULE = new HorizontalRule();\nconst FORMAT_CLEAR = new FormatClear();\nconst UL = new ListItem(true);\nconst OL = new ListItem(false);\nconst H1 = new Heading(1);\nconst H2 = new Heading(2);\nconst H3 = new Heading(3);\nconst H4 = new Heading(4);\nconst H5 = new Heading(5);\nconst H6 = new Heading(6);\nconst ALIGN_LEFT = new TextAlign('left');\nconst ALIGN_CENTER = new TextAlign('center');\nconst ALIGN_RIGHT = new TextAlign('right');\nconst ALIGN_JUSTIFY = new TextAlign('justify');\nconst LINK = new Link$1();\nconst IMAGE = new Image$1();\nconst TEXT_COLOR = new TextColor$1('text_color', 'color');\nconst TEXT_BACKGROUND_COLOR = new TextColor$1('text_background_color', 'backgroundColor');\nconst ToggleCommands = {\n  bold: STRONG,\n  italic: EM,\n  code: CODE,\n  underline: UNDERLINE,\n  strike: STRIKE,\n  blockquote: BLOCKQUOTE,\n  bullet_list: UL,\n  ordered_list: OL,\n  h1: H1,\n  h2: H2,\n  h3: H3,\n  h4: H4,\n  h5: H5,\n  h6: H6,\n  align_left: ALIGN_LEFT,\n  align_center: ALIGN_CENTER,\n  align_right: ALIGN_RIGHT,\n  align_justify: ALIGN_JUSTIFY\n};\nconst InsertCommands = {\n  horizontal_rule: HORIZONTAL_RULE,\n  format_clear: FORMAT_CLEAR\n};\nconst Link = LINK;\nconst Image = IMAGE;\nconst TextColor = TEXT_COLOR;\nconst TextBackgroundColor = TEXT_BACKGROUND_COLOR;\nconst defaults = {\n  // menu\n  bold: 'Bold',\n  italic: 'Italic',\n  code: 'Code',\n  underline: 'Underline',\n  strike: 'Strike',\n  blockquote: 'Blockquote',\n  bullet_list: 'Bullet List',\n  ordered_list: 'Ordered List',\n  heading: 'Heading',\n  h1: 'Header 1',\n  h2: 'Header 2',\n  h3: 'Header 3',\n  h4: 'Header 4',\n  h5: 'Header 5',\n  h6: 'Header 6',\n  align_left: 'Left Align',\n  align_center: 'Center Align',\n  align_right: 'Right Align',\n  align_justify: 'Justify',\n  text_color: 'Text Color',\n  background_color: 'Background Color',\n  horizontal_rule: 'Horizontal rule',\n  format_clear: 'Clear Formatting',\n  insertLink: 'Insert Link',\n  removeLink: 'Remove Link',\n  insertImage: 'Insert Image',\n  // pupups, forms, others...\n  url: 'URL',\n  text: 'Text',\n  openInNewTab: 'Open in new tab',\n  insert: 'Insert',\n  altText: 'Alt Text',\n  title: 'Title',\n  remove: 'Remove'\n};\nclass Locals {\n  constructor(newLocals = {}) {\n    this.locals = defaults;\n    this.get = key => {\n      const value = this.locals[key];\n      if (value) {\n        return isObservable(value) ? value : of(value);\n      }\n      return of('');\n    };\n    this.locals = {\n      ...defaults,\n      ...newLocals\n    };\n  }\n}\nvar bold = `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n`;\nvar italic = `\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\nvar code = `\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\nvar underline = `\n<path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n`;\nvar strike = `\n<path d=\"M6.85,7.08C6.85,4.37,9.45,3,12.24,3c1.64,0,3,0.49,3.9,1.28c0.77,0.65,1.46,1.73,1.46,3.24h-3.01 c0-0.31-0.05-0.59-0.15-0.85c-0.29-0.86-1.2-1.28-2.25-1.28c-1.86,0-2.34,1.02-2.34,1.7c0,0.48,0.25,0.88,0.74,1.21 C10.97,8.55,11.36,8.78,12,9H7.39C7.18,8.66,6.85,8.11,6.85,7.08z M21,12v-2H3v2h9.62c1.15,0.45,1.96,0.75,1.96,1.97 c0,1-0.81,1.67-2.28,1.67c-1.54,0-2.93-0.54-2.93-2.51H6.4c0,0.55,0.08,1.13,0.24,1.58c0.81,2.29,3.29,3.3,5.67,3.3 c2.27,0,5.3-0.89,5.3-4.05c0-0.3-0.01-1.16-0.48-1.94H21V12z\"/>\n`;\nvar orderedList = `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n`;\nvar bulletList = `\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\nvar quote = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\nvar link = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n`;\nvar unlink = `\n<path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/>\n`;\nvar image = `\n<path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/>\n`;\nvar alignLeft = `\n<path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n`;\nvar alignCenter = `\n<path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n`;\nvar alignRight = `\n<path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n`;\nvar alignJustify = `\n<path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"/>\n`;\nvar textColor = `\n<path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/>\n`;\nvar colorFill = `\n<path d=\"M16.56,8.94L7.62,0L6.21,1.41l2.38,2.38L3.44,8.94c-0.59,0.59-0.59,1.54,0,2.12l5.5,5.5C9.23,16.85,9.62,17,10,17 s0.77-0.15,1.06-0.44l5.5-5.5C17.15,10.48,17.15,9.53,16.56,8.94z M5.21,10L10,5.21L14.79,10H5.21z M19,11.5c0,0-2,2.17-2,3.5 c0,1.1,0.9,2,2,2s2-0.9,2-2C21,13.67,19,11.5,19,11.5z M2,20h20v4H2V20z\"/>\n`;\nvar horizontalRule = `\n  <g>\n    <rect fill=\"none\" fill-rule=\"evenodd\" height=\"24\" width=\"24\"/>\n    <rect fill-rule=\"evenodd\" height=\"2\" width=\"16\" x=\"4\" y=\"11\"/>\n  </g>\n`;\nvar formatClear = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.27 5L2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21 18 19.73 3.55 5.27 3.27 5zM6 5v.18L8.82 8h2.4l-.72 1.68 2.1 2.1L14.21 8H20V5H6z\"/>\n`;\n\n/* eslint-disable @typescript-eslint/naming-convention */\n// Icons source: https://material.io/\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\nconst DEFAULT_ICON_FILL = 'currentColor';\nconst icons = {\n  bold,\n  italic,\n  code,\n  underline,\n  strike,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  blockquote: quote,\n  link,\n  unlink,\n  image,\n  align_left: alignLeft,\n  align_center: alignCenter,\n  align_right: alignRight,\n  align_justify: alignJustify,\n  text_color: textColor,\n  color_fill: colorFill,\n  horizontal_rule: horizontalRule,\n  format_clear: formatClear,\n  path: '<path></path>'\n};\nclass Icon {\n  static get(name, fill = DEFAULT_ICON_FILL) {\n    const fullPath = icons[name];\n    if (fullPath && (fullPath.includes('<path') || fullPath.includes('<g'))) {\n      return `\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=${fill}\n          height=${DEFAULT_ICON_HEIGHT}\n          width=${DEFAULT_ICON_WIDTH}\n        >\n          ${fullPath}\n        </svg>\n      `;\n    }\n    return fullPath;\n  }\n}\nclass NgxEditorServiceConfig {\n  constructor() {\n    this.locals = {};\n    this.icons = {};\n  }\n  static #_ = this.ɵfac = function NgxEditorServiceConfig_Factory(t) {\n    return new (t || NgxEditorServiceConfig)();\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgxEditorServiceConfig,\n    factory: NgxEditorServiceConfig.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorServiceConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nclass NgxEditorService {\n  constructor(config) {\n    this.config = config;\n  }\n  get locals() {\n    return new Locals(this.config.locals);\n  }\n  getIcon(icon) {\n    return this.config.icons[icon] ? this.config.icons[icon] : Icon.get(icon);\n  }\n  static #_ = this.ɵfac = function NgxEditorService_Factory(t) {\n    return new (t || NgxEditorService)(i0.ɵɵinject(NgxEditorServiceConfig, 8));\n  };\n  static #_2 = this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: NgxEditorService,\n    factory: NgxEditorService.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorServiceConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\nconst provideMyServiceOptions = config => {\n  return {\n    locals: config.locals ?? {},\n    icons: config.icons ?? {}\n  };\n};\nclass SanitizeHtmlPipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n  transform(value) {\n    if (isTrustedHtml(value)) {\n      return value;\n    }\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n  static #_ = this.ɵfac = function SanitizeHtmlPipe_Factory(t) {\n    return new (t || SanitizeHtmlPipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n  };\n  static #_2 = this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n    name: \"sanitizeHtml\",\n    type: SanitizeHtmlPipe,\n    pure: true\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SanitizeHtmlPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'sanitizeHtml'\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer\n    }];\n  }, null);\n})();\nclass ToggleCommandComponent {\n  get name() {\n    return this.toolbarItem;\n  }\n  constructor(ngxeService, menuService) {\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.isActive = false;\n    this.disabled = false;\n    this.update = view => {\n      const {\n        state\n      } = view;\n      const command = ToggleCommands[this.name];\n      this.isActive = command.isActive(state);\n      this.disabled = !command.canExecute(state);\n    };\n  }\n  toggle(e) {\n    e.preventDefault();\n    if (e.button !== 0) {\n      return;\n    }\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    const command = ToggleCommands[this.name];\n    command.toggle()(state, dispatch);\n  }\n  getTitle(name) {\n    return this.ngxeService.locals.get(name);\n  }\n  ngOnInit() {\n    this.html = this.ngxeService.getIcon(this.name);\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function ToggleCommandComponent_Factory(t) {\n    return new (t || ToggleCommandComponent)(i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ToggleCommandComponent,\n    selectors: [[\"ngx-toggle-command\"]],\n    inputs: {\n      toolbarItem: \"toolbarItem\"\n    },\n    decls: 3,\n    vars: 10,\n    consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"]],\n    template: function ToggleCommandComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mousedown\", function ToggleCommandComponent_Template_div_mousedown_0_listener($event) {\n          return ctx.toggle($event);\n        });\n        i0.ɵɵpipe(1, \"sanitizeHtml\");\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.isActive)(\"NgxEditor--Disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 6, ctx.html), i0.ɵɵsanitizeHtml)(\"title\", i0.ɵɵpipeBind1(2, 8, ctx.getTitle(ctx.name)));\n      }\n    },\n    dependencies: [i3.AsyncPipe, SanitizeHtmlPipe]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleCommandComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-toggle-command',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive\\\"\\n  [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name) | async\\\">\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    toolbarItem: [{\n      type: Input\n    }]\n  });\n})();\nclass InsertCommandComponent {\n  get name() {\n    return this.toolbarItem;\n  }\n  constructor(ngxeService, menuService) {\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.disabled = false;\n    this.update = view => {\n      const {\n        state\n      } = view;\n      const command = InsertCommands[this.name];\n      this.disabled = !command.canExecute(state);\n    };\n  }\n  insert(e) {\n    e.preventDefault();\n    if (e.button !== 0) {\n      return;\n    }\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    const command = InsertCommands[this.name];\n    command.insert()(state, dispatch);\n  }\n  getTitle(name) {\n    return this.ngxeService.locals.get(name);\n  }\n  ngOnInit() {\n    this.html = this.ngxeService.getIcon(this.name);\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function InsertCommandComponent_Factory(t) {\n    return new (t || InsertCommandComponent)(i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: InsertCommandComponent,\n    selectors: [[\"ngx-insert-command\"]],\n    inputs: {\n      toolbarItem: \"toolbarItem\"\n    },\n    decls: 3,\n    vars: 8,\n    consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"]],\n    template: function InsertCommandComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mousedown\", function InsertCommandComponent_Template_div_mousedown_0_listener($event) {\n          return ctx.insert($event);\n        });\n        i0.ɵɵpipe(1, \"sanitizeHtml\");\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"NgxEditor--Disabled\", ctx.disabled);\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 4, ctx.html), i0.ɵɵsanitizeHtml)(\"title\", i0.ɵɵpipeBind1(2, 6, ctx.getTitle(ctx.name)));\n      }\n    },\n    dependencies: [i3.AsyncPipe, SanitizeHtmlPipe]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InsertCommandComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-insert-command',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\"\\n  (mousedown)=\\\"insert($event)\\\" [title]=\\\"getTitle(name) | async\\\">\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    toolbarItem: [{\n      type: Input\n    }]\n  });\n})();\nclass LinkComponent {\n  constructor(el, ngxeService, menuService) {\n    this.el = el;\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.showPopup = false;\n    this.isActive = false;\n    this.canExecute = true;\n    this.setText = () => {\n      const {\n        state: {\n          selection,\n          doc\n        }\n      } = this.editorView;\n      const {\n        empty,\n        from,\n        to\n      } = selection;\n      const selectedText = !empty ? doc.textBetween(from, to) : '';\n      if (selectedText) {\n        this.text.patchValue(selectedText);\n        this.text.disable();\n      }\n    };\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.isActive = Link.isActive(state, {\n        strict: false\n      });\n      this.canExecute = Link.canExecute(state);\n    };\n  }\n  get icon() {\n    return this.ngxeService.getIcon(this.isActive ? 'unlink' : 'link');\n  }\n  get title() {\n    return this.ngxeService.locals.get(this.isActive ? 'removeLink' : 'insertLink');\n  }\n  get href() {\n    return this.form.get('href');\n  }\n  get text() {\n    return this.form.get('text');\n  }\n  onDocumentClick(e) {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n  getLabel(key) {\n    return this.ngxeService.locals.get(key);\n  }\n  hideForm() {\n    this.showPopup = false;\n    this.form.reset({\n      href: '',\n      text: '',\n      openInNewTab: true\n    });\n    this.text.enable();\n  }\n  onMouseDown(e) {\n    if (e.button !== 0) {\n      return;\n    }\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    if (this.isActive) {\n      Link.remove(state, dispatch);\n      return;\n    }\n    this.showPopup = !this.showPopup;\n    if (this.showPopup) {\n      this.setText();\n    }\n  }\n  insertLink(e) {\n    e.preventDefault();\n    const {\n      text,\n      href,\n      openInNewTab\n    } = this.form.getRawValue();\n    const {\n      dispatch,\n      state\n    } = this.editorView;\n    const {\n      selection\n    } = state;\n    const attrs = {\n      title: href,\n      href,\n      target: openInNewTab ? '_blank' : '_self'\n    };\n    if (selection.empty) {\n      Link.insert(text, attrs)(state, dispatch);\n      this.editorView.focus();\n    } else {\n      Link.update(attrs)(state, dispatch);\n    }\n    this.hideForm();\n  }\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.form = new FormGroup({\n      href: new FormControl('', [Validators$1.required, Validators$1.pattern(this.menuService.editor.linkValidationPattern)]),\n      text: new FormControl('', [Validators$1.required]),\n      openInNewTab: new FormControl(true)\n    });\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function LinkComponent_Factory(t) {\n    return new (t || LinkComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: LinkComponent,\n    selectors: [[\"ngx-link\"]],\n    hostBindings: function LinkComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function LinkComponent_mousedown_HostBindingHandler($event) {\n          return ctx.onDocumentClick($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 4,\n    vars: 11,\n    consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"], [\"class\", \"NgxEditor__Popup\", 4, \"ngIf\"], [1, \"NgxEditor__Popup\"], [1, \"NgxEditor__Popup--Form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"NgxEditor__Popup--FormGroup\"], [1, \"NgxEditor__Popup--Col\"], [1, \"NgxEditor__Popup--Label\"], [\"type\", \"href\", \"id\", \"href\", \"formControlName\", \"href\", \"autofocus\", \"\", \"autocomplete\", \"off\"], [\"class\", \"NgxEditor__HelpText NgxEditor__HelpText--Error\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"text\", \"autocomplete\", \"off\"], [\"type\", \"checkbox\", \"formControlName\", \"openInNewTab\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"NgxEditor__HelpText\", \"NgxEditor__HelpText--Error\"]],\n    template: function LinkComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mousedown\", function LinkComponent_Template_div_mousedown_0_listener($event) {\n          return ctx.onMouseDown($event);\n        });\n        i0.ɵɵpipe(1, \"sanitizeHtml\");\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, LinkComponent_div_3_Template, 25, 16, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.isActive || ctx.showPopup)(\"NgxEditor--Disabled\", !ctx.canExecute);\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 7, ctx.icon), i0.ɵɵsanitizeHtml)(\"title\", i0.ɵɵpipeBind1(2, 9, ctx.title));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showPopup);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i3.AsyncPipe, SanitizeHtmlPipe]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinkComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-link',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title | async\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url') | async}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text') | async}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab') | async}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert') | async}}</button>\\n\\n  </form>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }]\n  });\n})();\nclass DropdownComponent {\n  constructor(ngxeService, menuService, el) {\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.el = el;\n    this.isDropdownOpen = false;\n    this.disabledItems = [];\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.disabledItems = [];\n      const activeItems = [];\n      this.items.forEach(item => {\n        const command = ToggleCommands[item];\n        const isActive = command.isActive(state);\n        if (isActive) {\n          activeItems.push(item);\n        }\n        if (!command.canExecute(state)) {\n          this.disabledItems.push(item);\n        }\n      });\n      if (activeItems.length === 1) {\n        [this.activeItem] = activeItems;\n      } else {\n        this.activeItem = null;\n      }\n    };\n  }\n  get isSelected() {\n    return Boolean(this.activeItem || this.isDropdownOpen);\n  }\n  get isDropdownDisabled() {\n    return this.disabledItems.length === this.items.length;\n  }\n  onDocumentClick(target) {\n    if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {\n      this.isDropdownOpen = false;\n    }\n  }\n  getName(key) {\n    return this.ngxeService.locals.get(key);\n  }\n  toggleDropdown(e) {\n    e.preventDefault();\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n  trackByIndex(index) {\n    return index;\n  }\n  onClick(e, item) {\n    e.preventDefault();\n    // consider only left click\n    if (e.button !== 0) {\n      return;\n    }\n    const command = ToggleCommands[item];\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    command.toggle()(state, dispatch);\n    this.isDropdownOpen = false;\n  }\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function DropdownComponent_Factory(t) {\n    return new (t || DropdownComponent)(i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: DropdownComponent,\n    selectors: [[\"ngx-dropdown\"]],\n    hostBindings: function DropdownComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function DropdownComponent_mousedown_HostBindingHandler($event) {\n          return ctx.onDocumentClick($event.target);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      group: \"group\",\n      items: \"items\"\n    },\n    decls: 4,\n    vars: 8,\n    consts: [[1, \"NgxEditor__Dropdown--Text\", 3, \"mousedown\"], [\"class\", \"NgxEditor__Dropdown--DropdownMenu\", 4, \"ngIf\"], [1, \"NgxEditor__Dropdown--DropdownMenu\"], [\"class\", \"NgxEditor__Dropdown--Item\", 3, \"ngClass\", \"mousedown\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"NgxEditor__Dropdown--Item\", 3, \"ngClass\", \"mousedown\"]],\n    template: function DropdownComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mousedown\", function DropdownComponent_Template_div_mousedown_0_listener($event) {\n          return ctx.toggleDropdown($event);\n        });\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, DropdownComponent_div_3_Template, 2, 2, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"NgxEditor__Dropdown--Selected\", ctx.isSelected)(\"NgxEditor--Disabled\", ctx.isDropdownDisabled);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 6, ctx.getName(ctx.activeItem || ctx.group)), \"\\n\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isDropdownOpen);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.AsyncPipe]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-dropdown',\n      template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" [class.NgxEditor__Dropdown--Selected]=\\\"isSelected\\\"\\n  [class.NgxEditor--Disabled]=\\\"isDropdownDisabled\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group) | async}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\"\\n    (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item) | async}}\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    group: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event.target']]\n    }]\n  });\n})();\nclass ImageComponent {\n  constructor(el, ngxeService, menuService) {\n    this.el = el;\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.showPopup = false;\n    this.isActive = false;\n    this.form = new FormGroup({\n      src: new FormControl('', [Validators$1.required, Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)')]),\n      alt: new FormControl(''),\n      title: new FormControl('')\n    });\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.isActive = Image.isActive(state);\n    };\n  }\n  get icon() {\n    return this.ngxeService.getIcon('image');\n  }\n  get src() {\n    return this.form.get('src');\n  }\n  onDocumentClick(e) {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n  getLabel(key) {\n    return this.ngxeService.locals.get(key);\n  }\n  hideForm() {\n    this.showPopup = false;\n    this.form.reset({\n      src: '',\n      alt: '',\n      title: ''\n    });\n  }\n  onMouseDown(e) {\n    if (e.button !== 0) {\n      return;\n    }\n    this.showPopup = !this.showPopup;\n    if (this.showPopup) {\n      this.fillForm();\n    }\n  }\n  fillForm() {\n    const {\n      state\n    } = this.editorView;\n    const {\n      selection\n    } = state;\n    if (selection instanceof NodeSelection && this.isActive) {\n      const {\n        src,\n        alt = '',\n        title = ''\n      } = selection.node.attrs;\n      this.form.setValue({\n        src,\n        alt,\n        title\n      });\n    }\n  }\n  insertLink(e) {\n    e.preventDefault();\n    const {\n      src,\n      alt,\n      title\n    } = this.form.getRawValue();\n    const {\n      dispatch,\n      state\n    } = this.editorView;\n    const attrs = {\n      alt,\n      title\n    };\n    Image.insert(src, attrs)(state, dispatch);\n    this.editorView.focus();\n    this.hideForm();\n  }\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function ImageComponent_Factory(t) {\n    return new (t || ImageComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ImageComponent,\n    selectors: [[\"ngx-image\"]],\n    hostBindings: function ImageComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function ImageComponent_mousedown_HostBindingHandler($event) {\n          return ctx.onDocumentClick($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    decls: 4,\n    vars: 9,\n    consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"], [\"class\", \"NgxEditor__Popup\", 4, \"ngIf\"], [1, \"NgxEditor__Popup\"], [1, \"NgxEditor__Popup--Form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"NgxEditor__Popup--FormGroup\"], [1, \"NgxEditor__Popup--Col\"], [1, \"NgxEditor__Popup--Label\"], [\"type\", \"href\", \"id\", \"href\", \"formControlName\", \"src\", \"autofocus\", \"\", \"autocomplete\", \"off\"], [\"class\", \"NgxEditor__HelpText NgxEditor__HelpText--Error\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"alt\", \"autocomplete\", \"off\"], [\"type\", \"text\", \"formControlName\", \"title\", \"autocomplete\", \"off\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"NgxEditor__HelpText\", \"NgxEditor__HelpText--Error\"]],\n    template: function ImageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mousedown\", function ImageComponent_Template_div_mousedown_0_listener($event) {\n          return ctx.onMouseDown($event);\n        });\n        i0.ɵɵpipe(1, \"sanitizeHtml\");\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, ImageComponent_div_3_Template, 24, 15, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.isActive || ctx.showPopup);\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 5, ctx.icon), i0.ɵɵsanitizeHtml)(\"title\", i0.ɵɵpipeBind1(2, 7, ctx.getLabel(\"insertImage\")));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showPopup);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, i3.AsyncPipe, SanitizeHtmlPipe]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImageComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-image',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\" [title]=\\\"getLabel('insertImage') | async\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url') | async}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText') | async}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title') | async}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert') | async}}</button>\\n\\n  </form>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }]\n  });\n})();\nclass ColorPickerComponent {\n  constructor(el, menuService, ngxeService) {\n    this.el = el;\n    this.menuService = menuService;\n    this.ngxeService = ngxeService;\n    this.showPopup = false;\n    this.isActive = false;\n    this.activeColors = [];\n    this.canExecute = true;\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.canExecute = this.command.canExecute(state);\n      this.isActive = this.command.isActive(state);\n      this.activeColors = [];\n      if (this.isActive) {\n        this.activeColors = this.command.getActiveColors(state);\n      }\n    };\n  }\n  get title() {\n    return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');\n  }\n  get icon() {\n    return this.ngxeService.getIcon(this.type === 'text_color' ? 'text_color' : 'color_fill');\n  }\n  get command() {\n    return this.type === 'text_color' ? TextColor : TextBackgroundColor;\n  }\n  getContrastYIQ(hexcolor) {\n    const color = hexcolor.replace('#', '');\n    const r = parseInt(color.substring(0, 2), 16);\n    const g = parseInt(color.substring(2, 4), 16);\n    const b = parseInt(color.substring(4, 6), 16);\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    return yiq >= 128 ? 'black' : 'white';\n  }\n  onDocumentClick(e) {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hidePopup();\n    }\n  }\n  hidePopup() {\n    this.showPopup = false;\n  }\n  togglePopup(e) {\n    e.preventDefault();\n    if (e.button !== 0) {\n      return;\n    }\n    this.showPopup = !this.showPopup;\n  }\n  remove(e) {\n    e.preventDefault();\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    this.command.remove()(state, dispatch);\n    this.hidePopup();\n  }\n  trackByIndex(index) {\n    return index;\n  }\n  onColorSelect(e, color) {\n    e.preventDefault();\n    if (e.button !== 0) {\n      return;\n    }\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    if (this.type === 'text_color') {\n      const attrs = {\n        color\n      };\n      this.command.apply(attrs)(state, dispatch);\n    } else {\n      const attrs = {\n        backgroundColor: color\n      };\n      this.command.apply(attrs)(state, dispatch);\n    }\n    if (!this.editorView.hasFocus()) {\n      this.editorView.focus();\n    }\n    this.hidePopup();\n  }\n  getLabel(key) {\n    return this.ngxeService.locals.get(key);\n  }\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function ColorPickerComponent_Factory(t) {\n    return new (t || ColorPickerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(NgxEditorService));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: ColorPickerComponent,\n    selectors: [[\"ngx-color-picker\"]],\n    hostBindings: function ColorPickerComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_mousedown_HostBindingHandler($event) {\n          return ctx.onDocumentClick($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n    },\n    inputs: {\n      presets: \"presets\",\n      type: \"type\"\n    },\n    decls: 4,\n    vars: 11,\n    consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"], [\"class\", \"NgxEditor__Popup\", 4, \"ngIf\"], [1, \"NgxEditor__Popup\"], [\"class\", \"NgxEditor__ColorContainer\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"NgxEditor__MenuItem--Button\", 3, \"disabled\", \"mousedown\"], [1, \"NgxEditor__ColorContainer\"], [\"class\", \"NgxEditor__Color\", 3, \"ngStyle\", \"title\", \"ngClass\", \"mousedown\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"NgxEditor__Color\", 3, \"ngStyle\", \"title\", \"ngClass\", \"mousedown\"]],\n    template: function ColorPickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_Template_div_mousedown_0_listener($event) {\n          return ctx.togglePopup($event);\n        });\n        i0.ɵɵpipe(1, \"sanitizeHtml\");\n        i0.ɵɵpipe(2, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, ColorPickerComponent_div_3_Template, 5, 6, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.isActive || ctx.showPopup)(\"NgxEditor--Disabled\", !ctx.canExecute);\n        i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 7, ctx.icon), i0.ɵɵsanitizeHtml)(\"title\", i0.ɵɵpipeBind1(2, 9, ctx.title));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showPopup);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgStyle, i3.AsyncPipe, SanitizeHtmlPipe],\n    styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup[_ngcontent-%COMP%]{width:230px}.NgxEditor__ColorContainer[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.NgxEditor__ColorContainer[_ngcontent-%COMP%] + .NgxEditor__ColorContainer[_ngcontent-%COMP%]{margin-top:5px}.NgxEditor__Color[_ngcontent-%COMP%]{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active[_ngcontent-%COMP%]:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button[_ngcontent-%COMP%]{margin-top:5px}\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-color-picker',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title | async\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove') | async}}\\n  </button>\\n</div>\\n\",\n      styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: MenuService\n    }, {\n      type: NgxEditorService\n    }];\n  }, {\n    presets: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }]\n  });\n})();\nconst DEFAULT_TOOLBAR = [['bold', 'italic'], ['code', 'blockquote'], ['underline', 'strike'], ['ordered_list', 'bullet_list'], [{\n  heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n}], ['link', 'image'], ['text_color', 'background_color'], ['align_left', 'align_center', 'align_right', 'align_justify'], ['format_clear']];\nconst TOOLBAR_MINIMAL = [['bold', 'italic'], [{\n  heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n}], ['link', 'image'], ['text_color', 'background_color']];\nconst TOOLBAR_FULL = [['bold', 'italic'], ['code', 'blockquote'], ['underline', 'strike'], ['ordered_list', 'bullet_list'], [{\n  heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n}], ['link', 'image'], ['text_color', 'background_color'], ['align_left', 'align_center', 'align_right', 'align_justify'], ['horizontal_rule']];\nconst DEFAULT_COLOR_PRESETS = ['#b60205', '#d93f0b', '#fbca04', '#0e8a16', '#006b75', '#1d76db', '#0052cc', '#5319e7', '#e99695', '#f9d0c4', '#fef2c0', '#c2e0c6', '#bfdadc', '#c5def5', '#bfd4f2', '#d4c5f9'];\nclass MenuComponent {\n  constructor(menuService) {\n    this.menuService = menuService;\n    this.toolbar = TOOLBAR_MINIMAL;\n    this.colorPresets = DEFAULT_COLOR_PRESETS;\n    this.disabled = false;\n    this.customMenuRef = null;\n    this.dropdownPlacement = 'bottom';\n    this.toggleCommands = ['bold', 'italic', 'underline', 'strike', 'code', 'blockquote', 'ordered_list', 'bullet_list', 'align_left', 'align_center', 'align_right', 'align_justify'];\n    this.insertCommands = ['horizontal_rule', 'format_clear'];\n    this.iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];\n    this.dropdownContainerClass = ['NgxEditor__Dropdown'];\n    this.seperatorClass = ['NgxEditor__Seperator'];\n  }\n  get presets() {\n    const col = 8;\n    const colors = [];\n    this.colorPresets.forEach((color, index) => {\n      const row = Math.floor(index / col);\n      if (!colors[row]) {\n        colors.push([]);\n      }\n      colors[row].push(color);\n    });\n    return colors;\n  }\n  trackByIndex(index) {\n    return index;\n  }\n  isDropDown(item) {\n    if (item?.heading) {\n      return true;\n    }\n    return false;\n  }\n  getDropdownItems(item) {\n    return item;\n  }\n  ngOnInit() {\n    if (!this.editor) {\n      throw new NgxEditorError('Required editor instance to initialize menu component');\n    }\n    this.menuService.editor = this.editor;\n  }\n  static #_ = this.ɵfac = function MenuComponent_Factory(t) {\n    return new (t || MenuComponent)(i0.ɵɵdirectiveInject(MenuService));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MenuComponent,\n    selectors: [[\"ngx-editor-menu\"]],\n    inputs: {\n      toolbar: \"toolbar\",\n      colorPresets: \"colorPresets\",\n      disabled: \"disabled\",\n      editor: \"editor\",\n      customMenuRef: \"customMenuRef\",\n      dropdownPlacement: \"dropdownPlacement\"\n    },\n    features: [i0.ɵɵProvidersFeature([MenuService])],\n    decls: 3,\n    vars: 7,\n    consts: [[1, \"NgxEditor__MenuBar\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [3, \"toolbarItem\", \"class\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"type\", \"text_color\", 3, \"class\", \"presets\", 4, \"ngIf\"], [\"type\", \"background_color\", 3, \"class\", \"presets\", 4, \"ngIf\"], [3, \"toolbarItem\"], [3, \"class\", \"group\", \"items\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"group\", \"items\"], [\"type\", \"text_color\", 3, \"presets\"], [\"type\", \"background_color\", 3, \"presets\"], [3, \"ngTemplateOutlet\"]],\n    template: function MenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, MenuComponent_ng_container_1_Template, 2, 2, \"ng-container\", 1)(2, MenuComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c7, ctx.disabled, ctx.dropdownPlacement === \"top\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngForOf\", ctx.toolbar)(\"ngForTrackBy\", ctx.trackByIndex);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.customMenuRef);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgTemplateOutlet, ToggleCommandComponent, InsertCommandComponent, LinkComponent, DropdownComponent, ImageComponent, ColorPickerComponent, i3.KeyValuePipe]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-editor-menu',\n      providers: [MenuService],\n      template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <ngx-insert-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"insertCommands.includes(item)\\\">\\n      </ngx-insert-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: MenuService\n    }];\n  }, {\n    toolbar: [{\n      type: Input\n    }],\n    colorPresets: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    editor: [{\n      type: Input\n    }],\n    customMenuRef: [{\n      type: Input\n    }],\n    dropdownPlacement: [{\n      type: Input\n    }]\n  });\n})();\nclass BubbleComponent {\n  constructor(sanitizeHTML, ngxeService) {\n    this.sanitizeHTML = sanitizeHTML;\n    this.ngxeService = ngxeService;\n    this.execulableItems = [];\n    this.activeItems = [];\n    this.toolbar = [['bold', 'italic', 'underline', 'strike'], ['ordered_list', 'bullet_list', 'blockquote', 'code'], ['align_left', 'align_center', 'align_right', 'align_justify']];\n    this.toggleCommands = ['bold', 'italic', 'underline', 'strike', 'ordered_list', 'bullet_list', 'blockquote', 'code', 'align_left', 'align_center', 'align_right', 'align_justify'];\n  }\n  get view() {\n    return this.editor.view;\n  }\n  getIcon(name) {\n    return this.sanitizeHTML.transform(this.ngxeService.getIcon(name));\n  }\n  getTitle(name) {\n    return this.ngxeService.locals.get(name);\n  }\n  trackByIndex(index) {\n    return index;\n  }\n  onClick(e, commandName) {\n    e.preventDefault();\n    e.stopPropagation();\n    if (e.button !== 0) {\n      return;\n    }\n    const {\n      state,\n      dispatch\n    } = this.view;\n    const command = ToggleCommands[commandName];\n    command.toggle()(state, dispatch);\n  }\n  update(view) {\n    this.activeItems = [];\n    this.execulableItems = [];\n    const {\n      state\n    } = view;\n    this.toggleCommands.forEach(toolbarItem => {\n      const command = ToggleCommands[toolbarItem];\n      const isActive = command.isActive(state);\n      if (isActive) {\n        this.activeItems.push(toolbarItem);\n      }\n      const canExecute = command.canExecute(state);\n      if (canExecute) {\n        this.execulableItems.push(toolbarItem);\n      }\n    });\n  }\n  ngOnInit() {\n    this.updateSubscription = this.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function BubbleComponent_Factory(t) {\n    return new (t || BubbleComponent)(i0.ɵɵdirectiveInject(SanitizeHtmlPipe), i0.ɵɵdirectiveInject(NgxEditorService));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BubbleComponent,\n    selectors: [[\"ngx-bubble\"]],\n    inputs: {\n      editor: \"editor\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"NgxBubbleMenu__Icon\", 3, \"ngClass\", \"title\", \"innerHTML\", \"mousedown\", 4, \"ngIf\"], [\"class\", \"NgxBubbleMenu__Seperator\", 4, \"ngIf\"], [1, \"NgxBubbleMenu__Icon\", 3, \"ngClass\", \"title\", \"innerHTML\", \"mousedown\"], [1, \"NgxBubbleMenu__Seperator\"]],\n    template: function BubbleComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, BubbleComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.toolbar)(\"ngForTrackBy\", ctx.trackByIndex);\n      }\n    },\n    dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.AsyncPipe],\n    styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}[_nghost-%COMP%]{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon[_ngcontent-%COMP%]{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon[_ngcontent-%COMP%]:hover{background-color:#636262}.NgxBubbleMenu__Icon[_ngcontent-%COMP%] + .NgxBubbleMenu__Icon[_ngcontent-%COMP%]{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active[_ngcontent-%COMP%]{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator[_ngcontent-%COMP%]{border-left:1px solid white;margin:0 5px}\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-bubble',\n      template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item) | async\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\",\n      styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: SanitizeHtmlPipe\n    }, {\n      type: NgxEditorService\n    }];\n  }, {\n    editor: [{\n      type: Input\n    }]\n  });\n})();\nclass FloatingMenuComponent {\n  constructor(el) {\n    this.el = el;\n    this.autoPlace = false;\n    this.posLeft = 0;\n    this.posTop = 0;\n    this.showMenu = false;\n    this.dragging = false;\n  }\n  get display() {\n    return {\n      visibility: this.showMenu ? 'visible' : 'hidden',\n      opacity: this.showMenu ? '1' : '0',\n      top: `${this.posTop}px`,\n      left: `${this.posLeft}px`\n    };\n  }\n  get view() {\n    return this.editor.view;\n  }\n  onMouseDown(e) {\n    const target = e.target;\n    if (this.el.nativeElement.contains(target) && target.nodeName !== 'INPUT') {\n      e.preventDefault();\n      return;\n    }\n    this.dragging = true;\n  }\n  onKeyDown(e) {\n    const target = e.target;\n    if (target.nodeName === 'INPUT') {\n      return;\n    }\n    this.dragging = true;\n    this.hide();\n  }\n  onMouseUp(e) {\n    const target = e.target;\n    if (this.el.nativeElement.contains(target) || target.nodeName === 'INPUT') {\n      e.preventDefault();\n      return;\n    }\n    this.dragging = false;\n    this.useUpdate();\n  }\n  onKeyUp(e) {\n    const target = e.target;\n    if (target.nodeName === 'INPUT') {\n      return;\n    }\n    this.dragging = false;\n    this.useUpdate();\n  }\n  useUpdate() {\n    if (!this.view) {\n      return;\n    }\n    this.update(this.view);\n  }\n  hide() {\n    this.showMenu = false;\n  }\n  show() {\n    this.showMenu = true;\n  }\n  calculateBubblePosition(view) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        state: {\n          selection\n        }\n      } = view;\n      const {\n        from,\n        to\n      } = selection;\n      const start = view.coordsAtPos(from);\n      const end = view.coordsAtPos(to);\n      const selectionElement = {\n        getBoundingClientRect() {\n          if (selection instanceof NodeSelection) {\n            const node = view.nodeDOM(from);\n            return node.getBoundingClientRect();\n          }\n          const {\n            top,\n            left\n          } = start;\n          const {\n            bottom,\n            right\n          } = end;\n          return {\n            x: left,\n            y: top,\n            top,\n            bottom,\n            left,\n            right,\n            width: right - left,\n            height: bottom - top\n          };\n        }\n      };\n      // the floating bubble itself\n      const bubbleEl = _this.el.nativeElement;\n      const {\n        x: left,\n        y: top\n      } = yield computePosition(selectionElement, bubbleEl, {\n        placement: 'top',\n        middleware: [offset(5), _this.autoPlace && autoPlacement({\n          boundary: view.dom,\n          padding: 5,\n          allowedPlacements: ['top', 'bottom']\n        }), {\n          // prevent overflow on right and left side\n          // since only top and bottom placements are allowed\n          // autoplacement can't handle overflows on the right and left\n          name: 'overflowMiddleware',\n          fn(middlewareArgs) {\n            return _asyncToGenerator(function* () {\n              const overflow = yield detectOverflow(middlewareArgs, {\n                boundary: view.dom,\n                padding: 5\n              });\n              // overflows left\n              if (overflow.left > 0) {\n                return {\n                  x: middlewareArgs.x + overflow.left\n                };\n              }\n              // overflows right\n              if (overflow.right > 0) {\n                return {\n                  x: middlewareArgs.x - overflow.right\n                };\n              }\n              return {};\n            })();\n          }\n        }].filter(Boolean)\n      });\n      return {\n        left,\n        top\n      };\n    })();\n  }\n  canShowMenu(view) {\n    const {\n      state\n    } = view;\n    const {\n      selection\n    } = state;\n    const {\n      empty\n    } = selection;\n    if (selection instanceof NodeSelection) {\n      if (selection.node.type.name === 'image') {\n        return false;\n      }\n    }\n    const hasFocus = this.view.hasFocus();\n    if (!hasFocus || empty || this.dragging) {\n      this.hide();\n      return false;\n    }\n    return true;\n  }\n  update(view) {\n    const canShowMenu = this.canShowMenu(view);\n    if (!canShowMenu) {\n      this.hide();\n      return;\n    }\n    this.calculateBubblePosition(this.view).then(({\n      top,\n      left\n    }) => {\n      if (!this.canShowMenu) {\n        this.hide();\n        return;\n      }\n      this.posLeft = left;\n      this.posTop = top;\n      this.show();\n    });\n  }\n  ngOnInit() {\n    if (!this.editor) {\n      throw new NgxEditorError('Required editor instance to initialize floating menu component');\n    }\n    this.updateSubscription = this.editor.update.subscribe(view => {\n      this.update(view);\n    });\n    this.resizeSubscription = fromEvent(window, 'resize').pipe(throttleTime(500, asyncScheduler, {\n      leading: true,\n      trailing: true\n    })).subscribe(() => {\n      this.useUpdate();\n    });\n  }\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n    this.resizeSubscription.unsubscribe();\n  }\n  static #_ = this.ɵfac = function FloatingMenuComponent_Factory(t) {\n    return new (t || FloatingMenuComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n  static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FloatingMenuComponent,\n    selectors: [[\"ngx-editor-floating-menu\"]],\n    hostVars: 2,\n    hostBindings: function FloatingMenuComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mousedown\", function FloatingMenuComponent_mousedown_HostBindingHandler($event) {\n          return ctx.onMouseDown($event);\n        }, false, i0.ɵɵresolveDocument)(\"keydown\", function FloatingMenuComponent_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        }, false, i0.ɵɵresolveDocument)(\"mouseup\", function FloatingMenuComponent_mouseup_HostBindingHandler($event) {\n          return ctx.onMouseUp($event);\n        }, false, i0.ɵɵresolveDocument)(\"keyup\", function FloatingMenuComponent_keyup_HostBindingHandler($event) {\n          return ctx.onKeyUp($event);\n        }, false, i0.ɵɵresolveDocument);\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleMap(ctx.display);\n      }\n    },\n    inputs: {\n      editor: \"editor\",\n      autoPlace: \"autoPlace\"\n    },\n    ngContentSelectors: _c3,\n    decls: 4,\n    vars: 1,\n    consts: [[\"ref\", \"\"], [4, \"ngIf\"], [3, \"editor\"]],\n    template: function FloatingMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", null, 0);\n        i0.ɵɵprojection(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, FloatingMenuComponent_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r0.children.length === 0);\n      }\n    },\n    dependencies: [i3.NgIf, BubbleComponent],\n    styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}[_nghost-%COMP%]{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FloatingMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-editor-floating-menu',\n      template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\",\n      styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    display: [{\n      type: HostBinding,\n      args: ['style']\n    }],\n    editor: [{\n      type: Input\n    }],\n    autoPlace: [{\n      type: Input\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['document:keydown', ['$event']]\n    }],\n    onMouseUp: [{\n      type: HostListener,\n      args: ['document:mouseup', ['$event']]\n    }],\n    onKeyUp: [{\n      type: HostListener,\n      args: ['document:keyup', ['$event']]\n    }]\n  });\n})();\nclass MenuModule {\n  static #_ = this.ɵfac = function MenuModule_Factory(t) {\n    return new (t || MenuModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MenuModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [SanitizeHtmlPipe],\n    imports: [CommonModule, ReactiveFormsModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ReactiveFormsModule],\n      declarations: [\n      // pipes\n      SanitizeHtmlPipe,\n      // components\n      MenuComponent, ToggleCommandComponent, InsertCommandComponent, LinkComponent, DropdownComponent, ImageComponent, ColorPickerComponent, FloatingMenuComponent, BubbleComponent],\n      providers: [SanitizeHtmlPipe],\n      exports: [MenuComponent, FloatingMenuComponent]\n    }]\n  }], null, null);\n})();\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\nconst defaultConfig = {\n  locals: defaults,\n  icons\n};\nclass NgxEditorModule {\n  static forRoot(config = defaultConfig) {\n    return {\n      ngModule: NgxEditorModule,\n      providers: [{\n        provide: NGX_EDITOR_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: NgxEditorServiceConfig,\n        useFactory: provideMyServiceOptions,\n        deps: [NGX_EDITOR_CONFIG_TOKEN]\n      }]\n    };\n  }\n  static forChild(config = defaultConfig) {\n    return {\n      ngModule: NgxEditorModule,\n      providers: [{\n        provide: NGX_EDITOR_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: NgxEditorServiceConfig,\n        useFactory: provideMyServiceOptions,\n        deps: [NGX_EDITOR_CONFIG_TOKEN]\n      }, NgxEditorService]\n    };\n  }\n  static #_ = this.ɵfac = function NgxEditorModule_Factory(t) {\n    return new (t || NgxEditorModule)();\n  };\n  static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: NgxEditorModule\n  });\n  static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [CommonModule, MenuModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MenuModule],\n      providers: [],\n      declarations: [NgxEditorComponent, ImageViewComponent],\n      exports: [NgxEditorComponent, MenuComponent, FloatingMenuComponent]\n    }]\n  }], null, null);\n})();\nconst isEmptyInputValue = value => {\n  // we don't check for string here so it also works with arrays\n  return value === null || value.length === 0;\n};\nconst hasValidLength = value => {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value !== null && typeof value.length === 'number';\n};\nconst isDocEmpty = doc => {\n  if (!doc) {\n    return true;\n  }\n  const {\n    childCount,\n    firstChild\n  } = doc;\n  return Boolean(childCount === 1 && firstChild?.isTextblock && firstChild.content.size === 0);\n};\n// @dynamic\nclass Validators {\n  static required(userSchema) {\n    return control => {\n      const schema$1 = userSchema || schema;\n      const doc = parseContent(control.value, schema$1);\n      const isEmpty = isDocEmpty(doc);\n      if (!isEmpty) {\n        return null;\n      }\n      return {\n        required: true\n      };\n    };\n  }\n  static maxLength(maxLength, userSchema) {\n    return control => {\n      const schema$1 = userSchema || schema;\n      const doc = parseContent(control.value, schema$1);\n      const value = doc.textContent;\n      if (hasValidLength(value) && value.length > maxLength) {\n        return {\n          maxlength: {\n            requiredLength: maxLength,\n            actualLength: value.length\n          }\n        };\n      }\n      return null;\n    };\n  }\n  static minLength(minLength, userSchema) {\n    return control => {\n      const schema$1 = userSchema || schema;\n      const doc = parseContent(control.value, schema$1);\n      const value = doc.textContent;\n      if (isEmptyInputValue(value) || !hasValidLength(value)) {\n        // don't validate empty values to allow optional controls\n        // don't validate values without `length` property\n        return null;\n      }\n      if (value.length < minLength) {\n        return {\n          minlength: {\n            requiredLength: minLength,\n            actualLength: value.length\n          }\n        };\n      }\n      return null;\n    };\n  }\n}\nconst execMark = (name, toggle = false) => {\n  return (state, dispatch) => {\n    const command = new Mark(name);\n    if (!toggle) {\n      return command.apply()(state, dispatch);\n    }\n    return command.toggle()(state, dispatch);\n  };\n};\nclass EditorCommands {\n  constructor(view) {\n    this.applyTrx = tr => {\n      this.state = this.state.apply(tr ?? this.tr);\n      this.tr = this.state.tr;\n      this.tr.setMeta('APPLIED_TRX', true);\n    };\n    this.dispatch = tr => {\n      this.applyTrx(tr);\n    };\n    if (!view) {\n      throw new NgxEditorError('Required view to initialize commands.');\n    }\n    this.view = view;\n    this.state = view.state;\n    this.tr = this.view.state.tr;\n  }\n  exec() {\n    // No changes applied\n    if (!this.tr.getMeta('APPLIED_TRX')) {\n      return false;\n    }\n    const forceEmit = !this.view.state.doc.eq(this.state.doc);\n    this.view.updateState(this.state);\n    const tr = this.tr.setMeta('FORCE_EMIT', forceEmit);\n    this.view.dispatch(tr);\n    return true;\n  }\n  focus(position = 'end') {\n    const selection = position === 'start' ? Selection.atStart(this.state.doc) : Selection.atEnd(this.state.doc);\n    this.tr.setSelection(selection);\n    this.applyTrx();\n    this.view.focus();\n    return this;\n  }\n  scrollIntoView() {\n    this.tr.scrollIntoView();\n    this.applyTrx();\n    return this;\n  }\n  insertText(text) {\n    this.tr.insertText(text);\n    this.applyTrx();\n    return this;\n  }\n  insertNewLine() {\n    const newLineCommands = [newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock];\n    chainCommands(...newLineCommands)(this.state, this.dispatch);\n    return this;\n  }\n  applyMark(name) {\n    execMark(name, false)(this.state, this.dispatch);\n    return this;\n  }\n  toggleMark(name) {\n    execMark(name, true)(this.state, this.dispatch);\n    return this;\n  }\n  bold() {\n    execMark('strong')(this.state, this.dispatch);\n    return this;\n  }\n  toggleBold() {\n    execMark('strong', true)(this.state, this.dispatch);\n    return this;\n  }\n  italics() {\n    execMark('em')(this.state, this.dispatch);\n    return this;\n  }\n  toggleItalics() {\n    execMark('em', true)(this.state, this.dispatch);\n    return this;\n  }\n  underline() {\n    execMark('u')(this.state, this.dispatch);\n    return this;\n  }\n  toggleUnderline() {\n    execMark('u', true)(this.state, this.dispatch);\n    return this;\n  }\n  strike() {\n    execMark('s')(this.state, this.dispatch);\n    return this;\n  }\n  toggleStrike() {\n    execMark('s', true)(this.state, this.dispatch);\n    return this;\n  }\n  code() {\n    execMark('code')(this.state, this.dispatch);\n    return this;\n  }\n  toggleCode() {\n    execMark('code', true)(this.state, this.dispatch);\n    return this;\n  }\n  toggleOrderedList() {\n    const command = new ListItem(false);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n  toggleBulletList() {\n    const command = new ListItem(true);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n  toggleHeading(level) {\n    const command = new Heading(level);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n  insertLink(text, attrs) {\n    const command = new Link$1();\n    command.insert(text, attrs)(this.state, this.dispatch);\n    return this;\n  }\n  updateLink(attrs) {\n    const command = new Link$1();\n    command.update(attrs)(this.state, this.dispatch);\n    return this;\n  }\n  insertImage(src, attrs = {}) {\n    const command = new Image$1();\n    command.insert(src, attrs)(this.state, this.dispatch);\n    return this;\n  }\n  textColor(color) {\n    const command = new TextColor$1('text_color');\n    command.apply({\n      color\n    })(this.state, this.dispatch);\n    return this;\n  }\n  backgroundColor(color) {\n    const command = new TextColor$1('text_background_color');\n    command.apply({\n      backgroundColor: color\n    })(this.state, this.dispatch);\n    return this;\n  }\n  removeTextColor() {\n    const command = new TextColor$1('text_color');\n    command.remove()(this.state, this.dispatch);\n    return this;\n  }\n  removeBackgroundColor() {\n    const command = new TextColor$1('text_background_color');\n    command.remove()(this.state, this.dispatch);\n    return this;\n  }\n  align(p) {\n    const command = new TextAlign(p);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n  insertHTML(html) {\n    const {\n      selection,\n      schema,\n      tr\n    } = this.state;\n    const {\n      from,\n      to\n    } = selection;\n    const element = document.createElement('div');\n    element.innerHTML = isString(html) ? html.trim() : html;\n    const slice = DOMParser.fromSchema(schema).parseSlice(element);\n    const transaction = tr.replaceRange(from, to, slice);\n    this.applyTrx(transaction);\n    return this;\n  }\n}\nconst isMacOs = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\n// Input rules ref: https://github.com/ProseMirror/prosemirror-example-setup/\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nconst blockQuoteRule = nodeType => {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nconst orderedListRule = nodeType => {\n  return wrappingInputRule(/^(?:\\d+)\\.\\s$/, nodeType, match => ({\n    order: Number(match[1])\n  }), (match, node) => node.childCount + node.attrs['order'] === Number(match[1]));\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nconst bulletListRule = nodeType => {\n  return wrappingInputRule(/^\\s*(?:[-+*])\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nconst codeBlockRule = nodeType => {\n  return textblockTypeInputRule(/^```$/, nodeType);\n};\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nconst headingRule = (nodeType, maxLevel) => {\n  return textblockTypeInputRule(new RegExp(`^(#{1,${maxLevel}})\\\\s$`), nodeType, match => ({\n    level: match[1].length\n  }));\n};\n// : (MarkType) → InputRule\n// Wraps matching text with bold mark\nconst boldRule = markType => {\n  // eslint-disable-next-line prefer-named-capture-group\n  return markInputRule(/(?:^|\\s)(?:(\\*\\*|__)(?:([^*_]+))(\\*\\*|__))$/, markType);\n};\n// : (MarkType) → InputRule\n// Wraps matching text with em mark\nconst emRule = markType => {\n  // eslint-disable-next-line prefer-named-capture-group\n  return markInputRule(/(?:^|\\s)(?:(\\*|_)(?:([^*_]+))(\\*|_))$/, markType);\n};\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nconst buildInputRules = schema => {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n  rules.push(boldRule(schema.marks['strong']));\n  rules.push(emRule(schema.marks['em']));\n  rules.push(blockQuoteRule(schema.nodes['blockquote']));\n  rules.push(orderedListRule(schema.nodes['ordered_list']));\n  rules.push(bulletListRule(schema.nodes['bullet_list']));\n  rules.push(codeBlockRule(schema.nodes['code_block']));\n  rules.push(headingRule(schema.nodes['heading'], 6));\n  return inputRules({\n    rules\n  });\n};\nconst getKeyboardShortcuts = (schema, options) => {\n  const historyKeyMap = {};\n  historyKeyMap['Mod-z'] = undo;\n  if (isMacOs) {\n    historyKeyMap['Shift-Mod-z'] = redo;\n  } else {\n    historyKeyMap['Mod-y'] = redo;\n  }\n  const plugins = [keymap({\n    'Mod-b': toggleMark(schema.marks['strong']),\n    'Mod-i': toggleMark(schema.marks['em']),\n    'Mod-u': toggleMark(schema.marks['u']),\n    'Mod-`': toggleMark(schema.marks['code'])\n  }), keymap({\n    'Enter': splitListItem(schema.nodes['list_item']),\n    'Shift-Enter': chainCommands(exitCode, (state, dispatch) => {\n      const {\n        tr\n      } = state;\n      const br = schema.nodes['hard_break'];\n      dispatch(tr.replaceSelectionWith(br.create()).scrollIntoView());\n      return true;\n    }),\n    'Mod-[': liftListItem(schema.nodes['list_item']),\n    'Mod-]': sinkListItem(schema.nodes['list_item']),\n    'Tab': sinkListItem(schema.nodes['list_item'])\n  }), keymap(baseKeymap)];\n  if (options.history) {\n    plugins.push(keymap(historyKeyMap));\n  }\n  return plugins;\n};\nconst getDefaultPlugins = (schema, options) => {\n  const plugins = [];\n  if (options.keyboardShortcuts) {\n    plugins.push(...getKeyboardShortcuts(schema, {\n      history: options.history\n    }));\n  }\n  if (options.history) {\n    plugins.push(history());\n  }\n  if (options.inputRules) {\n    plugins.push(buildInputRules(schema));\n  }\n  return plugins;\n};\nconst defaultFeatures = {\n  linkOnPaste: true,\n  resizeImage: true\n};\nconst DEFAULT_OPTIONS = {\n  content: null,\n  history: true,\n  keyboardShortcuts: true,\n  inputRules: true,\n  schema: schema,\n  plugins: [],\n  nodeViews: {},\n  attributes: {},\n  features: defaultFeatures,\n  handleScrollToSelection: null,\n  linkValidationPattern: '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)|(mailto:.*[@].*)'\n};\nclass Editor {\n  constructor(options = DEFAULT_OPTIONS) {\n    this.valueChangesSubject = new Subject();\n    this.updateSubject = new Subject();\n    this.options = {\n      ...DEFAULT_OPTIONS,\n      ...options\n    };\n    this.createEditor();\n  }\n  get valueChanges() {\n    return this.valueChangesSubject.asObservable();\n  }\n  get update() {\n    return this.updateSubject.asObservable();\n  }\n  get schema() {\n    return this.options.schema || schema;\n  }\n  get linkValidationPattern() {\n    return this.options.linkValidationPattern;\n  }\n  get commands() {\n    return new EditorCommands(this.view);\n  }\n  get features() {\n    return {\n      ...defaultFeatures,\n      ...this.options.features\n    };\n  }\n  handleTransactions(tr) {\n    const state = this.view.state.apply(tr);\n    this.view.updateState(state);\n    this.updateSubject.next(this.view);\n    if (!tr.docChanged && !tr.getMeta('FORCE_EMIT')) {\n      return;\n    }\n    const json = state.doc.toJSON();\n    this.valueChangesSubject.next(json);\n  }\n  createEditor() {\n    const {\n      options,\n      schema\n    } = this;\n    const {\n      content = null,\n      nodeViews\n    } = options;\n    const {\n      history = true,\n      keyboardShortcuts = true,\n      inputRules = true\n    } = options;\n    const doc = parseContent(content, schema);\n    const plugins = options.plugins ?? [];\n    const attributes = options.attributes ?? {};\n    const defaultPlugins = getDefaultPlugins(schema, {\n      history,\n      keyboardShortcuts,\n      inputRules\n    });\n    this.view = new EditorView(null, {\n      state: EditorState.create({\n        doc,\n        schema,\n        plugins: [...defaultPlugins, ...plugins]\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes,\n      handleScrollToSelection: options.handleScrollToSelection\n    });\n  }\n  setContent(content) {\n    if (isNil(content)) {\n      return;\n    }\n    const {\n      state\n    } = this.view;\n    const {\n      tr,\n      doc\n    } = state;\n    const newDoc = parseContent(content, this.schema);\n    tr.replaceWith(0, state.doc.content.size, newDoc);\n    // don't emit if both content is same\n    if (doc.eq(tr.doc)) {\n      return;\n    }\n    if (!tr.docChanged) {\n      return;\n    }\n    this.view.dispatch(tr);\n  }\n  registerPlugin(plugin) {\n    const {\n      state\n    } = this.view;\n    const plugins = [...state.plugins, plugin];\n    const newState = state.reconfigure({\n      plugins\n    });\n    this.view.updateState(newState);\n  }\n  destroy() {\n    this.view.destroy();\n  }\n}\n\n/*\n * Public API Surface of ngx-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TOOLBAR, Editor, FloatingMenuComponent, ImageViewComponent, MenuComponent, NGX_EDITOR_CONFIG_TOKEN, NgxEditorComponent, NgxEditorModule, NgxEditorService, TOOLBAR_FULL, TOOLBAR_MINIMAL, Validators, emptyDoc, getKeyboardShortcuts, parseContent, provideMyServiceOptions, toDoc, toHTML };","map":{"version":3,"names":["i0","EventEmitter","Component","Input","Output","ViewChild","ApplicationRef","createComponent","forwardRef","ViewEncapsulation","Injectable","Optional","Pipe","HostListener","HostBinding","NgModule","InjectionToken","i4","NG_VALUE_ACCESSOR","FormGroup","FormControl","Validators","Validators$1","ReactiveFormsModule","Subject","isObservable","of","fromEvent","asyncScheduler","takeUntil","throttleTime","NgxEditorError","isNil","Plugin","PluginKey","NodeSelection","Selection","EditorState","DecorationSet","Decoration","EditorView","i3","CommonModule","Fragment","Slice","DOMSerializer","DOMParser","schema","marks","nodes","toggleMark","lift","wrapIn","setBlockType","newlineInCode","createParagraphNear","liftEmptyBlock","splitBlock","chainCommands","exitCode","baseKeymap","applyMark","removeLink","removeMark","isMarkActive","isNodeActive","canInsert","getSelectionNodes","getSelectionMarks","markInputRule","liftListItem","wrapInList","splitListItem","sinkListItem","i1","computePosition","offset","autoPlacement","detectOverflow","keymap","undo","redo","history","wrappingInputRule","textblockTypeInputRule","smartQuotes","ellipsis","emDash","inputRules","_c0","ImageViewComponent_span_1_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","ImageViewComponent_span_1_Template_span_mousedown_1_listener","$event","ɵɵrestoreView","ctx_r2","ɵɵnextContext","ɵɵresetView","startResizing","ɵɵelementEnd","ImageViewComponent_span_1_Template_span_mousedown_2_listener","ctx_r4","ImageViewComponent_span_1_Template_span_mousedown_3_listener","ctx_r5","ImageViewComponent_span_1_Template_span_mousedown_4_listener","ctx_r6","_c1","a0","_c2","_c3","LinkComponent_div_3_div_8_Template","ɵɵtext","ctx_r1","ɵɵadvance","ɵɵtextInterpolate1","href","errors","LinkComponent_div_3_div_15_Template","text","LinkComponent_div_3_Template","_r4","LinkComponent_div_3_Template_form_ngSubmit_1_listener","ctx_r3","insertLink","ɵɵpipe","ɵɵelement","ɵɵtemplate","ctx_r0","ɵɵproperty","form","ɵɵtextInterpolate","ɵɵpipeBind1","getLabel","touched","invalid","valid","_c4","a1","DropdownComponent_div_3_div_1_Template","DropdownComponent_div_3_div_1_Template_div_mousedown_0_listener","restoredCtx","item_r2","$implicit","onClick","ɵɵpureFunction2","activeItem","disabledItems","includes","getName","DropdownComponent_div_3_Template","items","trackByIndex","ImageComponent_div_3_div_8_Template","src","ImageComponent_div_3_Template","ImageComponent_div_3_Template_form_ngSubmit_1_listener","dirty","_c5","backgroundColor","color","_c6","ColorPickerComponent_div_3_div_1_button_1_Template","_r6","ColorPickerComponent_div_3_div_1_button_1_Template_button_mousedown_0_listener","color_r4","onColorSelect","getContrastYIQ","ɵɵpureFunction1","activeColors","ColorPickerComponent_div_3_div_1_Template","colorGroup_r2","ColorPickerComponent_div_3_Template","_r8","ColorPickerComponent_div_3_Template_button_mousedown_2_listener","ctx_r7","remove","presets","isActive","MenuComponent_ng_container_1_ng_container_1_ngx_toggle_command_1_Template","item_r5","ɵɵclassMap","iconContainerClass","MenuComponent_ng_container_1_ng_container_1_ngx_insert_command_2_Template","ctx_r8","MenuComponent_ng_container_1_ng_container_1_ngx_link_3_Template","ctx_r9","MenuComponent_ng_container_1_ng_container_1_ngx_image_4_Template","ctx_r10","MenuComponent_ng_container_1_ng_container_1_ng_container_5_ngx_dropdown_1_Template","dropdownItem_r18","ctx_r17","dropdownContainerClass","key","value","MenuComponent_ng_container_1_ng_container_1_ng_container_5_Template","ɵɵelementContainerStart","ɵɵelementContainerEnd","ctx_r11","getDropdownItems","MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_6_Template","ctx_r12","MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_7_Template","ctx_r13","MenuComponent_ng_container_1_ng_container_1_div_8_Template","ctx_r14","seperatorClass","MenuComponent_ng_container_1_ng_container_1_Template","lastItem_r6","last","lastToolbarItem_r3","toggleCommands","insertCommands","isDropDown","MenuComponent_ng_container_1_Template","toolbarItem_r2","MenuComponent_ng_container_2_Template","ɵɵelementContainer","customMenuRef","_c7","_c8","BubbleComponent_ng_container_0_ng_container_1_div_1_Template","_r10","BubbleComponent_ng_container_0_ng_container_1_div_1_Template_div_mousedown_0_listener","item_r4","activeItems","execulableItems","getTitle","getIcon","ɵɵsanitizeHtml","BubbleComponent_ng_container_0_ng_container_1_div_2_Template","BubbleComponent_ng_container_0_ng_container_1_Template","lastItem_r5","lastToolbarItem_r2","BubbleComponent_ng_container_0_Template","toolbarItem_r1","FloatingMenuComponent_ng_container_3_Template","editor","editablePlugin","editable","state","init","apply","tr","previousVal","getMeta","props","getState","attributes","isEnabled","class","PLACEHOLDER_CLASSNAME","placeholderPlugin","placeholder","decorations","doc","textContent","childCount","empty","decorate","node","pos","type","isBlock","length","from","to","nodeSize","placeholderNode","attrs","push","descendants","create","attributesPlugin","focusPlugin","cb","handleDOMEvents","focus","blurPlugin","blur","ImageViewComponent","constructor","alt","title","outerWidth","selected","imageResize","e","direction","preventDefault","resizeImage","evt","startX","pageX","startWidth","imgEl","nativeElement","clientWidth","isLeftResize","width","window","getComputedStyle","view","dom","editorWidth","parseInt","onMouseMove","currentX","diffInPx","computedWidth","onMouseUp","document","removeEventListener","emit","addEventListener","_","ɵfac","ImageViewComponent_Factory","t","_2","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","ImageViewComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","outputs","decls","vars","consts","template","ImageViewComponent_Template","ɵɵstyleProp","ɵɵsanitizeUrl","dependencies","NgClass","NgIf","styles","ngDevMode","ɵsetClassMetadata","args","selector","static","ImageRezieView","getPos","injector","updating","handleResize","dispatch","transaction","setNodeMarkup","undefined","imageComponentRef","instance","resolvedPos","resolve","newSelection","setSelection","applicationRef","get","environmentInjector","attachView","hostView","setNodeAttributes","location","resizeSubscription","subscribe","computeChanges","prevAttrs","newAttrs","JSON","stringify","update","changed","ignoreMutation","selectNode","deselectNode","destroy","unsubscribe","detachView","imageResizePlugin","nodeViews","image","HTTP_LINK_REGEX","linkify","fragment","linkified","forEach","child","isText","match","exec","start","index","end","link","cut","urlText","slice","mark","addToSet","copy","content","fromArray","linkifyPlugin","transformPasted","openStart","openEnd","isString","getTrustedTypes","trustedTypes","isTrustedHtml","isHTML","isHtml","emptyDoc","toHTML","json","inputSchema","schema$1","contentNode","nodeFromJSON","html","fromSchema","serializeFragment","div","createElement","appendChild","innerHTML","toDoc","el","parse","toJSON","parseContent","docJson","NgxEditorComponent","renderer","elementRef","focusOut","focusIn","onChange","onTouched","writeValue","outputFormat","setContent","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","setMeta","setProperty","handleChange","jsonDoc","setPlaceholder","registerPlugins","registerPlugin","features","linkOnPaste","ngOnInit","ngxEditor","valueChanges","pipe","ngOnChanges","changes","isFirstChange","currentValue","ngOnDestroy","next","complete","NgxEditorComponent_Factory","ɵɵdirectiveInject","Renderer2","Injector","ElementRef","NgxEditorComponent_Query","ɵɵProvidersFeature","provide","useExisting","multi","ɵɵNgOnChangesFeature","ngContentSelectors","NgxEditorComponent_Template","ɵɵprojectionDef","ɵɵprojection","encapsulation","providers","None","MenuService","customMenuRefChange","setCustomMenuRef","c","MenuService_Factory","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","Mark","name","toggle","canExecute","Blockqote","HorizontalRule","insert","replaceSelectionWith","scrollIntoView","ListItem","isBulletList","getType","Heading","level","selection","nodePos","$from","before","nodeAt","nodesInSelection","supportedNodes","filter","acitveNode","find","Boolean","TextAlign","align","applicable","nodesBetween","nodeType","docChanged","active","defaultOptions","strict","Link$1","Link","linkAttrs","target","options","testAttrs","Image$1","Image","imageAttrs","createAndFill","anchor","$anchor","nodeBefore","TextColor$1","TextColor","attrName","isAtom","isLeaf","getActiveColors","colors","map","SAFE_MARKS","FormatClear","ranges","Object","entries","markType","range","$to","STRONG","EM","CODE","UNDERLINE","STRIKE","BLOCKQUOTE","HORIZONTAL_RULE","FORMAT_CLEAR","UL","OL","H1","H2","H3","H4","H5","H6","ALIGN_LEFT","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_JUSTIFY","LINK","IMAGE","TEXT_COLOR","TEXT_BACKGROUND_COLOR","ToggleCommands","bold","italic","code","underline","strike","blockquote","bullet_list","ordered_list","h1","h2","h3","h4","h5","h6","align_left","align_center","align_right","align_justify","InsertCommands","horizontal_rule","format_clear","TextBackgroundColor","defaults","heading","text_color","background_color","insertImage","url","openInNewTab","altText","Locals","newLocals","locals","orderedList","bulletList","quote","unlink","alignLeft","alignCenter","alignRight","alignJustify","textColor","colorFill","horizontalRule","formatClear","DEFAULT_ICON_HEIGHT","DEFAULT_ICON_WIDTH","DEFAULT_ICON_FILL","icons","color_fill","path","Icon","fill","fullPath","NgxEditorServiceConfig","NgxEditorServiceConfig_Factory","NgxEditorService","config","icon","NgxEditorService_Factory","ɵɵinject","decorators","provideMyServiceOptions","SanitizeHtmlPipe","sanitizer","transform","bypassSecurityTrustHtml","SanitizeHtmlPipe_Factory","DomSanitizer","ɵpipe","ɵɵdefinePipe","pure","ToggleCommandComponent","toolbarItem","ngxeService","menuService","disabled","command","button","editorView","updateSubscription","ToggleCommandComponent_Factory","ToggleCommandComponent_Template","ToggleCommandComponent_Template_div_mousedown_0_listener","ɵɵclassProp","AsyncPipe","InsertCommandComponent","InsertCommandComponent_Factory","InsertCommandComponent_Template","InsertCommandComponent_Template_div_mousedown_0_listener","LinkComponent","showPopup","setText","selectedText","textBetween","patchValue","disable","onDocumentClick","contains","hideForm","reset","enable","onMouseDown","getRawValue","required","pattern","linkValidationPattern","LinkComponent_Factory","hostBindings","LinkComponent_HostBindings","LinkComponent_mousedown_HostBindingHandler","ɵɵresolveDocument","LinkComponent_Template","LinkComponent_Template_div_mousedown_0_listener","ɵNgNoValidate","DefaultValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","DropdownComponent","isDropdownOpen","item","isSelected","isDropdownDisabled","toggleDropdown","DropdownComponent_Factory","DropdownComponent_HostBindings","DropdownComponent_mousedown_HostBindingHandler","group","DropdownComponent_Template","DropdownComponent_Template_div_mousedown_0_listener","NgForOf","ImageComponent","fillForm","setValue","ImageComponent_Factory","ImageComponent_HostBindings","ImageComponent_mousedown_HostBindingHandler","ImageComponent_Template","ImageComponent_Template_div_mousedown_0_listener","ColorPickerComponent","hexcolor","replace","r","substring","g","b","yiq","hidePopup","togglePopup","hasFocus","ColorPickerComponent_Factory","ColorPickerComponent_HostBindings","ColorPickerComponent_mousedown_HostBindingHandler","ColorPickerComponent_Template","ColorPickerComponent_Template_div_mousedown_0_listener","NgStyle","DEFAULT_TOOLBAR","TOOLBAR_MINIMAL","TOOLBAR_FULL","DEFAULT_COLOR_PRESETS","MenuComponent","toolbar","colorPresets","dropdownPlacement","col","row","Math","floor","MenuComponent_Factory","MenuComponent_Template","NgTemplateOutlet","KeyValuePipe","BubbleComponent","sanitizeHTML","commandName","stopPropagation","BubbleComponent_Factory","BubbleComponent_Template","FloatingMenuComponent","autoPlace","posLeft","posTop","showMenu","dragging","display","visibility","opacity","top","left","nodeName","onKeyDown","hide","useUpdate","onKeyUp","show","calculateBubblePosition","_this","_asyncToGenerator","coordsAtPos","selectionElement","getBoundingClientRect","nodeDOM","bottom","right","x","y","height","bubbleEl","placement","middleware","boundary","padding","allowedPlacements","middlewareArgs","overflow","canShowMenu","then","leading","trailing","FloatingMenuComponent_Factory","hostVars","FloatingMenuComponent_HostBindings","FloatingMenuComponent_mousedown_HostBindingHandler","FloatingMenuComponent_keydown_HostBindingHandler","FloatingMenuComponent_mouseup_HostBindingHandler","FloatingMenuComponent_keyup_HostBindingHandler","ɵɵstyleMap","FloatingMenuComponent_Template","_r0","ɵɵreference","children","MenuModule","MenuModule_Factory","ɵmod","ɵɵdefineNgModule","_3","ɵinj","ɵɵdefineInjector","imports","declarations","exports","NGX_EDITOR_CONFIG_TOKEN","defaultConfig","NgxEditorModule","forRoot","ngModule","useValue","useFactory","deps","forChild","NgxEditorModule_Factory","isEmptyInputValue","hasValidLength","isDocEmpty","firstChild","isTextblock","size","userSchema","control","isEmpty","maxLength","maxlength","requiredLength","actualLength","minLength","minlength","execMark","EditorCommands","applyTrx","forceEmit","eq","updateState","position","atStart","atEnd","insertText","insertNewLine","newLineCommands","toggleBold","italics","toggleItalics","toggleUnderline","toggleStrike","toggleCode","toggleOrderedList","toggleBulletList","toggleHeading","updateLink","removeTextColor","removeBackgroundColor","p","insertHTML","element","trim","parseSlice","replaceRange","isMacOs","navigator","test","platform","blockQuoteRule","orderedListRule","order","Number","bulletListRule","codeBlockRule","headingRule","maxLevel","RegExp","boldRule","emRule","buildInputRules","rules","concat","getKeyboardShortcuts","historyKeyMap","plugins","br","getDefaultPlugins","keyboardShortcuts","defaultFeatures","DEFAULT_OPTIONS","handleScrollToSelection","Editor","valueChangesSubject","updateSubject","createEditor","asObservable","commands","handleTransactions","defaultPlugins","dispatchTransaction","bind","newDoc","replaceWith","plugin","newState","reconfigure"],"sources":["C:/Repository/Jupiter/juno-app/node_modules/ngx-editor/fesm2022/ngx-editor.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, ApplicationRef, createComponent, forwardRef, ViewEncapsulation, Injectable, Optional, Pipe, HostListener, HostBinding, NgModule, InjectionToken } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormGroup, FormControl, Validators as Validators$1, ReactiveFormsModule } from '@angular/forms';\nimport { Subject, isObservable, of, fromEvent, asyncScheduler } from 'rxjs';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { NgxEditorError, isNil } from 'ngx-editor/utils';\nimport { Plugin, PluginKey, NodeSelection, Selection, EditorState } from 'prosemirror-state';\nimport { DecorationSet, Decoration, EditorView } from 'prosemirror-view';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Fragment, Slice, DOMSerializer, DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor/schema';\nexport { marks, nodes, schema } from 'ngx-editor/schema';\nimport { toggleMark, lift, wrapIn, setBlockType, newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock, chainCommands, exitCode, baseKeymap } from 'prosemirror-commands';\nimport { applyMark, removeLink, removeMark } from 'ngx-editor/commands';\nimport { isMarkActive, isNodeActive, canInsert, getSelectionNodes, getSelectionMarks, markInputRule } from 'ngx-editor/helpers';\nimport { liftListItem, wrapInList, splitListItem, sinkListItem } from 'prosemirror-schema-list';\nimport * as i1 from '@angular/platform-browser';\nimport { computePosition, offset, autoPlacement, detectOverflow } from '@floating-ui/dom';\nimport { keymap } from 'prosemirror-keymap';\nimport { undo, redo, history } from 'prosemirror-history';\nimport { wrappingInputRule, textblockTypeInputRule, smartQuotes, ellipsis, emDash, inputRules } from 'prosemirror-inputrules';\n\nconst editablePlugin = (editable = true) => {\n    return new Plugin({\n        key: new PluginKey('editable'),\n        state: {\n            init() {\n                return editable;\n            },\n            apply(tr, previousVal) {\n                return tr.getMeta('UPDATE_EDITABLE') ?? previousVal;\n            },\n        },\n        props: {\n            editable(state) {\n                return this.getState(state);\n            },\n            attributes(state) {\n                const isEnabled = this.getState(state);\n                if (isEnabled) {\n                    return null;\n                }\n                return {\n                    class: 'NgxEditor__Content--Disabled',\n                };\n            },\n        },\n    });\n};\n\nconst PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';\nconst placeholderPlugin = (text) => {\n    return new Plugin({\n        key: new PluginKey('placeholder'),\n        state: {\n            init() {\n                return text ?? '';\n            },\n            apply(tr, previousVal) {\n                const placeholder = tr.getMeta('UPDATE_PLACEHOLDER') ?? previousVal;\n                return placeholder;\n            },\n        },\n        props: {\n            decorations(state) {\n                const { doc } = state;\n                const { textContent, childCount } = doc;\n                const placeholder = this.getState(state);\n                if (!placeholder || childCount > 1) {\n                    return DecorationSet.empty;\n                }\n                const decorations = [];\n                const decorate = (node, pos) => {\n                    if (node.type.isBlock && node.childCount === 0 && textContent.length === 0) {\n                        const from = pos;\n                        const to = pos + node.nodeSize;\n                        const placeholderNode = Decoration.node(from, to, {\n                            'class': PLACEHOLDER_CLASSNAME,\n                            'data-placeholder': placeholder,\n                            'data-align': node.attrs['align'] ?? null,\n                        });\n                        decorations.push(placeholderNode);\n                    }\n                    return false;\n                };\n                doc.descendants(decorate);\n                return DecorationSet.create(doc, decorations);\n            },\n        },\n    });\n};\n\nconst attributesPlugin = (attributes = {}) => {\n    return new Plugin({\n        key: new PluginKey('attributes'),\n        props: {\n            attributes,\n        },\n    });\n};\n\nconst focusPlugin = (cb) => {\n    return new Plugin({\n        key: new PluginKey('focus'),\n        props: {\n            handleDOMEvents: {\n                focus: () => {\n                    cb();\n                    return false;\n                },\n            },\n        },\n    });\n};\n\nconst blurPlugin = (cb) => {\n    return new Plugin({\n        key: new PluginKey('blur'),\n        props: {\n            handleDOMEvents: {\n                blur: () => {\n                    cb();\n                    return false;\n                },\n            },\n        },\n    });\n};\n\nclass ImageViewComponent {\n    constructor() {\n        this.alt = '';\n        this.title = '';\n        this.outerWidth = '';\n        this.selected = false;\n        this.imageResize = new EventEmitter();\n    }\n    startResizing(e, direction) {\n        e.preventDefault();\n        this.resizeImage(e, direction);\n    }\n    resizeImage(evt, direction) {\n        const startX = evt.pageX;\n        const startWidth = this.imgEl.nativeElement.clientWidth;\n        const isLeftResize = direction === 'left';\n        const { width } = window.getComputedStyle(this.view.dom);\n        const editorWidth = parseInt(width, 10);\n        const onMouseMove = (e) => {\n            const currentX = e.pageX;\n            const diffInPx = currentX - startX;\n            const computedWidth = isLeftResize ? startWidth - diffInPx : startWidth + diffInPx;\n            // prevent image overflow the editor\n            // prevent resizng below 20px\n            if (computedWidth > editorWidth || computedWidth < 20) {\n                return;\n            }\n            this.outerWidth = `${computedWidth}px`;\n        };\n        const onMouseUp = (e) => {\n            e.preventDefault();\n            document.removeEventListener('mousemove', onMouseMove);\n            document.removeEventListener('mouseup', onMouseUp);\n            this.imageResize.emit();\n        };\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: ImageViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: ImageViewComponent, selector: \"ngx-image-view\", inputs: { src: \"src\", alt: \"alt\", title: \"title\", outerWidth: \"outerWidth\", selected: \"selected\", view: \"view\" }, outputs: { imageResize: \"imageResize\" }, viewQueries: [{ propertyName: \"imgEl\", first: true, predicate: [\"imgEl\"], descendants: true, static: true }], ngImport: i0, template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: ImageViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-image-view', template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"] }]\n        }], propDecorators: { src: [{\n                type: Input\n            }], alt: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], outerWidth: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], imageResize: [{\n                type: Output\n            }], imgEl: [{\n                type: ViewChild,\n                args: ['imgEl', { static: true }]\n            }] } });\n\nclass ImageRezieView {\n    constructor(node, view, getPos, injector) {\n        this.updating = false;\n        this.handleResize = () => {\n            if (this.updating) {\n                return;\n            }\n            const { state, dispatch } = this.view;\n            const { tr } = state;\n            const transaction = tr.setNodeMarkup(this.getPos(), undefined, {\n                ...this.node.attrs,\n                width: this.imageComponentRef.instance.outerWidth,\n            });\n            const resolvedPos = transaction.doc.resolve(this.getPos());\n            const newSelection = new NodeSelection(resolvedPos);\n            transaction.setSelection(newSelection);\n            dispatch(transaction);\n        };\n        this.applicationRef = injector.get(ApplicationRef);\n        // create component ref\n        this.imageComponentRef = createComponent(ImageViewComponent, {\n            environmentInjector: this.applicationRef.injector,\n        });\n        // Attach to the view so that the change detector knows to run\n        this.applicationRef.attachView(this.imageComponentRef.hostView);\n        this.setNodeAttributes(node.attrs);\n        this.imageComponentRef.instance.view = view;\n        this.dom = this.imageComponentRef.location.nativeElement;\n        this.view = view;\n        this.node = node;\n        this.getPos = getPos;\n        this.resizeSubscription = this.imageComponentRef.instance.imageResize.subscribe(() => {\n            this.handleResize();\n        });\n    }\n    computeChanges(prevAttrs, newAttrs) {\n        return JSON.stringify(prevAttrs) === JSON.stringify(newAttrs);\n    }\n    setNodeAttributes(attrs) {\n        this.imageComponentRef.instance.src = attrs['src'];\n        this.imageComponentRef.instance.alt = attrs['alt'];\n        this.imageComponentRef.instance.title = attrs['title'];\n        this.imageComponentRef.instance.outerWidth = attrs['width'];\n    }\n    update(node) {\n        if (node.type !== this.node.type) {\n            return false;\n        }\n        this.node = node;\n        const changed = this.computeChanges(this.node.attrs, node.attrs);\n        if (changed) {\n            this.updating = true;\n            this.setNodeAttributes(node.attrs);\n            this.updating = false;\n        }\n        return true;\n    }\n    ignoreMutation() {\n        return true;\n    }\n    selectNode() {\n        this.imageComponentRef.instance.selected = true;\n    }\n    deselectNode() {\n        this.imageComponentRef.instance.selected = false;\n    }\n    destroy() {\n        this.resizeSubscription.unsubscribe();\n        this.applicationRef.detachView(this.imageComponentRef.hostView);\n    }\n}\nconst imageResizePlugin = (injector) => {\n    return new Plugin({\n        key: new PluginKey('image-resize'),\n        props: {\n            nodeViews: {\n                image: (node, view, getPos) => {\n                    return new ImageRezieView(node, view, getPos, injector);\n                },\n            },\n        },\n    });\n};\n\nconst HTTP_LINK_REGEX = /(?:https?:\\/\\/)?[\\w-]+(?:\\.[\\w-]+)+\\.?(?:\\d+)?(?:\\/\\S*)?$/;\nconst linkify = (fragment) => {\n    const linkified = [];\n    fragment.forEach((child) => {\n        if (child.isText) {\n            const text = child.text;\n            let pos = 0;\n            const match = HTTP_LINK_REGEX.exec(text);\n            if (match) {\n                const start = match.index;\n                const end = start + match[0].length;\n                const { link } = child.type.schema.marks;\n                if (start > 0) {\n                    linkified.push(child.cut(pos, start));\n                }\n                const urlText = text.slice(start, end);\n                linkified.push(child.cut(start, end).mark(link.create({ href: urlText }).addToSet(child.marks)));\n                pos = end;\n            }\n            if (pos < text.length) {\n                linkified.push(child.cut(pos));\n            }\n        }\n        else {\n            linkified.push(child.copy(linkify(child.content)));\n        }\n    });\n    return Fragment.fromArray(linkified);\n};\nconst linkifyPlugin = () => {\n    return new Plugin({\n        key: new PluginKey('linkify'),\n        props: {\n            transformPasted: (slice) => {\n                return new Slice(linkify(slice.content), slice.openStart, slice.openEnd);\n            },\n        },\n    });\n};\n\nconst isString = (value) => {\n    return typeof value === 'string';\n};\n\nconst getTrustedTypes = () => {\n    return window.trustedTypes;\n};\nconst isTrustedHtml = (value) => {\n    return getTrustedTypes()?.isHTML(value) ?? false;\n};\nconst isHtml = (value) => {\n    return isString(value) || isTrustedHtml(value);\n};\n\nconst emptyDoc = {\n    type: 'doc',\n    content: [\n        {\n            type: 'paragraph',\n        },\n    ],\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst toHTML = (json, inputSchema) => {\n    const schema$1 = inputSchema ?? schema;\n    const contentNode = schema$1.nodeFromJSON(json);\n    const html = DOMSerializer.fromSchema(schema$1).serializeFragment(contentNode.content);\n    const div = document.createElement('div');\n    div.appendChild(html);\n    return div.innerHTML;\n};\nconst toDoc = (html, inputSchema) => {\n    const schema$1 = inputSchema ?? schema;\n    const el = document.createElement('div');\n    el.innerHTML = html;\n    return DOMParser.fromSchema(schema$1).parse(el).toJSON();\n};\nconst parseContent = (value, schema) => {\n    if (!value) {\n        return schema.nodeFromJSON(emptyDoc);\n    }\n    if (!isHtml(value)) {\n        return schema.nodeFromJSON(value);\n    }\n    const docJson = toDoc(value, schema);\n    return schema.nodeFromJSON(docJson);\n};\n\nclass NgxEditorComponent {\n    constructor(renderer, injector, elementRef) {\n        this.renderer = renderer;\n        this.injector = injector;\n        this.elementRef = elementRef;\n        this.placeholder = 'Type Here...';\n        this.focusOut = new EventEmitter();\n        this.focusIn = new EventEmitter();\n        this.unsubscribe = new Subject();\n        this.onChange = () => { };\n        this.onTouched = () => { };\n    }\n    writeValue(value) {\n        if (!this.outputFormat && isHtml(value)) {\n            this.outputFormat = 'html';\n        }\n        this.editor.setContent(value ?? emptyDoc);\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.setMeta('UPDATE_EDITABLE', !isDisabled);\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    handleChange(jsonDoc) {\n        if (this.outputFormat === 'html') {\n            const html = toHTML(jsonDoc, this.editor.schema);\n            this.onChange(html);\n            return;\n        }\n        this.onChange(jsonDoc);\n    }\n    setMeta(key, value) {\n        const { dispatch, state: { tr } } = this.editor.view;\n        dispatch(tr.setMeta(key, value));\n    }\n    setPlaceholder(placeholder) {\n        this.setMeta('UPDATE_PLACEHOLDER', placeholder);\n    }\n    registerPlugins() {\n        this.editor.registerPlugin(editablePlugin());\n        this.editor.registerPlugin(placeholderPlugin(this.placeholder));\n        this.editor.registerPlugin(attributesPlugin({\n            class: 'NgxEditor__Content',\n        }));\n        this.editor.registerPlugin(focusPlugin(() => {\n            this.focusIn.emit();\n        }));\n        this.editor.registerPlugin(blurPlugin(() => {\n            this.focusOut.emit();\n            this.onTouched();\n        }));\n        if (this.editor.features.resizeImage) {\n            this.editor.registerPlugin(imageResizePlugin(this.injector));\n        }\n        if (this.editor.features.linkOnPaste) {\n            this.editor.registerPlugin(linkifyPlugin());\n        }\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new NgxEditorError('Required editor instance for initializing editor component');\n        }\n        this.registerPlugins();\n        this.renderer.appendChild(this.ngxEditor.nativeElement, this.editor.view.dom);\n        this.editor.valueChanges\n            .pipe(takeUntil(this.unsubscribe))\n            .subscribe((jsonDoc) => {\n            this.handleChange(jsonDoc);\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes['placeholder'] && !changes['placeholder'].isFirstChange()) {\n            this.setPlaceholder(changes['placeholder'].currentValue);\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorComponent, deps: [{ token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: NgxEditorComponent, selector: \"ngx-editor\", inputs: { editor: \"editor\", outputFormat: \"outputFormat\", placeholder: \"placeholder\" }, outputs: { focusOut: \"focusOut\", focusIn: \"focusIn\" }, providers: [{\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(() => NgxEditorComponent),\n                multi: true,\n            }], viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active,.NgxEditor__MenuItem .NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown .NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown .NgxEditor__Dropdown--Open{color:#1a73e8;background-color:#e8f0fe}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"], encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor', providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NgxEditorComponent),\n                            multi: true,\n                        }], encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active,.NgxEditor__MenuItem .NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown .NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown .NgxEditor__Dropdown--Open{color:#1a73e8;background-color:#e8f0fe}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ElementRef }]; }, propDecorators: { ngxEditor: [{\n                type: ViewChild,\n                args: ['ngxEditor', { static: true }]\n            }], editor: [{\n                type: Input\n            }], outputFormat: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], focusOut: [{\n                type: Output\n            }], focusIn: [{\n                type: Output\n            }] } });\n\nclass MenuService {\n    constructor() {\n        this.customMenuRefChange = new Subject();\n    }\n    setCustomMenuRef(c) {\n        this.customMenuRefChange.next(c);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: MenuService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: MenuService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: MenuService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass Mark {\n    constructor(name) {\n        this.name = name;\n    }\n    apply() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return applyMark(type)(state, dispatch);\n        };\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return toggleMark(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.marks[this.name];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass Blockqote {\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.nodes['blockquote'];\n            if (!type) {\n                return false;\n            }\n            if (this.isActive(state)) {\n                return lift(state, dispatch);\n            }\n            return wrapIn(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.nodes['blockquote'];\n        if (!type) {\n            return false;\n        }\n        return isNodeActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass HorizontalRule {\n    insert() {\n        return (state, dispatch) => {\n            const { schema, tr } = state;\n            const type = schema.nodes['horizontal_rule'];\n            if (!type) {\n                return false;\n            }\n            dispatch(tr.replaceSelectionWith(type.create()).scrollIntoView());\n            return true;\n        };\n    }\n    canExecute(state) {\n        return canInsert(state, state.schema.nodes['horizontal_rule']);\n    }\n}\n\nclass ListItem {\n    constructor(isBulletList = false) {\n        this.isBulletList = false;\n        this.isBulletList = isBulletList;\n    }\n    getType(schema) {\n        return this.isBulletList ? schema.nodes['bullet_list'] : schema.nodes['ordered_list'];\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = this.getType(schema);\n            if (!type) {\n                return false;\n            }\n            if (this.isActive(state)) {\n                return liftListItem(schema.nodes['list_item'])(state, dispatch);\n            }\n            return wrapInList(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = this.getType(schema);\n        if (!type) {\n            return false;\n        }\n        return isNodeActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass Heading {\n    constructor(level) {\n        this.level = level;\n    }\n    apply() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.nodes['heading'];\n            if (!type) {\n                return false;\n            }\n            return setBlockType(type)(state, dispatch);\n        };\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema, selection, doc } = state;\n            const type = schema.nodes['heading'];\n            if (!type) {\n                return false;\n            }\n            const nodePos = selection.$from.before(1);\n            const node = doc.nodeAt(nodePos);\n            const attrs = node?.attrs ?? {};\n            if (this.isActive(state)) {\n                return setBlockType(schema.nodes['paragraph'], attrs)(state, dispatch);\n            }\n            return setBlockType(type, { ...attrs, level: this.level })(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const nodesInSelection = getSelectionNodes(state);\n        const type = schema.nodes['heading'];\n        if (!type) {\n            return false;\n        }\n        const supportedNodes = [\n            type,\n            schema.nodes['text'],\n            schema.nodes['blockquote'],\n        ];\n        // heading is a text node\n        // don't mark as active when it has more nodes\n        const nodes = nodesInSelection.filter((node) => {\n            return supportedNodes.includes(node.type);\n        });\n        const acitveNode = nodes.find((node) => {\n            return node.attrs['level'] === this.level;\n        });\n        return Boolean(acitveNode);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass TextAlign {\n    constructor(align) {\n        this.align = align;\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { doc, selection, tr, schema } = state;\n            const { from, to } = selection;\n            let applicable = false;\n            doc.nodesBetween(from, to, (node, pos) => {\n                const nodeType = node.type;\n                if ([schema.nodes['paragraph'], schema.nodes['heading']].includes(nodeType)) {\n                    applicable = true;\n                    tr.setNodeMarkup(pos, nodeType, { ...node.attrs, align: this.align });\n                }\n                return true;\n            });\n            if (!applicable) {\n                return false;\n            }\n            if (tr.docChanged) {\n                dispatch?.(tr);\n            }\n            return true;\n        };\n    }\n    isActive(state) {\n        const nodes = getSelectionNodes(state);\n        const active = nodes.find((node) => {\n            return node.attrs['align'] === this.align;\n        });\n        return Boolean(active);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nconst defaultOptions = {\n    strict: true,\n};\nlet Link$1 = class Link {\n    update(attrs) {\n        return (state, dispatch) => {\n            const { schema, selection } = state;\n            const type = schema.marks['link'];\n            if (!type) {\n                return false;\n            }\n            if (selection.empty) {\n                return false;\n            }\n            return toggleMark(type, attrs)(state, dispatch);\n        };\n    }\n    insert(text, attrs) {\n        return (state, dispatch) => {\n            const { schema, tr } = state;\n            const type = schema.marks['link'];\n            if (!type) {\n                return false;\n            }\n            const linkAttrs = {\n                href: attrs.href,\n                title: attrs.title ?? text,\n                target: attrs.target ?? '_blank',\n            };\n            const node = schema.text(text, [schema.marks['link'].create(linkAttrs)]);\n            tr.replaceSelectionWith(node, false)\n                .scrollIntoView();\n            if (tr.docChanged) {\n                dispatch?.(tr);\n                return true;\n            }\n            return false;\n        };\n    }\n    isActive(state, options = defaultOptions) {\n        if (options.strict) {\n            return true;\n        }\n        const { schema } = state;\n        const type = schema.marks['link'];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    remove(state, dispatch) {\n        return removeLink()(state, dispatch);\n    }\n    canExecute(state) {\n        const testAttrs = {\n            href: '',\n        };\n        return this.insert('Exec', testAttrs)(state) || this.update(testAttrs)(state);\n    }\n};\n\nlet Image$1 = class Image {\n    insert(src, attrs) {\n        return (state, dispatch) => {\n            const { schema, tr, selection } = state;\n            const type = schema.nodes['image'];\n            if (!type) {\n                return false;\n            }\n            const imageAttrs = {\n                width: null,\n                src,\n                ...attrs,\n            };\n            if (!imageAttrs.width && selection instanceof NodeSelection && selection.node.type === type) {\n                imageAttrs.width = selection.node.attrs['width'];\n            }\n            tr.replaceSelectionWith(type.createAndFill(imageAttrs));\n            const resolvedPos = tr.doc.resolve(tr.selection.anchor - tr.selection.$anchor.nodeBefore.nodeSize);\n            tr\n                .setSelection(new NodeSelection(resolvedPos))\n                .scrollIntoView();\n            if (tr.docChanged) {\n                dispatch?.(tr);\n                return true;\n            }\n            return false;\n        };\n    }\n    isActive(state) {\n        const { selection } = state;\n        if (selection instanceof NodeSelection) {\n            return selection.node.type.name === 'image';\n        }\n        return false;\n    }\n};\n\nlet TextColor$1 = class TextColor {\n    constructor(name, attrName = 'color') {\n        this.name = name;\n        this.attrName = attrName;\n    }\n    apply(attrs) {\n        return (state, dispatch) => {\n            const { schema, selection, doc } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            const { from, to, empty } = selection;\n            if (!empty && (from + 1 === to)) {\n                const node = doc.nodeAt(from);\n                if (node?.isAtom && !node.isText && node.isLeaf) {\n                    // An atomic node (e.g. Image) is selected.\n                    return false;\n                }\n            }\n            return applyMark(type, attrs)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.marks[this.name];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    getActiveColors(state) {\n        if (!this.isActive(state)) {\n            return [];\n        }\n        const { schema } = state;\n        const marks = getSelectionMarks(state);\n        const colors = marks\n            .filter((mark) => mark.type === schema.marks[this.name])\n            .map((mark) => {\n            return mark.attrs[this.attrName];\n        })\n            .filter(Boolean);\n        return colors;\n    }\n    remove() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return removeMark(type)(state, dispatch);\n        };\n    }\n    canExecute(state) {\n        const attrs = this.name === 'text_color' ? { color: '' } : { backgroundColor: '' };\n        return this.apply(attrs)(state);\n    }\n};\n\nconst SAFE_MARKS = ['link'];\nclass FormatClear {\n    insert() {\n        return (state, dispatch) => {\n            const { tr } = state;\n            const { ranges, empty } = tr.selection;\n            if (empty) {\n                return true;\n            }\n            Object.entries(state.schema.marks).forEach(([markType, mark]) => {\n                if (SAFE_MARKS.includes(markType)) {\n                    return;\n                }\n                ranges.forEach((range) => {\n                    tr.removeMark(range.$from.pos, range.$to.pos, mark);\n                });\n            });\n            dispatch(tr);\n            return true;\n        };\n    }\n    canExecute() {\n        return true;\n    }\n}\n\nconst STRONG = new Mark('strong');\nconst EM = new Mark('em');\nconst CODE = new Mark('code');\nconst UNDERLINE = new Mark('u');\nconst STRIKE = new Mark('s');\nconst BLOCKQUOTE = new Blockqote();\nconst HORIZONTAL_RULE = new HorizontalRule();\nconst FORMAT_CLEAR = new FormatClear();\nconst UL = new ListItem(true);\nconst OL = new ListItem(false);\nconst H1 = new Heading(1);\nconst H2 = new Heading(2);\nconst H3 = new Heading(3);\nconst H4 = new Heading(4);\nconst H5 = new Heading(5);\nconst H6 = new Heading(6);\nconst ALIGN_LEFT = new TextAlign('left');\nconst ALIGN_CENTER = new TextAlign('center');\nconst ALIGN_RIGHT = new TextAlign('right');\nconst ALIGN_JUSTIFY = new TextAlign('justify');\nconst LINK = new Link$1();\nconst IMAGE = new Image$1();\nconst TEXT_COLOR = new TextColor$1('text_color', 'color');\nconst TEXT_BACKGROUND_COLOR = new TextColor$1('text_background_color', 'backgroundColor');\n\nconst ToggleCommands = {\n    bold: STRONG,\n    italic: EM,\n    code: CODE,\n    underline: UNDERLINE,\n    strike: STRIKE,\n    blockquote: BLOCKQUOTE,\n    bullet_list: UL,\n    ordered_list: OL,\n    h1: H1,\n    h2: H2,\n    h3: H3,\n    h4: H4,\n    h5: H5,\n    h6: H6,\n    align_left: ALIGN_LEFT,\n    align_center: ALIGN_CENTER,\n    align_right: ALIGN_RIGHT,\n    align_justify: ALIGN_JUSTIFY,\n};\nconst InsertCommands = {\n    horizontal_rule: HORIZONTAL_RULE,\n    format_clear: FORMAT_CLEAR,\n};\nconst Link = LINK;\nconst Image = IMAGE;\nconst TextColor = TEXT_COLOR;\nconst TextBackgroundColor = TEXT_BACKGROUND_COLOR;\n\nconst defaults = {\n    // menu\n    bold: 'Bold',\n    italic: 'Italic',\n    code: 'Code',\n    underline: 'Underline',\n    strike: 'Strike',\n    blockquote: 'Blockquote',\n    bullet_list: 'Bullet List',\n    ordered_list: 'Ordered List',\n    heading: 'Heading',\n    h1: 'Header 1',\n    h2: 'Header 2',\n    h3: 'Header 3',\n    h4: 'Header 4',\n    h5: 'Header 5',\n    h6: 'Header 6',\n    align_left: 'Left Align',\n    align_center: 'Center Align',\n    align_right: 'Right Align',\n    align_justify: 'Justify',\n    text_color: 'Text Color',\n    background_color: 'Background Color',\n    horizontal_rule: 'Horizontal rule',\n    format_clear: 'Clear Formatting',\n    insertLink: 'Insert Link',\n    removeLink: 'Remove Link',\n    insertImage: 'Insert Image',\n    // pupups, forms, others...\n    url: 'URL',\n    text: 'Text',\n    openInNewTab: 'Open in new tab',\n    insert: 'Insert',\n    altText: 'Alt Text',\n    title: 'Title',\n    remove: 'Remove',\n};\nclass Locals {\n    constructor(newLocals = {}) {\n        this.locals = defaults;\n        this.get = (key) => {\n            const value = this.locals[key];\n            if (value) {\n                return isObservable(value) ? value : of(value);\n            }\n            return of('');\n        };\n        this.locals = { ...defaults, ...newLocals };\n    }\n}\n\nvar bold = `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n`;\n\nvar italic = `\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\n\nvar code = `\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\n\nvar underline = `\n<path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n`;\n\nvar strike = `\n<path d=\"M6.85,7.08C6.85,4.37,9.45,3,12.24,3c1.64,0,3,0.49,3.9,1.28c0.77,0.65,1.46,1.73,1.46,3.24h-3.01 c0-0.31-0.05-0.59-0.15-0.85c-0.29-0.86-1.2-1.28-2.25-1.28c-1.86,0-2.34,1.02-2.34,1.7c0,0.48,0.25,0.88,0.74,1.21 C10.97,8.55,11.36,8.78,12,9H7.39C7.18,8.66,6.85,8.11,6.85,7.08z M21,12v-2H3v2h9.62c1.15,0.45,1.96,0.75,1.96,1.97 c0,1-0.81,1.67-2.28,1.67c-1.54,0-2.93-0.54-2.93-2.51H6.4c0,0.55,0.08,1.13,0.24,1.58c0.81,2.29,3.29,3.3,5.67,3.3 c2.27,0,5.3-0.89,5.3-4.05c0-0.3-0.01-1.16-0.48-1.94H21V12z\"/>\n`;\n\nvar orderedList = `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n`;\n\nvar bulletList = `\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\n\nvar quote = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\n\nvar link = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n`;\n\nvar unlink = `\n<path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/>\n`;\n\nvar image = `\n<path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/>\n`;\n\nvar alignLeft = `\n<path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignCenter = `\n<path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignRight = `\n<path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignJustify = `\n<path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"/>\n`;\n\nvar textColor = `\n<path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/>\n`;\n\nvar colorFill = `\n<path d=\"M16.56,8.94L7.62,0L6.21,1.41l2.38,2.38L3.44,8.94c-0.59,0.59-0.59,1.54,0,2.12l5.5,5.5C9.23,16.85,9.62,17,10,17 s0.77-0.15,1.06-0.44l5.5-5.5C17.15,10.48,17.15,9.53,16.56,8.94z M5.21,10L10,5.21L14.79,10H5.21z M19,11.5c0,0-2,2.17-2,3.5 c0,1.1,0.9,2,2,2s2-0.9,2-2C21,13.67,19,11.5,19,11.5z M2,20h20v4H2V20z\"/>\n`;\n\nvar horizontalRule = `\n  <g>\n    <rect fill=\"none\" fill-rule=\"evenodd\" height=\"24\" width=\"24\"/>\n    <rect fill-rule=\"evenodd\" height=\"2\" width=\"16\" x=\"4\" y=\"11\"/>\n  </g>\n`;\n\nvar formatClear = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.27 5L2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21 18 19.73 3.55 5.27 3.27 5zM6 5v.18L8.82 8h2.4l-.72 1.68 2.1 2.1L14.21 8H20V5H6z\"/>\n`;\n\n/* eslint-disable @typescript-eslint/naming-convention */\n// Icons source: https://material.io/\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\nconst DEFAULT_ICON_FILL = 'currentColor';\nconst icons = {\n    bold,\n    italic,\n    code,\n    underline,\n    strike,\n    ordered_list: orderedList,\n    bullet_list: bulletList,\n    blockquote: quote,\n    link,\n    unlink,\n    image,\n    align_left: alignLeft,\n    align_center: alignCenter,\n    align_right: alignRight,\n    align_justify: alignJustify,\n    text_color: textColor,\n    color_fill: colorFill,\n    horizontal_rule: horizontalRule,\n    format_clear: formatClear,\n    path: '<path></path>',\n};\nclass Icon {\n    static get(name, fill = DEFAULT_ICON_FILL) {\n        const fullPath = icons[name];\n        if (fullPath && (fullPath.includes('<path') || fullPath.includes('<g'))) {\n            return `\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=${fill}\n          height=${DEFAULT_ICON_HEIGHT}\n          width=${DEFAULT_ICON_WIDTH}\n        >\n          ${fullPath}\n        </svg>\n      `;\n        }\n        return fullPath;\n    }\n}\n\nclass NgxEditorServiceConfig {\n    constructor() {\n        this.locals = {};\n        this.icons = {};\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorServiceConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorServiceConfig, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorServiceConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorService {\n    constructor(config) {\n        this.config = config;\n    }\n    get locals() {\n        return new Locals(this.config.locals);\n    }\n    getIcon(icon) {\n        return this.config.icons[icon] ? this.config.icons[icon] : Icon.get(icon);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorService, deps: [{ token: NgxEditorServiceConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorService, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: NgxEditorServiceConfig, decorators: [{\n                    type: Optional\n                }] }]; } });\nconst provideMyServiceOptions = (config) => {\n    return {\n        locals: config.locals ?? {},\n        icons: config.icons ?? {},\n    };\n};\n\nclass SanitizeHtmlPipe {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    transform(value) {\n        if (isTrustedHtml(value)) {\n            return value;\n        }\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: SanitizeHtmlPipe, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe }); }\n    static { this.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"16.2.1\", ngImport: i0, type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: SanitizeHtmlPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'sanitizeHtml',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }]; } });\n\nclass ToggleCommandComponent {\n    get name() {\n        return this.toolbarItem;\n    }\n    constructor(ngxeService, menuService) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.isActive = false;\n        this.disabled = false;\n        this.update = (view) => {\n            const { state } = view;\n            const command = ToggleCommands[this.name];\n            this.isActive = command.isActive(state);\n            this.disabled = !command.canExecute(state);\n        };\n    }\n    toggle(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        const command = ToggleCommands[this.name];\n        command.toggle()(state, dispatch);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    ngOnInit() {\n        this.html = this.ngxeService.getIcon(this.name);\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: ToggleCommandComponent, deps: [{ token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: ToggleCommandComponent, selector: \"ngx-toggle-command\", inputs: { toolbarItem: \"toolbarItem\" }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive\\\"\\n  [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name) | async\\\">\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: ToggleCommandComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-toggle-command', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive\\\"\\n  [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name) | async\\\">\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { toolbarItem: [{\n                type: Input\n            }] } });\n\nclass InsertCommandComponent {\n    get name() {\n        return this.toolbarItem;\n    }\n    constructor(ngxeService, menuService) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.disabled = false;\n        this.update = (view) => {\n            const { state } = view;\n            const command = InsertCommands[this.name];\n            this.disabled = !command.canExecute(state);\n        };\n    }\n    insert(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        const command = InsertCommands[this.name];\n        command.insert()(state, dispatch);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    ngOnInit() {\n        this.html = this.ngxeService.getIcon(this.name);\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: InsertCommandComponent, deps: [{ token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: InsertCommandComponent, selector: \"ngx-insert-command\", inputs: { toolbarItem: \"toolbarItem\" }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\"\\n  (mousedown)=\\\"insert($event)\\\" [title]=\\\"getTitle(name) | async\\\">\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: InsertCommandComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-insert-command', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\"\\n  (mousedown)=\\\"insert($event)\\\" [title]=\\\"getTitle(name) | async\\\">\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { toolbarItem: [{\n                type: Input\n            }] } });\n\nclass LinkComponent {\n    constructor(el, ngxeService, menuService) {\n        this.el = el;\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.canExecute = true;\n        this.setText = () => {\n            const { state: { selection, doc } } = this.editorView;\n            const { empty, from, to } = selection;\n            const selectedText = !empty ? doc.textBetween(from, to) : '';\n            if (selectedText) {\n                this.text.patchValue(selectedText);\n                this.text.disable();\n            }\n        };\n        this.update = (view) => {\n            const { state } = view;\n            this.isActive = Link.isActive(state, { strict: false });\n            this.canExecute = Link.canExecute(state);\n        };\n    }\n    get icon() {\n        return this.ngxeService.getIcon(this.isActive ? 'unlink' : 'link');\n    }\n    get title() {\n        return this.ngxeService.locals.get(this.isActive ? 'removeLink' : 'insertLink');\n    }\n    get href() {\n        return this.form.get('href');\n    }\n    get text() {\n        return this.form.get('text');\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hideForm();\n        }\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    hideForm() {\n        this.showPopup = false;\n        this.form.reset({\n            href: '',\n            text: '',\n            openInNewTab: true,\n        });\n        this.text.enable();\n    }\n    onMouseDown(e) {\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        if (this.isActive) {\n            Link.remove(state, dispatch);\n            return;\n        }\n        this.showPopup = !this.showPopup;\n        if (this.showPopup) {\n            this.setText();\n        }\n    }\n    insertLink(e) {\n        e.preventDefault();\n        const { text, href, openInNewTab } = this.form.getRawValue();\n        const { dispatch, state } = this.editorView;\n        const { selection } = state;\n        const attrs = {\n            title: href,\n            href,\n            target: openInNewTab ? '_blank' : '_self',\n        };\n        if (selection.empty) {\n            Link.insert(text, attrs)(state, dispatch);\n            this.editorView.focus();\n        }\n        else {\n            Link.update(attrs)(state, dispatch);\n        }\n        this.hideForm();\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.form = new FormGroup({\n            href: new FormControl('', [\n                Validators$1.required,\n                Validators$1.pattern(this.menuService.editor.linkValidationPattern),\n            ]),\n            text: new FormControl('', [Validators$1.required]),\n            openInNewTab: new FormControl(true),\n        });\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: LinkComponent, deps: [{ token: i0.ElementRef }, { token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: LinkComponent, selector: \"ngx-link\", host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title | async\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url') | async}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text') | async}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab') | async}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert') | async}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i4.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: LinkComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-link', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title | async\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url') | async}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text') | async}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab') | async}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert') | async}}</button>\\n\\n  </form>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nclass DropdownComponent {\n    constructor(ngxeService, menuService, el) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.el = el;\n        this.isDropdownOpen = false;\n        this.disabledItems = [];\n        this.update = (view) => {\n            const { state } = view;\n            this.disabledItems = [];\n            const activeItems = [];\n            this.items.forEach((item) => {\n                const command = ToggleCommands[item];\n                const isActive = command.isActive(state);\n                if (isActive) {\n                    activeItems.push(item);\n                }\n                if (!command.canExecute(state)) {\n                    this.disabledItems.push(item);\n                }\n            });\n            if (activeItems.length === 1) {\n                [this.activeItem] = activeItems;\n            }\n            else {\n                this.activeItem = null;\n            }\n        };\n    }\n    get isSelected() {\n        return Boolean(this.activeItem || this.isDropdownOpen);\n    }\n    get isDropdownDisabled() {\n        return this.disabledItems.length === this.items.length;\n    }\n    onDocumentClick(target) {\n        if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {\n            this.isDropdownOpen = false;\n        }\n    }\n    getName(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    toggleDropdown(e) {\n        e.preventDefault();\n        this.isDropdownOpen = !this.isDropdownOpen;\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onClick(e, item) {\n        e.preventDefault();\n        // consider only left click\n        if (e.button !== 0) {\n            return;\n        }\n        const command = ToggleCommands[item];\n        const { state, dispatch } = this.editorView;\n        command.toggle()(state, dispatch);\n        this.isDropdownOpen = false;\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: DropdownComponent, deps: [{ token: NgxEditorService }, { token: MenuService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: DropdownComponent, selector: \"ngx-dropdown\", inputs: { group: \"group\", items: \"items\" }, host: { listeners: { \"document:mousedown\": \"onDocumentClick($event.target)\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" [class.NgxEditor__Dropdown--Selected]=\\\"isSelected\\\"\\n  [class.NgxEditor--Disabled]=\\\"isDropdownDisabled\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group) | async}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\"\\n    (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item) | async}}\\n  </div>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: DropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-dropdown', template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" [class.NgxEditor__Dropdown--Selected]=\\\"isSelected\\\"\\n  [class.NgxEditor--Disabled]=\\\"isDropdownDisabled\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group) | async}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\"\\n    (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item) | async}}\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }, { type: i0.ElementRef }]; }, propDecorators: { group: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event.target']]\n            }] } });\n\nclass ImageComponent {\n    constructor(el, ngxeService, menuService) {\n        this.el = el;\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.form = new FormGroup({\n            src: new FormControl('', [\n                Validators$1.required,\n                Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)'),\n            ]),\n            alt: new FormControl(''),\n            title: new FormControl(''),\n        });\n        this.update = (view) => {\n            const { state } = view;\n            this.isActive = Image.isActive(state);\n        };\n    }\n    get icon() {\n        return this.ngxeService.getIcon('image');\n    }\n    get src() {\n        return this.form.get('src');\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hideForm();\n        }\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    hideForm() {\n        this.showPopup = false;\n        this.form.reset({\n            src: '',\n            alt: '',\n            title: '',\n        });\n    }\n    onMouseDown(e) {\n        if (e.button !== 0) {\n            return;\n        }\n        this.showPopup = !this.showPopup;\n        if (this.showPopup) {\n            this.fillForm();\n        }\n    }\n    fillForm() {\n        const { state } = this.editorView;\n        const { selection } = state;\n        if (selection instanceof NodeSelection && this.isActive) {\n            const { src, alt = '', title = '' } = selection.node.attrs;\n            this.form.setValue({\n                src,\n                alt,\n                title,\n            });\n        }\n    }\n    insertLink(e) {\n        e.preventDefault();\n        const { src, alt, title } = this.form.getRawValue();\n        const { dispatch, state } = this.editorView;\n        const attrs = {\n            alt,\n            title,\n        };\n        Image.insert(src, attrs)(state, dispatch);\n        this.editorView.focus();\n        this.hideForm();\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: ImageComponent, deps: [{ token: i0.ElementRef }, { token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: ImageComponent, selector: \"ngx-image\", host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\" [title]=\\\"getLabel('insertImage') | async\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url') | async}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText') | async}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title') | async}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert') | async}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: ImageComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-image', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\" [title]=\\\"getLabel('insertImage') | async\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url') | async}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText') | async}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title') | async}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert') | async}}</button>\\n\\n  </form>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nclass ColorPickerComponent {\n    constructor(el, menuService, ngxeService) {\n        this.el = el;\n        this.menuService = menuService;\n        this.ngxeService = ngxeService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.activeColors = [];\n        this.canExecute = true;\n        this.update = (view) => {\n            const { state } = view;\n            this.canExecute = this.command.canExecute(state);\n            this.isActive = this.command.isActive(state);\n            this.activeColors = [];\n            if (this.isActive) {\n                this.activeColors = this.command.getActiveColors(state);\n            }\n        };\n    }\n    get title() {\n        return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');\n    }\n    get icon() {\n        return this.ngxeService.getIcon(this.type === 'text_color' ? 'text_color' : 'color_fill');\n    }\n    get command() {\n        return this.type === 'text_color' ? TextColor : TextBackgroundColor;\n    }\n    getContrastYIQ(hexcolor) {\n        const color = hexcolor.replace('#', '');\n        const r = parseInt(color.substring(0, 2), 16);\n        const g = parseInt(color.substring(2, 4), 16);\n        const b = parseInt(color.substring(4, 6), 16);\n        const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n        return yiq >= 128 ? 'black' : 'white';\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hidePopup();\n        }\n    }\n    hidePopup() {\n        this.showPopup = false;\n    }\n    togglePopup(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        this.showPopup = !this.showPopup;\n    }\n    remove(e) {\n        e.preventDefault();\n        const { state, dispatch } = this.editorView;\n        this.command.remove()(state, dispatch);\n        this.hidePopup();\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onColorSelect(e, color) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        if (this.type === 'text_color') {\n            const attrs = { color };\n            this.command.apply(attrs)(state, dispatch);\n        }\n        else {\n            const attrs = { backgroundColor: color };\n            this.command.apply(attrs)(state, dispatch);\n        }\n        if (!this.editorView.hasFocus()) {\n            this.editorView.focus();\n        }\n        this.hidePopup();\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: ColorPickerComponent, deps: [{ token: i0.ElementRef }, { token: MenuService }, { token: NgxEditorService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: ColorPickerComponent, selector: \"ngx-color-picker\", inputs: { presets: \"presets\", type: \"type\" }, host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title | async\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove') | async}}\\n  </button>\\n</div>\\n\", styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: ColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-color-picker', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title | async\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove') | async}}\\n  </button>\\n</div>\\n\", styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MenuService }, { type: NgxEditorService }]; }, propDecorators: { presets: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nconst DEFAULT_TOOLBAR = [\n    ['bold', 'italic'],\n    ['code', 'blockquote'],\n    ['underline', 'strike'],\n    ['ordered_list', 'bullet_list'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n    ['align_left', 'align_center', 'align_right', 'align_justify'],\n    ['format_clear'],\n];\nconst TOOLBAR_MINIMAL = [\n    ['bold', 'italic'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n];\nconst TOOLBAR_FULL = [\n    ['bold', 'italic'],\n    ['code', 'blockquote'],\n    ['underline', 'strike'],\n    ['ordered_list', 'bullet_list'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n    ['align_left', 'align_center', 'align_right', 'align_justify'],\n    ['horizontal_rule'],\n];\nconst DEFAULT_COLOR_PRESETS = [\n    '#b60205',\n    '#d93f0b',\n    '#fbca04',\n    '#0e8a16',\n    '#006b75',\n    '#1d76db',\n    '#0052cc',\n    '#5319e7',\n    '#e99695',\n    '#f9d0c4',\n    '#fef2c0',\n    '#c2e0c6',\n    '#bfdadc',\n    '#c5def5',\n    '#bfd4f2',\n    '#d4c5f9',\n];\nclass MenuComponent {\n    constructor(menuService) {\n        this.menuService = menuService;\n        this.toolbar = TOOLBAR_MINIMAL;\n        this.colorPresets = DEFAULT_COLOR_PRESETS;\n        this.disabled = false;\n        this.customMenuRef = null;\n        this.dropdownPlacement = 'bottom';\n        this.toggleCommands = [\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'code',\n            'blockquote',\n            'ordered_list',\n            'bullet_list',\n            'align_left',\n            'align_center',\n            'align_right',\n            'align_justify',\n        ];\n        this.insertCommands = [\n            'horizontal_rule',\n            'format_clear',\n        ];\n        this.iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];\n        this.dropdownContainerClass = ['NgxEditor__Dropdown'];\n        this.seperatorClass = ['NgxEditor__Seperator'];\n    }\n    get presets() {\n        const col = 8;\n        const colors = [];\n        this.colorPresets.forEach((color, index) => {\n            const row = Math.floor(index / col);\n            if (!colors[row]) {\n                colors.push([]);\n            }\n            colors[row].push(color);\n        });\n        return colors;\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    isDropDown(item) {\n        if (item?.heading) {\n            return true;\n        }\n        return false;\n    }\n    getDropdownItems(item) {\n        return item;\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new NgxEditorError('Required editor instance to initialize menu component');\n        }\n        this.menuService.editor = this.editor;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: MenuComponent, deps: [{ token: MenuService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: MenuComponent, selector: \"ngx-editor-menu\", inputs: { toolbar: \"toolbar\", colorPresets: \"colorPresets\", disabled: \"disabled\", editor: \"editor\", customMenuRef: \"customMenuRef\", dropdownPlacement: \"dropdownPlacement\" }, providers: [MenuService], ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <ngx-insert-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"insertCommands.includes(item)\\\">\\n      </ngx-insert-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: ToggleCommandComponent, selector: \"ngx-toggle-command\", inputs: [\"toolbarItem\"] }, { kind: \"component\", type: InsertCommandComponent, selector: \"ngx-insert-command\", inputs: [\"toolbarItem\"] }, { kind: \"component\", type: LinkComponent, selector: \"ngx-link\" }, { kind: \"component\", type: DropdownComponent, selector: \"ngx-dropdown\", inputs: [\"group\", \"items\"] }, { kind: \"component\", type: ImageComponent, selector: \"ngx-image\" }, { kind: \"component\", type: ColorPickerComponent, selector: \"ngx-color-picker\", inputs: [\"presets\", \"type\"] }, { kind: \"pipe\", type: i3.KeyValuePipe, name: \"keyvalue\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: MenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor-menu', providers: [MenuService], template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <ngx-insert-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"insertCommands.includes(item)\\\">\\n      </ngx-insert-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: MenuService }]; }, propDecorators: { toolbar: [{\n                type: Input\n            }], colorPresets: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], editor: [{\n                type: Input\n            }], customMenuRef: [{\n                type: Input\n            }], dropdownPlacement: [{\n                type: Input\n            }] } });\n\nclass BubbleComponent {\n    constructor(sanitizeHTML, ngxeService) {\n        this.sanitizeHTML = sanitizeHTML;\n        this.ngxeService = ngxeService;\n        this.execulableItems = [];\n        this.activeItems = [];\n        this.toolbar = [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['ordered_list', 'bullet_list', 'blockquote', 'code'],\n            ['align_left', 'align_center', 'align_right', 'align_justify'],\n        ];\n        this.toggleCommands = [\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'ordered_list',\n            'bullet_list',\n            'blockquote',\n            'code',\n            'align_left',\n            'align_center',\n            'align_right',\n            'align_justify',\n        ];\n    }\n    get view() {\n        return this.editor.view;\n    }\n    getIcon(name) {\n        return this.sanitizeHTML.transform(this.ngxeService.getIcon(name));\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onClick(e, commandName) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.view;\n        const command = ToggleCommands[commandName];\n        command.toggle()(state, dispatch);\n    }\n    update(view) {\n        this.activeItems = [];\n        this.execulableItems = [];\n        const { state } = view;\n        this.toggleCommands.forEach((toolbarItem) => {\n            const command = ToggleCommands[toolbarItem];\n            const isActive = command.isActive(state);\n            if (isActive) {\n                this.activeItems.push(toolbarItem);\n            }\n            const canExecute = command.canExecute(state);\n            if (canExecute) {\n                this.execulableItems.push(toolbarItem);\n            }\n        });\n    }\n    ngOnInit() {\n        this.updateSubscription = this.editor.update\n            .subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: BubbleComponent, deps: [{ token: SanitizeHtmlPipe }, { token: NgxEditorService }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: BubbleComponent, selector: \"ngx-bubble\", inputs: { editor: \"editor\" }, ngImport: i0, template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item) | async\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"pipe\", type: i3.AsyncPipe, name: \"async\" }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: BubbleComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-bubble', template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item) | async\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: SanitizeHtmlPipe }, { type: NgxEditorService }]; }, propDecorators: { editor: [{\n                type: Input\n            }] } });\n\nclass FloatingMenuComponent {\n    constructor(el) {\n        this.el = el;\n        this.autoPlace = false;\n        this.posLeft = 0;\n        this.posTop = 0;\n        this.showMenu = false;\n        this.dragging = false;\n    }\n    get display() {\n        return {\n            visibility: this.showMenu ? 'visible' : 'hidden',\n            opacity: this.showMenu ? '1' : '0',\n            top: `${this.posTop}px`,\n            left: `${this.posLeft}px`,\n        };\n    }\n    get view() {\n        return this.editor.view;\n    }\n    onMouseDown(e) {\n        const target = e.target;\n        if (this.el.nativeElement.contains(target) && target.nodeName !== 'INPUT') {\n            e.preventDefault();\n            return;\n        }\n        this.dragging = true;\n    }\n    onKeyDown(e) {\n        const target = e.target;\n        if (target.nodeName === 'INPUT') {\n            return;\n        }\n        this.dragging = true;\n        this.hide();\n    }\n    onMouseUp(e) {\n        const target = e.target;\n        if (this.el.nativeElement.contains(target) || target.nodeName === 'INPUT') {\n            e.preventDefault();\n            return;\n        }\n        this.dragging = false;\n        this.useUpdate();\n    }\n    onKeyUp(e) {\n        const target = e.target;\n        if (target.nodeName === 'INPUT') {\n            return;\n        }\n        this.dragging = false;\n        this.useUpdate();\n    }\n    useUpdate() {\n        if (!this.view) {\n            return;\n        }\n        this.update(this.view);\n    }\n    hide() {\n        this.showMenu = false;\n    }\n    show() {\n        this.showMenu = true;\n    }\n    async calculateBubblePosition(view) {\n        const { state: { selection } } = view;\n        const { from, to } = selection;\n        const start = view.coordsAtPos(from);\n        const end = view.coordsAtPos(to);\n        const selectionElement = {\n            getBoundingClientRect() {\n                if (selection instanceof NodeSelection) {\n                    const node = view.nodeDOM(from);\n                    return node.getBoundingClientRect();\n                }\n                const { top, left } = start;\n                const { bottom, right } = end;\n                return {\n                    x: left,\n                    y: top,\n                    top,\n                    bottom,\n                    left,\n                    right,\n                    width: right - left,\n                    height: bottom - top,\n                };\n            },\n        };\n        // the floating bubble itself\n        const bubbleEl = this.el.nativeElement;\n        const { x: left, y: top } = await computePosition(selectionElement, bubbleEl, {\n            placement: 'top',\n            middleware: [\n                offset(5),\n                this.autoPlace && autoPlacement({\n                    boundary: view.dom,\n                    padding: 5,\n                    allowedPlacements: ['top', 'bottom'],\n                }),\n                {\n                    // prevent overflow on right and left side\n                    // since only top and bottom placements are allowed\n                    // autoplacement can't handle overflows on the right and left\n                    name: 'overflowMiddleware',\n                    async fn(middlewareArgs) {\n                        const overflow = await detectOverflow(middlewareArgs, {\n                            boundary: view.dom,\n                            padding: 5,\n                        });\n                        // overflows left\n                        if (overflow.left > 0) {\n                            return {\n                                x: middlewareArgs.x + overflow.left,\n                            };\n                        }\n                        // overflows right\n                        if (overflow.right > 0) {\n                            return {\n                                x: middlewareArgs.x - overflow.right,\n                            };\n                        }\n                        return {};\n                    },\n                },\n            ].filter(Boolean),\n        });\n        return {\n            left,\n            top,\n        };\n    }\n    canShowMenu(view) {\n        const { state } = view;\n        const { selection } = state;\n        const { empty } = selection;\n        if (selection instanceof NodeSelection) {\n            if (selection.node.type.name === 'image') {\n                return false;\n            }\n        }\n        const hasFocus = this.view.hasFocus();\n        if (!hasFocus || empty || this.dragging) {\n            this.hide();\n            return false;\n        }\n        return true;\n    }\n    update(view) {\n        const canShowMenu = this.canShowMenu(view);\n        if (!canShowMenu) {\n            this.hide();\n            return;\n        }\n        this.calculateBubblePosition(this.view).then(({ top, left }) => {\n            if (!this.canShowMenu) {\n                this.hide();\n                return;\n            }\n            this.posLeft = left;\n            this.posTop = top;\n            this.show();\n        });\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new NgxEditorError('Required editor instance to initialize floating menu component');\n        }\n        this.updateSubscription = this.editor.update\n            .subscribe((view) => {\n            this.update(view);\n        });\n        this.resizeSubscription = fromEvent(window, 'resize').pipe(throttleTime(500, asyncScheduler, { leading: true, trailing: true })).subscribe(() => {\n            this.useUpdate();\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n        this.resizeSubscription.unsubscribe();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: FloatingMenuComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.2.1\", type: FloatingMenuComponent, selector: \"ngx-editor-floating-menu\", inputs: { editor: \"editor\", autoPlace: \"autoPlace\" }, host: { listeners: { \"document:mousedown\": \"onMouseDown($event)\", \"document:keydown\": \"onKeyDown($event)\", \"document:mouseup\": \"onMouseUp($event)\", \"document:keyup\": \"onKeyUp($event)\" }, properties: { \"style\": \"this.display\" } }, ngImport: i0, template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: BubbleComponent, selector: \"ngx-bubble\", inputs: [\"editor\"] }] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: FloatingMenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor-floating-menu', template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { display: [{\n                type: HostBinding,\n                args: ['style']\n            }], editor: [{\n                type: Input\n            }], autoPlace: [{\n                type: Input\n            }], onMouseDown: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['document:keydown', ['$event']]\n            }], onMouseUp: [{\n                type: HostListener,\n                args: ['document:mouseup', ['$event']]\n            }], onKeyUp: [{\n                type: HostListener,\n                args: ['document:keyup', ['$event']]\n            }] } });\n\nclass MenuModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: MenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.1\", ngImport: i0, type: MenuModule, declarations: [\n            // pipes\n            SanitizeHtmlPipe,\n            // components\n            MenuComponent,\n            ToggleCommandComponent,\n            InsertCommandComponent,\n            LinkComponent,\n            DropdownComponent,\n            ImageComponent,\n            ColorPickerComponent,\n            FloatingMenuComponent,\n            BubbleComponent], imports: [CommonModule,\n            ReactiveFormsModule], exports: [MenuComponent,\n            FloatingMenuComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: MenuModule, providers: [\n            SanitizeHtmlPipe,\n        ], imports: [CommonModule,\n            ReactiveFormsModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: MenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                    ],\n                    declarations: [\n                        // pipes\n                        SanitizeHtmlPipe,\n                        // components\n                        MenuComponent,\n                        ToggleCommandComponent,\n                        InsertCommandComponent,\n                        LinkComponent,\n                        DropdownComponent,\n                        ImageComponent,\n                        ColorPickerComponent,\n                        FloatingMenuComponent,\n                        BubbleComponent,\n                    ],\n                    providers: [\n                        SanitizeHtmlPipe,\n                    ],\n                    exports: [\n                        MenuComponent,\n                        FloatingMenuComponent,\n                    ],\n                }]\n        }] });\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\nconst defaultConfig = {\n    locals: defaults,\n    icons,\n};\nclass NgxEditorModule {\n    static forRoot(config = defaultConfig) {\n        return {\n            ngModule: NgxEditorModule,\n            providers: [\n                {\n                    provide: NGX_EDITOR_CONFIG_TOKEN,\n                    useValue: config,\n                },\n                {\n                    provide: NgxEditorServiceConfig,\n                    useFactory: provideMyServiceOptions,\n                    deps: [NGX_EDITOR_CONFIG_TOKEN],\n                },\n            ],\n        };\n    }\n    static forChild(config = defaultConfig) {\n        return {\n            ngModule: NgxEditorModule,\n            providers: [\n                {\n                    provide: NGX_EDITOR_CONFIG_TOKEN,\n                    useValue: config,\n                },\n                {\n                    provide: NgxEditorServiceConfig,\n                    useFactory: provideMyServiceOptions,\n                    deps: [NGX_EDITOR_CONFIG_TOKEN],\n                },\n                NgxEditorService,\n            ],\n        };\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorModule, declarations: [NgxEditorComponent,\n            ImageViewComponent], imports: [CommonModule,\n            MenuModule], exports: [NgxEditorComponent,\n            MenuComponent,\n            FloatingMenuComponent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorModule, imports: [CommonModule,\n            MenuModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.2.1\", ngImport: i0, type: NgxEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MenuModule,\n                    ],\n                    providers: [],\n                    declarations: [\n                        NgxEditorComponent,\n                        ImageViewComponent,\n                    ],\n                    exports: [\n                        NgxEditorComponent,\n                        MenuComponent,\n                        FloatingMenuComponent,\n                    ],\n                }]\n        }] });\n\nconst isEmptyInputValue = (value) => {\n    // we don't check for string here so it also works with arrays\n    return value === null || value.length === 0;\n};\nconst hasValidLength = (value) => {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value !== null && typeof value.length === 'number';\n};\nconst isDocEmpty = (doc) => {\n    if (!doc) {\n        return true;\n    }\n    const { childCount, firstChild } = doc;\n    return Boolean(childCount === 1 && firstChild?.isTextblock && firstChild.content.size === 0);\n};\n// @dynamic\nclass Validators {\n    static required(userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const isEmpty = isDocEmpty(doc);\n            if (!isEmpty) {\n                return null;\n            }\n            return {\n                required: true,\n            };\n        };\n    }\n    static maxLength(maxLength, userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const value = doc.textContent;\n            if (hasValidLength(value) && value.length > maxLength) {\n                return {\n                    maxlength: {\n                        requiredLength: maxLength,\n                        actualLength: value.length,\n                    },\n                };\n            }\n            return null;\n        };\n    }\n    static minLength(minLength, userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const value = doc.textContent;\n            if (isEmptyInputValue(value) || !hasValidLength(value)) {\n                // don't validate empty values to allow optional controls\n                // don't validate values without `length` property\n                return null;\n            }\n            if (value.length < minLength) {\n                return {\n                    minlength: {\n                        requiredLength: minLength, actualLength: value.length,\n                    },\n                };\n            }\n            return null;\n        };\n    }\n}\n\nconst execMark = (name, toggle = false) => {\n    return (state, dispatch) => {\n        const command = new Mark(name);\n        if (!toggle) {\n            return command.apply()(state, dispatch);\n        }\n        return command.toggle()(state, dispatch);\n    };\n};\nclass EditorCommands {\n    constructor(view) {\n        this.applyTrx = (tr) => {\n            this.state = this.state.apply(tr ?? this.tr);\n            this.tr = this.state.tr;\n            this.tr.setMeta('APPLIED_TRX', true);\n        };\n        this.dispatch = (tr) => {\n            this.applyTrx(tr);\n        };\n        if (!view) {\n            throw new NgxEditorError('Required view to initialize commands.');\n        }\n        this.view = view;\n        this.state = view.state;\n        this.tr = this.view.state.tr;\n    }\n    exec() {\n        // No changes applied\n        if (!this.tr.getMeta('APPLIED_TRX')) {\n            return false;\n        }\n        const forceEmit = !this.view.state.doc.eq(this.state.doc);\n        this.view.updateState(this.state);\n        const tr = this.tr\n            .setMeta('FORCE_EMIT', forceEmit);\n        this.view.dispatch(tr);\n        return true;\n    }\n    focus(position = 'end') {\n        const selection = position === 'start'\n            ? Selection.atStart(this.state.doc)\n            : Selection.atEnd(this.state.doc);\n        this.tr.setSelection(selection);\n        this.applyTrx();\n        this.view.focus();\n        return this;\n    }\n    scrollIntoView() {\n        this.tr.scrollIntoView();\n        this.applyTrx();\n        return this;\n    }\n    insertText(text) {\n        this.tr.insertText(text);\n        this.applyTrx();\n        return this;\n    }\n    insertNewLine() {\n        const newLineCommands = [newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock];\n        chainCommands(...newLineCommands)(this.state, this.dispatch);\n        return this;\n    }\n    applyMark(name) {\n        execMark(name, false)(this.state, this.dispatch);\n        return this;\n    }\n    toggleMark(name) {\n        execMark(name, true)(this.state, this.dispatch);\n        return this;\n    }\n    bold() {\n        execMark('strong')(this.state, this.dispatch);\n        return this;\n    }\n    toggleBold() {\n        execMark('strong', true)(this.state, this.dispatch);\n        return this;\n    }\n    italics() {\n        execMark('em')(this.state, this.dispatch);\n        return this;\n    }\n    toggleItalics() {\n        execMark('em', true)(this.state, this.dispatch);\n        return this;\n    }\n    underline() {\n        execMark('u')(this.state, this.dispatch);\n        return this;\n    }\n    toggleUnderline() {\n        execMark('u', true)(this.state, this.dispatch);\n        return this;\n    }\n    strike() {\n        execMark('s')(this.state, this.dispatch);\n        return this;\n    }\n    toggleStrike() {\n        execMark('s', true)(this.state, this.dispatch);\n        return this;\n    }\n    code() {\n        execMark('code')(this.state, this.dispatch);\n        return this;\n    }\n    toggleCode() {\n        execMark('code', true)(this.state, this.dispatch);\n        return this;\n    }\n    toggleOrderedList() {\n        const command = new ListItem(false);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    toggleBulletList() {\n        const command = new ListItem(true);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    toggleHeading(level) {\n        const command = new Heading(level);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    insertLink(text, attrs) {\n        const command = new Link$1();\n        command.insert(text, attrs)(this.state, this.dispatch);\n        return this;\n    }\n    updateLink(attrs) {\n        const command = new Link$1();\n        command.update(attrs)(this.state, this.dispatch);\n        return this;\n    }\n    insertImage(src, attrs = {}) {\n        const command = new Image$1();\n        command.insert(src, attrs)(this.state, this.dispatch);\n        return this;\n    }\n    textColor(color) {\n        const command = new TextColor$1('text_color');\n        command.apply({ color })(this.state, this.dispatch);\n        return this;\n    }\n    backgroundColor(color) {\n        const command = new TextColor$1('text_background_color');\n        command.apply({ backgroundColor: color })(this.state, this.dispatch);\n        return this;\n    }\n    removeTextColor() {\n        const command = new TextColor$1('text_color');\n        command.remove()(this.state, this.dispatch);\n        return this;\n    }\n    removeBackgroundColor() {\n        const command = new TextColor$1('text_background_color');\n        command.remove()(this.state, this.dispatch);\n        return this;\n    }\n    align(p) {\n        const command = new TextAlign(p);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    insertHTML(html) {\n        const { selection, schema, tr } = this.state;\n        const { from, to } = selection;\n        const element = document.createElement('div');\n        element.innerHTML = isString(html) ? html.trim() : html;\n        const slice = DOMParser.fromSchema(schema).parseSlice(element);\n        const transaction = tr.replaceRange(from, to, slice);\n        this.applyTrx(transaction);\n        return this;\n    }\n}\n\nconst isMacOs = typeof navigator !== 'undefined'\n    ? (/Mac/).test(navigator.platform)\n    : false;\n// Input rules ref: https://github.com/ProseMirror/prosemirror-example-setup/\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nconst blockQuoteRule = (nodeType) => {\n    return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nconst orderedListRule = (nodeType) => {\n    return wrappingInputRule(/^(?:\\d+)\\.\\s$/, nodeType, (match) => ({ order: Number(match[1]) }), (match, node) => node.childCount + node.attrs['order'] === Number(match[1]));\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nconst bulletListRule = (nodeType) => {\n    return wrappingInputRule(/^\\s*(?:[-+*])\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nconst codeBlockRule = (nodeType) => {\n    return textblockTypeInputRule(/^```$/, nodeType);\n};\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nconst headingRule = (nodeType, maxLevel) => {\n    return textblockTypeInputRule(new RegExp(`^(#{1,${maxLevel}})\\\\s$`), nodeType, (match) => ({ level: match[1].length }));\n};\n// : (MarkType) → InputRule\n// Wraps matching text with bold mark\nconst boldRule = (markType) => {\n    // eslint-disable-next-line prefer-named-capture-group\n    return markInputRule(/(?:^|\\s)(?:(\\*\\*|__)(?:([^*_]+))(\\*\\*|__))$/, markType);\n};\n// : (MarkType) → InputRule\n// Wraps matching text with em mark\nconst emRule = (markType) => {\n    // eslint-disable-next-line prefer-named-capture-group\n    return markInputRule(/(?:^|\\s)(?:(\\*|_)(?:([^*_]+))(\\*|_))$/, markType);\n};\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nconst buildInputRules = (schema) => {\n    const rules = smartQuotes.concat(ellipsis, emDash);\n    rules.push(boldRule(schema.marks['strong']));\n    rules.push(emRule(schema.marks['em']));\n    rules.push(blockQuoteRule(schema.nodes['blockquote']));\n    rules.push(orderedListRule(schema.nodes['ordered_list']));\n    rules.push(bulletListRule(schema.nodes['bullet_list']));\n    rules.push(codeBlockRule(schema.nodes['code_block']));\n    rules.push(headingRule(schema.nodes['heading'], 6));\n    return inputRules({ rules });\n};\nconst getKeyboardShortcuts = (schema, options) => {\n    const historyKeyMap = {};\n    historyKeyMap['Mod-z'] = undo;\n    if (isMacOs) {\n        historyKeyMap['Shift-Mod-z'] = redo;\n    }\n    else {\n        historyKeyMap['Mod-y'] = redo;\n    }\n    const plugins = [\n        keymap({\n            'Mod-b': toggleMark(schema.marks['strong']),\n            'Mod-i': toggleMark(schema.marks['em']),\n            'Mod-u': toggleMark(schema.marks['u']),\n            'Mod-`': toggleMark(schema.marks['code']),\n        }),\n        keymap({\n            'Enter': splitListItem(schema.nodes['list_item']),\n            'Shift-Enter': chainCommands(exitCode, (state, dispatch) => {\n                const { tr } = state;\n                const br = schema.nodes['hard_break'];\n                dispatch(tr.replaceSelectionWith(br.create()).scrollIntoView());\n                return true;\n            }),\n            'Mod-[': liftListItem(schema.nodes['list_item']),\n            'Mod-]': sinkListItem(schema.nodes['list_item']),\n            'Tab': sinkListItem(schema.nodes['list_item']),\n        }),\n        keymap(baseKeymap),\n    ];\n    if (options.history) {\n        plugins.push(keymap(historyKeyMap));\n    }\n    return plugins;\n};\nconst getDefaultPlugins = (schema, options) => {\n    const plugins = [];\n    if (options.keyboardShortcuts) {\n        plugins.push(...getKeyboardShortcuts(schema, { history: options.history }));\n    }\n    if (options.history) {\n        plugins.push(history());\n    }\n    if (options.inputRules) {\n        plugins.push(buildInputRules(schema));\n    }\n    return plugins;\n};\n\nconst defaultFeatures = {\n    linkOnPaste: true,\n    resizeImage: true,\n};\nconst DEFAULT_OPTIONS = {\n    content: null,\n    history: true,\n    keyboardShortcuts: true,\n    inputRules: true,\n    schema: schema,\n    plugins: [],\n    nodeViews: {},\n    attributes: {},\n    features: defaultFeatures,\n    handleScrollToSelection: null,\n    linkValidationPattern: '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)|(mailto:.*[@].*)',\n};\nclass Editor {\n    constructor(options = DEFAULT_OPTIONS) {\n        this.valueChangesSubject = new Subject();\n        this.updateSubject = new Subject();\n        this.options = { ...DEFAULT_OPTIONS, ...options };\n        this.createEditor();\n    }\n    get valueChanges() {\n        return this.valueChangesSubject.asObservable();\n    }\n    get update() {\n        return this.updateSubject.asObservable();\n    }\n    get schema() {\n        return this.options.schema || schema;\n    }\n    get linkValidationPattern() {\n        return this.options.linkValidationPattern;\n    }\n    get commands() {\n        return new EditorCommands(this.view);\n    }\n    get features() {\n        return { ...defaultFeatures, ...this.options.features };\n    }\n    handleTransactions(tr) {\n        const state = this.view.state.apply(tr);\n        this.view.updateState(state);\n        this.updateSubject.next(this.view);\n        if (!tr.docChanged && !tr.getMeta('FORCE_EMIT')) {\n            return;\n        }\n        const json = state.doc.toJSON();\n        this.valueChangesSubject.next(json);\n    }\n    createEditor() {\n        const { options, schema } = this;\n        const { content = null, nodeViews } = options;\n        const { history = true, keyboardShortcuts = true, inputRules = true } = options;\n        const doc = parseContent(content, schema);\n        const plugins = options.plugins ?? [];\n        const attributes = options.attributes ?? {};\n        const defaultPlugins = getDefaultPlugins(schema, {\n            history,\n            keyboardShortcuts,\n            inputRules,\n        });\n        this.view = new EditorView(null, {\n            state: EditorState.create({\n                doc,\n                schema,\n                plugins: [...defaultPlugins, ...plugins],\n            }),\n            nodeViews,\n            dispatchTransaction: this.handleTransactions.bind(this),\n            attributes,\n            handleScrollToSelection: options.handleScrollToSelection,\n        });\n    }\n    setContent(content) {\n        if (isNil(content)) {\n            return;\n        }\n        const { state } = this.view;\n        const { tr, doc } = state;\n        const newDoc = parseContent(content, this.schema);\n        tr.replaceWith(0, state.doc.content.size, newDoc);\n        // don't emit if both content is same\n        if (doc.eq(tr.doc)) {\n            return;\n        }\n        if (!tr.docChanged) {\n            return;\n        }\n        this.view.dispatch(tr);\n    }\n    registerPlugin(plugin) {\n        const { state } = this.view;\n        const plugins = [...state.plugins, plugin];\n        const newState = state.reconfigure({ plugins });\n        this.view.updateState(newState);\n    }\n    destroy() {\n        this.view.destroy();\n    }\n}\n\n/*\n * Public API Surface of ngx-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TOOLBAR, Editor, FloatingMenuComponent, ImageViewComponent, MenuComponent, NGX_EDITOR_CONFIG_TOKEN, NgxEditorComponent, NgxEditorModule, NgxEditorService, TOOLBAR_FULL, TOOLBAR_MINIMAL, Validators, emptyDoc, getKeyboardShortcuts, parseContent, provideMyServiceOptions, toDoc, toHTML };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}